#import "android_widget_CompoundButton.h"
#import "android_widget_CompoundButton_OnCheckedChangeListener.h"
#import "org_me_apertium_MainActivity.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_me_apertium_MainActivity_1.h"


@implementation org_me_apertium_MainActivity_1;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_me_apertium_MainActivity_1") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        org_me_apertium_MainActivity_1_this_0 = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [org_me_apertium_MainActivity_1_this_0 release];
    [super dealloc];
}

- (org_me_apertium_MainActivity*) _GET_this_0
{
    return [[org_me_apertium_MainActivity_1_this_0 retain] autorelease];
}

- (void) _PUT_this_0: (org_me_apertium_MainActivity*) v
{
    [v retain];
    [org_me_apertium_MainActivity_1_this_0 release];
    org_me_apertium_MainActivity_1_this_0 = v;
}

- (void) __init_org_me_apertium_MainActivity_1___org_me_apertium_MainActivity :(org_me_apertium_MainActivity*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_me_apertium_MainActivity_1*) _op2.o) _PUT_this_0: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [((super)) __init_java_lang_Object__];
    label1:;
    [_pool release];
    return;
}


- (void) onCheckedChanged___android_widget_CompoundButton_boolean :(android_widget_CompoundButton*)n1 :(int)n2
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[3];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    _locals[2].i = n2;
    label2:;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label0;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_me_apertium_MainActivity_1*) _op1.o)  _GET_this_0];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.i = [org_me_apertium_MainActivity access$002___org_me_apertium_MainActivity_boolean:_stack[_sp + 0].o:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _sp--;
    goto label1;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_me_apertium_MainActivity_1*) _op1.o)  _GET_this_0];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [org_me_apertium_MainActivity access$002___org_me_apertium_MainActivity_boolean:_stack[_sp + 0].o:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _sp--;
    label1:;
    [_pool release];
    return;
}



@end

