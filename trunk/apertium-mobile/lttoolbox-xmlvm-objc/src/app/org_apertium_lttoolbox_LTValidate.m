#import "org_xml_sax_SAXParseException.h"
#import "javax_xml_validation_Schema.h"
#import "javax_xml_validation_SchemaFactory.h"
#import "javax_xml_transform_Source.h"
#import "java_net_MalformedURLException.h"
#import "java_lang_StringBuilder.h"
#import "java_lang_String.h"
#import "java_io_PrintStream.h"
#import "java_lang_System.h"
#import "javax_xml_validation_Validator.h"
#import "java_net_URL.h"
#import "java_lang_Exception.h"
#import "java_lang_Class.h"
#import "javax_xml_transform_stream_StreamSource.h"
#import "java_io_FileNotFoundException.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_apertium_lttoolbox_LTValidate.h"

java_lang_String* _STATIC_org_apertium_lttoolbox_LTValidate_PACKAGE_VERSION = @"0.1j";

@implementation org_apertium_lttoolbox_LTValidate;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_apertium_lttoolbox_LTValidate") == 0) {
        _STATIC_org_apertium_lttoolbox_LTValidate_PACKAGE_VERSION = (id) [NSNull null];
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    [super dealloc];
}

+ (java_lang_String*) _GET_PACKAGE_VERSION
{
    return [[_STATIC_org_apertium_lttoolbox_LTValidate_PACKAGE_VERSION retain] autorelease];
}

+ (void) _PUT_PACKAGE_VERSION: (java_lang_String*) v
{
    [v retain];
    [_STATIC_org_apertium_lttoolbox_LTValidate_PACKAGE_VERSION release];
    _STATIC_org_apertium_lttoolbox_LTValidate_PACKAGE_VERSION = v;
}

- (void) __init_org_apertium_lttoolbox_LTValidate__
{
    XMLVMElem _stack[1];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [((super)) __init_java_lang_Object__];
    label1:;
    [_pool release];
    return;
}


+ (void) usage__
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[0];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" v0.1j: validate an XML file according to a schema\012USAGE : LTValidate -dix dictionary.xml\012        LTValidate -acx dictionary.acx";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].i = -1;
    _sp -= 1;
    [java_lang_System exit___int:_stack[_sp + 0].i];
    [_pool release];
    return;
}


+ (int) validateDix___java_lang_String :(java_lang_String*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label0:;
    _stack[_sp++].o = [org_apertium_lttoolbox_LTValidate getClass__];
    _stack[_sp++].o = @"/dix.xsd";
    _sp -= 2;
    _op1.o = [((java_lang_Class*) _stack[_sp].o) getResource___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateXmlSchema___java_net_URL_java_lang_String:_stack[_sp + 0].o:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    label1:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}


+ (int) validateAcx___java_lang_String :(java_lang_String*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label0:;
    _stack[_sp++].o = [org_apertium_lttoolbox_LTValidate getClass__];
    _stack[_sp++].o = @"/acx.xsd";
    _sp -= 2;
    _op1.o = [((java_lang_Class*) _stack[_sp].o) getResource___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateXmlSchema___java_net_URL_java_lang_String:_stack[_sp + 0].o:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    label1:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}


+ (int) validateXmlSchema___java_net_URL_java_lang_String :(java_net_URL*)n1 :(java_lang_String*)n2
{
    XMLVMElem _stack[4];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    _locals[1].o = n2;
    label2:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"schemaUrl = ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_Object:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = @"http://www.w3.org/2001/XMLSchema";
    _sp -= 1;
    _op1.o = [javax_xml_validation_SchemaFactory newInstance___java_lang_String:_stack[_sp + 0].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[2].o = _op1.o;
    label6:;
    @try {
    @try {
    @try {
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.o = [((javax_xml_validation_SchemaFactory*) _stack[_sp].o) newSchema___java_net_URL:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label10:;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.o = [((javax_xml_validation_Schema*) _stack[_sp].o) newValidator__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[javax_xml_transform_stream_StreamSource alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].o = _locals[1].o;
    _sp -= 2;
    [((javax_xml_transform_stream_StreamSource*) _stack[_sp].o) __init_javax_xml_transform_stream_StreamSource___java_lang_String:_stack[_sp + 1].o];
    _sp -= 2;
    [((javax_xml_validation_Validator*) _stack[_sp].o) validate___javax_xml_transform_Source:_stack[_sp + 1].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"The file ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[1].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" is valid considering the schema ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_Object:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].i = 1;
    } @catch (org_xml_sax_SAXParseException* _ex) {
        _stack[_sp++].o = _ex;
        goto label11;
    }
    } @catch (java_io_FileNotFoundException* _ex) {
        _stack[_sp++].o = _ex;
        goto label17;
    }
    } @catch (java_lang_Exception* _ex) {
        _stack[_sp++].o = _ex;
        goto label18;
    }
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label11:;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label12:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"At line ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [((org_xml_sax_SAXParseException*) _stack[_sp].o) getLineNumber__];
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @", column ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [((org_xml_sax_SAXParseException*) _stack[_sp].o) getColumnNumber__];
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @":\012";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.o = [((org_xml_sax_SAXParseException*) _stack[_sp].o) getLocalizedMessage__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label13:;
    goto label0;
    label17:;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label14:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"File not found: ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.o = [((java_io_FileNotFoundException*) _stack[_sp].o) getLocalizedMessage__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label15:;
    goto label0;
    label18:;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label8:;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    [((java_lang_Exception*) _stack[_sp].o) printStackTrace__];
    label0:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"The file ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[1].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" is NOT valid considering the schema ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_Object:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].i = 0;
    label3:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}


+ (void) main___java_lang_String_ARRAYTYPE :(XMLVMArray*)n1
{
    XMLVMElem _stack[4];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label15:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[1].i = _op1.i;
    label17:;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    label19:;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i < _op2.i) goto label0;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 2;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label1;
    label0:;
    _sp -= 0;
    [org_apertium_lttoolbox_LTValidate usage__];
    label1:;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label2;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label23:;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].o = @".dix";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) endsWith___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label3;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateDix___java_lang_String:_stack[_sp + 0].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    goto label4;
    label3:;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].o = @".acx";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) endsWith___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label5;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateAcx___java_lang_String:_stack[_sp + 0].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    goto label4;
    label5:;
    _sp -= 0;
    [org_apertium_lttoolbox_LTValidate usage__];
    label4:;
    goto label7;
    label2:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"-dix";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label8;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _sp -= 1;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateDix___java_lang_String:_stack[_sp + 0].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    goto label7;
    label8:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"-acx";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label10;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _sp -= 1;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateAcx___java_lang_String:_stack[_sp + 0].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    goto label7;
    label10:;
    @try {
    _stack[_sp++].o = [[[java_net_URL alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _sp -= 2;
    [((java_net_URL*) _stack[_sp].o) __init_java_net_URL___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _sp -= 2;
    _op1.i = [org_apertium_lttoolbox_LTValidate validateXmlSchema___java_net_URL_java_lang_String:_stack[_sp + 0].o:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    } @catch (java_net_MalformedURLException* _ex) {
        _stack[_sp++].o = _ex;
        goto label25;
    }
    goto label7;
    label25:;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label21:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"Error in file name ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label7:;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label13;
    _stack[_sp++].i = 0;
    _sp -= 1;
    [java_lang_System exit___int:_stack[_sp + 0].i];
    goto label14;
    label13:;
    _stack[_sp++].i = 1;
    _sp -= 1;
    [java_lang_System exit___int:_stack[_sp + 0].i];
    label14:;
    [_pool release];
    return;
}



@end


  
      
int main(int argc, char* argv[])
{
    [org_apertium_lttoolbox_LTValidate main___java_lang_String_ARRAYTYPE: nil];
	return 0;						 
}
  
  
