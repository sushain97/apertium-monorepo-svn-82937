#import "org_apertium_lttoolbox_LTProc.h"
#import "Profiling.h"
#import "java_lang_StringBuilder.h"
#import "java_lang_String.h"
#import "java_util_Date.h"
#import "java_io_PrintStream.h"
#import "java_lang_System.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "null_Profiling.h"

long _STATIC__Profiling_now;

@implementation _Profiling;

+ (void) initialize
{
    if (strcmp(class_getName(self), "_Profiling") == 0) {
        [_Profiling __clinit__Profiling];
    }
}

- (id) init
{
    if (self = [super init]) {
        _Profiling_dir = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [_Profiling_dir release];
    [super dealloc];
}

+ (long) _GET_now
{
    return _STATIC__Profiling_now;
}

+ (void) _PUT_now: (long) v
{
    _STATIC__Profiling_now = v;
}

- (java_lang_String*) _GET_dir
{
    return [[_Profiling_dir retain] autorelease];
}

- (void) _PUT_dir: (java_lang_String*) v
{
    [v retain];
    [_Profiling_dir release];
    _Profiling_dir = v;
}

- (void) __init__Profiling__
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [((super)) __init_java_lang_Object__];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = @"testdata/regression/";
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((Profiling*) _op2.o) _PUT_dir: _op1.o];
    label1:;
    [_pool release];
    return;
}


+ (void) report___java_lang_String :(java_lang_String*)n1
{
    XMLVMElem _stack[6];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label0:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" took sec ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 0;
    _op1.l = [java_lang_System currentTimeMillis__];
    _stack[_sp++].l = _op1.l;
    _op1.l = [Profiling _GET_now];
    _stack[_sp++].l = _op1.l;
    _op2.l = _stack[--_sp].l;
    _op1.l = _stack[--_sp].l;
    _stack[_sp++].l = _op1.l - _op2.l;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___long:_stack[_sp + 1].l];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" msec";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _sp -= 0;
    _op1.l = [java_lang_System currentTimeMillis__];
    _stack[_sp++].l = _op1.l;
    _op1.l = _stack[--_sp].l;
    [Profiling _PUT_now: _op1.l];
    label1:;
    [_pool release];
    return;
}


+ (void) main___java_lang_String_ARRAYTYPE :(XMLVMArray*)n1
{
    XMLVMElem _stack[4];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label0:;
    _stack[_sp++].o = [[[Profiling alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) __init_Profiling__];
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label2:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"Profiling ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_util_Date alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_util_Date*) _stack[_sp].o) __init_java_util_Date__];
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_Object:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _sp -= 0;
    [java_lang_System gc__];
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) testjavaAnalysis__];
    _sp -= 0;
    [java_lang_System gc__];
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) testjavaGeneration__];
    _sp -= 0;
    [java_lang_System gc__];
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) testjavaDGeneration__];
    _sp -= 0;
    [java_lang_System gc__];
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) testjavaNGeneration__];
    _sp -= 0;
    [java_lang_System gc__];
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) testjavaPostgeneration__];
    _sp -= 0;
    [java_lang_System gc__];
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    [((Profiling*) _stack[_sp].o) testjavaAnalysis__];
    label1:;
    [_pool release];
    return;
}


- (void) testjavaAnalysis__
{
    XMLVMElem _stack[5];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = @"/tmp/lt-proc-output1a.txt";
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label2:;
    _stack[_sp++].i = 4;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = @"-a";
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"fr-es.automorf.bin";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 2;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"analysis_input";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 3;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _sp -= 1;
    [org_apertium_lttoolbox_LTProc main___java_lang_String_ARRAYTYPE:_stack[_sp + 0].o];
    _stack[_sp++].o = @"analysis -a  ";
    _sp -= 1;
    [Profiling report___java_lang_String:_stack[_sp + 0].o];
    label1:;
    [_pool release];
    return;
}


- (void) testjavaGeneration__
{
    XMLVMElem _stack[5];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = @"/tmp/lt-proc-output1b.txt";
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label2:;
    _stack[_sp++].i = 4;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = @"-g";
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"fr-es.autogen.bin";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 2;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"generator_input";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 3;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _sp -= 1;
    [org_apertium_lttoolbox_LTProc main___java_lang_String_ARRAYTYPE:_stack[_sp + 0].o];
    _stack[_sp++].o = @"generation -g";
    _sp -= 1;
    [Profiling report___java_lang_String:_stack[_sp + 0].o];
    label1:;
    [_pool release];
    return;
}


- (void) testjavaDGeneration__
{
    XMLVMElem _stack[5];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = @"/tmp/lt-proc-output3g.txt";
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label2:;
    _stack[_sp++].i = 4;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = @"-d";
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"fr-es.autogen.bin";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 2;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"generator_input";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 3;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _sp -= 1;
    [org_apertium_lttoolbox_LTProc main___java_lang_String_ARRAYTYPE:_stack[_sp + 0].o];
    _stack[_sp++].o = @"generation -d";
    _sp -= 1;
    [Profiling report___java_lang_String:_stack[_sp + 0].o];
    label1:;
    [_pool release];
    return;
}


- (void) testjavaNGeneration__
{
    XMLVMElem _stack[5];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = @"/tmp/lt-proc-output4.txt";
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label2:;
    _stack[_sp++].i = 4;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = @"-n";
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"fr-es.autogen.bin";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 2;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"generator_input";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 3;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _sp -= 1;
    [org_apertium_lttoolbox_LTProc main___java_lang_String_ARRAYTYPE:_stack[_sp + 0].o];
    _stack[_sp++].o = @"generation -n";
    _sp -= 1;
    [Profiling report___java_lang_String:_stack[_sp + 0].o];
    label1:;
    [_pool release];
    return;
}


- (void) testjavaPostgeneration__
{
    XMLVMElem _stack[5];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = @"/tmp/lt-proc-output5.txt";
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label2:;
    _stack[_sp++].i = 4;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = @"-p";
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"fr-es.autopgen.bin";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 2;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((Profiling*) _op1.o)  _GET_dir];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"postgenerator_input";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 3;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _sp -= 1;
    [org_apertium_lttoolbox_LTProc main___java_lang_String_ARRAYTYPE:_stack[_sp + 0].o];
    _stack[_sp++].o = @"generation -p";
    _sp -= 1;
    [Profiling report___java_lang_String:_stack[_sp + 0].o];
    label1:;
    [_pool release];
    return;
}


+ (void) __clinit__Profiling
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[0];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _sp -= 0;
    _op1.l = [java_lang_System currentTimeMillis__];
    _stack[_sp++].l = _op1.l;
    _op1.l = _stack[--_sp].l;
    [Profiling _PUT_now: _op1.l];
    [_pool release];
    return;
}



@end


  
      
int main(int argc, char* argv[])
{
    [_Profiling main___java_lang_String_ARRAYTYPE: nil];
	return 0;						 
}
  
  
