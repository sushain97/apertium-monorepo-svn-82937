#import "java_lang_Object.h"
#import "java_lang_String.h"
#import "org_apertium_lttoolbox_Expander.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_apertium_lttoolbox_Expander_SPair.h"


@implementation org_apertium_lttoolbox_Expander_SPair;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_apertium_lttoolbox_Expander_SPair") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        org_apertium_lttoolbox_Expander_SPair_this_0 = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [org_apertium_lttoolbox_Expander_SPair_this_0 release];
    [super dealloc];
}

- (org_apertium_lttoolbox_Expander*) _GET_this_0
{
    return [[org_apertium_lttoolbox_Expander_SPair_this_0 retain] autorelease];
}

- (void) _PUT_this_0: (org_apertium_lttoolbox_Expander*) v
{
    [v retain];
    [org_apertium_lttoolbox_Expander_SPair_this_0 release];
    org_apertium_lttoolbox_Expander_SPair_this_0 = v;
}

- (void) __init_org_apertium_lttoolbox_Expander_SPair___org_apertium_lttoolbox_Expander_java_lang_String_java_lang_String :(org_apertium_lttoolbox_Expander*)n1 :(java_lang_String*)n2 :(java_lang_String*)n3
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    _locals[2].o = n2;
    _locals[3].o = n3;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Expander_SPair*) _op2.o) _PUT_this_0: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 3;
    [((super)) __init_org_apertium_lttoolbox_Pair___java_lang_Object_java_lang_Object:_stack[_sp + 1].o:_stack[_sp + 2].o];
    label1:;
    [_pool release];
    return;
}



@end

