#import "xmlvm.h"
#import "java_lang_Object.h"

// For circular include:
@class java_io_InputStream;
@class java_io_BufferedOutputStream;
@class java_util_Map;
@class java_lang_StringBuilder;
@class org_apertium_lttoolbox_compile_Transducer;
@class java_io_PrintStream;
@class java_lang_System;
@class java_util_HashMap;
@class org_apertium_lttoolbox_compile_testTransducer;
@class java_util_TreeSet;
@class java_io_BufferedInputStream;
@class java_util_Set;
@class java_io_FileInputStream;
@class java_io_FileOutputStream;
@class java_lang_Object;
@class java_lang_Integer;
@class java_lang_String;
@class java_util_TreeMap;
@class org_apertium_lttoolbox_Compression;
@class org_apertium_lttoolbox_Alphabet;
@class org_apertium_lttoolbox_compile_Compile;
@class java_util_Iterator;
@class java_io_OutputStream;

// Automatically generated by xmlvm2obj. Do not edit!


	
@interface org_apertium_lttoolbox_compile_testTransducer : java_lang_Object
{

}
+ (void) initialize;
- (id) init;
- (void) __init_org_apertium_lttoolbox_compile_testTransducer__;
+ (org_apertium_lttoolbox_compile_Transducer*) read___java_io_InputStream :(java_io_InputStream*)n1;
+ (void) main___java_lang_String_ARRAYTYPE :(XMLVMArray*)n1;

@end

