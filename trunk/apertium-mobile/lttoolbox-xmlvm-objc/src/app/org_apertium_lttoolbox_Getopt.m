#import "java_lang_String.h"
#import "java_io_PrintStream.h"
#import "java_lang_System.h"
#import "java_lang_Character.h"
#import "java_text_MessageFormat.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_apertium_lttoolbox_Getopt.h"

int _STATIC_org_apertium_lttoolbox_Getopt_REQUIRE_ORDER = 1;
int _STATIC_org_apertium_lttoolbox_Getopt_PERMUTE = 2;
int _STATIC_org_apertium_lttoolbox_Getopt_RETURN_IN_ORDER = 3;

@implementation org_apertium_lttoolbox_Getopt;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_apertium_lttoolbox_Getopt") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        org_apertium_lttoolbox_Getopt_optarg = (id) [NSNull null];
        org_apertium_lttoolbox_Getopt_nextchar = (id) [NSNull null];
        org_apertium_lttoolbox_Getopt_optstring = (id) [NSNull null];
        org_apertium_lttoolbox_Getopt_argv = (id) [NSNull null];
        org_apertium_lttoolbox_Getopt_progname = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [org_apertium_lttoolbox_Getopt_optarg release];
    [org_apertium_lttoolbox_Getopt_nextchar release];
    [org_apertium_lttoolbox_Getopt_optstring release];
    [org_apertium_lttoolbox_Getopt_argv release];
    [org_apertium_lttoolbox_Getopt_progname release];
    [super dealloc];
}

+ (int) _GET_REQUIRE_ORDER
{
    return _STATIC_org_apertium_lttoolbox_Getopt_REQUIRE_ORDER;
}

+ (void) _PUT_REQUIRE_ORDER: (int) v
{
    _STATIC_org_apertium_lttoolbox_Getopt_REQUIRE_ORDER = v;
}

+ (int) _GET_PERMUTE
{
    return _STATIC_org_apertium_lttoolbox_Getopt_PERMUTE;
}

+ (void) _PUT_PERMUTE: (int) v
{
    _STATIC_org_apertium_lttoolbox_Getopt_PERMUTE = v;
}

+ (int) _GET_RETURN_IN_ORDER
{
    return _STATIC_org_apertium_lttoolbox_Getopt_RETURN_IN_ORDER;
}

+ (void) _PUT_RETURN_IN_ORDER: (int) v
{
    _STATIC_org_apertium_lttoolbox_Getopt_RETURN_IN_ORDER = v;
}

- (java_lang_String*) _GET_optarg
{
    return [[org_apertium_lttoolbox_Getopt_optarg retain] autorelease];
}

- (void) _PUT_optarg: (java_lang_String*) v
{
    [v retain];
    [org_apertium_lttoolbox_Getopt_optarg release];
    org_apertium_lttoolbox_Getopt_optarg = v;
}

- (int) _GET_optind
{
    return org_apertium_lttoolbox_Getopt_optind;
}

- (void) _PUT_optind: (int) v
{
    org_apertium_lttoolbox_Getopt_optind = v;
}

- (int) _GET_opterr
{
    return org_apertium_lttoolbox_Getopt_opterr;
}

- (void) _PUT_opterr: (int) v
{
    org_apertium_lttoolbox_Getopt_opterr = v;
}

- (int) _GET_optopt
{
    return org_apertium_lttoolbox_Getopt_optopt;
}

- (void) _PUT_optopt: (int) v
{
    org_apertium_lttoolbox_Getopt_optopt = v;
}

- (java_lang_String*) _GET_nextchar
{
    return [[org_apertium_lttoolbox_Getopt_nextchar retain] autorelease];
}

- (void) _PUT_nextchar: (java_lang_String*) v
{
    [v retain];
    [org_apertium_lttoolbox_Getopt_nextchar release];
    org_apertium_lttoolbox_Getopt_nextchar = v;
}

- (java_lang_String*) _GET_optstring
{
    return [[org_apertium_lttoolbox_Getopt_optstring retain] autorelease];
}

- (void) _PUT_optstring: (java_lang_String*) v
{
    [v retain];
    [org_apertium_lttoolbox_Getopt_optstring release];
    org_apertium_lttoolbox_Getopt_optstring = v;
}

- (int) _GET_long_only
{
    return org_apertium_lttoolbox_Getopt_long_only;
}

- (void) _PUT_long_only: (int) v
{
    org_apertium_lttoolbox_Getopt_long_only = v;
}

- (int) _GET_longind
{
    return org_apertium_lttoolbox_Getopt_longind;
}

- (void) _PUT_longind: (int) v
{
    org_apertium_lttoolbox_Getopt_longind = v;
}

- (int) _GET_posixly_correct
{
    return org_apertium_lttoolbox_Getopt_posixly_correct;
}

- (void) _PUT_posixly_correct: (int) v
{
    org_apertium_lttoolbox_Getopt_posixly_correct = v;
}

- (int) _GET_first_nonopt
{
    return org_apertium_lttoolbox_Getopt_first_nonopt;
}

- (void) _PUT_first_nonopt: (int) v
{
    org_apertium_lttoolbox_Getopt_first_nonopt = v;
}

- (int) _GET_last_nonopt
{
    return org_apertium_lttoolbox_Getopt_last_nonopt;
}

- (void) _PUT_last_nonopt: (int) v
{
    org_apertium_lttoolbox_Getopt_last_nonopt = v;
}

- (int) _GET_endparse
{
    return org_apertium_lttoolbox_Getopt_endparse;
}

- (void) _PUT_endparse: (int) v
{
    org_apertium_lttoolbox_Getopt_endparse = v;
}

- (XMLVMArray*) _GET_argv
{
    return [[org_apertium_lttoolbox_Getopt_argv retain] autorelease];
}

- (void) _PUT_argv: (XMLVMArray*) v
{
    [v retain];
    [org_apertium_lttoolbox_Getopt_argv release];
    org_apertium_lttoolbox_Getopt_argv = v;
}

- (int) _GET_ordering
{
    return org_apertium_lttoolbox_Getopt_ordering;
}

- (void) _PUT_ordering: (int) v
{
    org_apertium_lttoolbox_Getopt_ordering = v;
}

- (java_lang_String*) _GET_progname
{
    return [[org_apertium_lttoolbox_Getopt_progname retain] autorelease];
}

- (void) _PUT_progname: (java_lang_String*) v
{
    [v retain];
    [org_apertium_lttoolbox_Getopt_progname release];
    org_apertium_lttoolbox_Getopt_progname = v;
}

- (void) __init_org_apertium_lttoolbox_Getopt___java_lang_String_java_lang_String_ARRAYTYPE_java_lang_String :(java_lang_String*)n1 :(XMLVMArray*)n2 :(java_lang_String*)n3
{
    XMLVMElem _stack[6];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    _locals[2].o = n2;
    _locals[3].o = n3;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[1].o;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].o = [NSNull null];
    _stack[_sp++].i = 0;
    _sp -= 6;
    [((org_apertium_lttoolbox_Getopt*) _stack[_sp].o) __init_org_apertium_lttoolbox_Getopt___java_lang_String_java_lang_String_ARRAYTYPE_java_lang_String_java_lang_String_ARRAYTYPE_boolean:_stack[_sp + 1].o:_stack[_sp + 2].o:_stack[_sp + 3].o:_stack[_sp + 4].o:_stack[_sp + 5].i];
    label1:;
    [_pool release];
    return;
}


- (void) __init_org_apertium_lttoolbox_Getopt___java_lang_String_java_lang_String_ARRAYTYPE_java_lang_String_java_lang_String_ARRAYTYPE_boolean :(java_lang_String*)n1 :(XMLVMArray*)n2 :(java_lang_String*)n3 :(XMLVMArray*)n4 :(int)n5
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[6];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    _locals[2].o = n2;
    _locals[3].o = n3;
    _locals[4].o = n4;
    _locals[5].i = n5;
    label11:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [((super)) __init_java_lang_Object__];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_opterr: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 63;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_first_nonopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_last_nonopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_endparse: _op1.i];
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label0;
    _stack[_sp++].o = @" ";
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_progname: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[2].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_argv: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[3].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optstring: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[5].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_long_only: _op1.i];
    _stack[_sp++].o = @"gnu.posixly_correct";
    _stack[_sp++].o = [NSNull null];
    _sp -= 2;
    _op1.o = [java_lang_System getProperty___java_lang_String_java_lang_String:_stack[_sp + 0].o:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    if (_op1.o != [NSNull null]) goto label1;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_posixly_correct: _op1.i];
    goto label2;
    label1:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_posixly_correct: _op1.i];
    label2:;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 45;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label3;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 3;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_ordering: _op1.i];
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label4;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.o = [((java_lang_String*) _stack[_sp].o) substring___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optstring: _op1.o];
    goto label4;
    label3:;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 43;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label6;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_ordering: _op1.i];
    _stack[_sp++].o = _locals[3].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label4;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.o = [((java_lang_String*) _stack[_sp].o) substring___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optstring: _op1.o];
    goto label4;
    label6:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_posixly_correct];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label9;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_ordering: _op1.i];
    goto label4;
    label9:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 2;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_ordering: _op1.i];
    label4:;
    [_pool release];
    return;
}


- (void) setOptstring___java_lang_String :(java_lang_String*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    label1:;
    _stack[_sp++].o = _locals[1].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label0;
    _stack[_sp++].o = @" ";
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optstring: _op1.o];
    label2:;
    [_pool release];
    return;
}


- (int) getOptind__
{
    XMLVMElem _stack[1];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    label1:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}


- (void) setOptind___int :(int)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].i = n1;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    label1:;
    [_pool release];
    return;
}


- (void) setArgv___java_lang_String_ARRAYTYPE :(XMLVMArray*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_argv: _op1.o];
    label1:;
    [_pool release];
    return;
}


- (java_lang_String*) getOptarg__
{
    XMLVMElem _stack[1];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optarg];
    _stack[_sp++].o = _op2.o;
    label1:;
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
}


- (void) setOpterr___boolean :(int)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].i = n1;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_opterr: _op1.i];
    label1:;
    [_pool release];
    return;
}


- (int) getOptopt__
{
    XMLVMElem _stack[1];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optopt];
    _stack[_sp++].i = _op2.i;
    label1:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}


- (int) getLongind__
{
    XMLVMElem _stack[1];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_longind];
    _stack[_sp++].i = _op2.i;
    label1:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}


- (void) exchange___java_lang_String_ARRAYTYPE :(XMLVMArray*)n1
{
    XMLVMElem _stack[6];
    XMLVMElem _locals[8];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    _locals[1].o = n1;
    label9:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    label13:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _locals[3].i = _op1.i;
    label15:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _locals[4].i = _op1.i;
    label5:;
    _op1.i = _locals[4].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label0;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label0;
    _op1.i = _locals[4].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label2;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op1.i = _stack[--_sp].i;
    _locals[6].i = _op1.i;
    label23:;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _locals[7].i = _op1.i;
    label4:;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[6].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i >= _op2.i) goto label3;
    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _locals[5].o = _op1.o;
    label19:;
    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[4].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[4].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _stack[_sp++].o = _locals[5].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _locals[7].i += 1;
    goto label4;
    label3:;
    _op1.i = _locals[4].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[6].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op1.i = _stack[--_sp].i;
    _locals[4].i = _op1.i;
    label24:;
    goto label5;
    label2:;
    _op1.i = _locals[4].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op1.i = _stack[--_sp].i;
    _locals[6].i = _op1.i;
    label25:;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _locals[7].i = _op1.i;
    label7:;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[6].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i >= _op2.i) goto label6;
    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _locals[5].o = _op1.o;
    label21:;
    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _stack[_sp++].o = _locals[1].o;
    _op1.i = _locals[3].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[7].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _stack[_sp++].o = _locals[5].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _locals[7].i += 1;
    goto label7;
    label6:;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[6].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    label26:;
    goto label5;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i - _op2.i;    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_first_nonopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_last_nonopt: _op1.i];
    label10:;
    [_pool release];
    return;
}


- (int) getopt__
{
    XMLVMElem _stack[6];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label63:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = [NSNull null];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_endparse];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label0;
    _stack[_sp++].i = -1;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    if (_op1.o == [NSNull null]) goto label1;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label2;
    label1:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label3;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_last_nonopt: _op1.i];
    label3:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label4;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_first_nonopt: _op1.i];
    label4:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_ordering];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 2;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label5;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label6;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label6;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    [((org_apertium_lttoolbox_Getopt*) _stack[_sp].o) exchange___java_lang_String_ARRAYTYPE:_stack[_sp + 1].o];
    goto label8;
    label6:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label8;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_first_nonopt: _op1.i];
    label8:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i >= _op2.i) goto label10;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label11;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 45;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label11;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"-";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label10;
    label11:;
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    goto label8;
    label10:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_last_nonopt: _op1.i];
    label5:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label15;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"--";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label15;
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label17;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label17;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _sp -= 2;
    [((org_apertium_lttoolbox_Getopt*) _stack[_sp].o) exchange___java_lang_String_ARRAYTYPE:_stack[_sp + 1].o];
    goto label19;
    label17:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label19;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_first_nonopt: _op1.i];
    label19:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_last_nonopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    label15:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label21;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_last_nonopt];
    _stack[_sp++].i = _op2.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label22;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_first_nonopt];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    label22:;
    _stack[_sp++].i = -1;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label21:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label23;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 45;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label23;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"-";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label25;
    label23:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_ordering];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label26;
    _stack[_sp++].i = -1;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label26:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1 = _stack[--_sp];
    _op2 = _stack[--_sp];
    _stack[_sp++] = _op1;
    _stack[_sp++] = _op2;
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label25:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].o = @"--";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) startsWith___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label27;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].i = 2;
    _sp -= 2;
    _op1.o = [((java_lang_String*) _stack[_sp].o) substring___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    goto label2;
    label27:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.o = [((java_lang_String*) _stack[_sp].o) substring___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    label2:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[1].i = _op1.i;
    label65:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label29;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.o = [((java_lang_String*) _stack[_sp].o) substring___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    goto label30;
    label29:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = @"";
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    label30:;
    _stack[_sp++].o = [NSNull null];
    _op1.o = _stack[--_sp].o;
    _locals[2].o = _op1.o;
    label67:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optstring];
    _stack[_sp++].o = _op2.o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) indexOf___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = -1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == _op2.i) goto label31;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optstring];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optstring];
    _stack[_sp++].o = _op2.o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) indexOf___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((java_lang_String*) _stack[_sp].o) substring___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[2].o = _op1.o;
    label31:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label32;
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    label32:;
    _stack[_sp++].o = _locals[2].o;
    _op1.o = _stack[--_sp].o;
    if (_op1.o == [NSNull null]) goto label33;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 58;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label34;
    label33:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_opterr];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label35;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_posixly_correct];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label36;
    _stack[_sp++].i = 2;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_progname];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_Character alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
  _stack[_sp++].i = _op1.i & 0xff;    _sp -= 2;
    [((java_lang_Character*) _stack[_sp].o) __init_java_lang_Character___char:_stack[_sp + 1].i];
    _sp -= 1;
    _op1.o = [((java_lang_Character*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label73:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"getopt.illegal";
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [java_text_MessageFormat format___java_lang_String_java_lang_Object_ARRAYTYPE:_stack[_sp + 0].o:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label74:;
    goto label35;
    label36:;
    _stack[_sp++].i = 2;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_progname];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_Character alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
  _stack[_sp++].i = _op1.i & 0xff;    _sp -= 2;
    [((java_lang_Character*) _stack[_sp].o) __init_java_lang_Character___char:_stack[_sp + 1].i];
    _sp -= 1;
    _op1.o = [((java_lang_Character*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label71:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"getopt.invalid";
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [java_text_MessageFormat format___java_lang_String_java_lang_Object_ARRAYTYPE:_stack[_sp + 0].o:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label35:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optopt: _op1.i];
    _stack[_sp++].i = 63;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label34:;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 87;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label38;
    _stack[_sp++].o = _locals[2].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label38;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 59;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label38;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label41;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    goto label42;
    label41:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label43;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_opterr];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label44;
    _stack[_sp++].i = 2;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_progname];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_Character alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
  _stack[_sp++].i = _op1.i & 0xff;    _sp -= 2;
    [((java_lang_Character*) _stack[_sp].o) __init_java_lang_Character___char:_stack[_sp + 1].i];
    _sp -= 1;
    _op1.o = [((java_lang_Character*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label77:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"getopt.requires2";
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [java_text_MessageFormat format___java_lang_String_java_lang_Object_ARRAYTYPE:_stack[_sp + 0].o:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label44:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optstring];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 58;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label45;
    _stack[_sp++].i = 58;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label45:;
    _stack[_sp++].i = 63;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label43:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    label42:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = [NSNull null];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    _stack[_sp++].i = 87;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label38:;
    _stack[_sp++].o = _locals[2].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label46;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].i = 1;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 58;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label46;
    _stack[_sp++].o = _locals[2].o;
    _sp -= 1;
    _op1.i = [((java_lang_String*) _stack[_sp].o) length__];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 2;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i <= _op2.i) goto label48;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].i = 2;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 58;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label48;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label50;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    goto label51;
    label50:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = [NSNull null];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    label51:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = [NSNull null];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    goto label46;
    label48:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = @"";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label53;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_nextchar];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    goto label54;
    label53:;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label55;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_opterr];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label56;
    _stack[_sp++].i = 2;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_progname];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_Character alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
  _stack[_sp++].i = _op1.i & 0xff;    _sp -= 2;
    [((java_lang_Character*) _stack[_sp].o) __init_java_lang_Character___char:_stack[_sp + 1].i];
    _sp -= 1;
    _op1.o = [((java_lang_Character*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label75:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"getopt.requires2";
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [java_text_MessageFormat format___java_lang_String_java_lang_Object_ARRAYTYPE:_stack[_sp + 0].o:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label56:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optstring];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 58;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label57;
    _stack[_sp++].i = 58;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label57:;
    _stack[_sp++].i = 63;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label55:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_posixly_correct];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label54;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optarg];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = @"--";
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label54;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label60;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_opterr];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label61;
    _stack[_sp++].i = 2;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].o = [XMLVMArray createSingleDimensionWithType:0 andSize:_op1.i];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 0;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_progname];
    _stack[_sp++].o = _op2.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].i = 1;
    _stack[_sp++].o = [[[java_lang_Character alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
  _stack[_sp++].i = _op1.i & 0xff;    _sp -= 2;
    [((java_lang_Character*) _stack[_sp].o) __init_java_lang_Character___char:_stack[_sp + 1].i];
    _sp -= 1;
    _op1.o = [((java_lang_Character*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _op2.i = _stack[--_sp].i;
    _op3.o = _stack[--_sp].o;
    [_op3.o replaceObjectAtIndex: _op2.i withObject: _op1.o];
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label69:;
    _op1.o = [java_lang_System _GET_err];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"getopt.requires2";
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [java_text_MessageFormat format___java_lang_String_java_lang_Object_ARRAYTYPE:_stack[_sp + 0].o:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    label61:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optstring];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].i = 0;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) charAt___int:_stack[_sp + 1].i];
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].i = 58;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != _op2.i) goto label62;
    _stack[_sp++].i = 58;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label62:;
    _stack[_sp++].i = 63;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
    label60:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    _stack[_sp++].o = [_op2.o objectAtIndex: _op1.i];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optarg: _op1.o];
    _stack[_sp++].o = _locals[0].o;
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _stack[_sp++].i = 1;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    _stack[_sp++].i = _op1.i + _op2.i;    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_optind: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.i = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_optind];
    _stack[_sp++].i = _op2.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_first_nonopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = _locals[0].o;
    _op1.o = _stack[--_sp].o;
    _op2.o = [((org_apertium_lttoolbox_Getopt*) _op1.o)  _GET_argv];
    _stack[_sp++].o = _op2.o;
    _op1.i = [_stack[--_sp].o count];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_last_nonopt: _op1.i];
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].i = 1;
    _op1.i = _stack[--_sp].i;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_endparse: _op1.i];
    label54:;
    _stack[_sp++].o = _locals[0].o;
    _stack[_sp++].o = [NSNull null];
    _op1.o = _stack[--_sp].o;
    _op2.o = _stack[--_sp].o;
    [((org_apertium_lttoolbox_Getopt*) _op2.o) _PUT_nextchar: _op1.o];
    label46:;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    label64:;
    _op1.i = _stack[--_sp].i;
    [_pool release];
    return _op1.i;
}



@end

