#import "xmlvm.h"
#import "java_lang_Object.h"

// For circular include:
@class java_util_ArrayDeque;
@class java_util_Map;
@class java_lang_StringBuilder;
@class java_io_PrintStream;
@class org_apertium_lttoolbox_process_SetOfCharacters;
@class java_lang_System;
@class org_apertium_lttoolbox_process_TNodeState;
@class java_lang_Character;
@class java_util_Set;
@class java_util_Collection;
@class java_util_ArrayList;
@class org_apertium_lttoolbox_process_Transition;
@class java_lang_Object;
@class java_util_List;
@class java_lang_String;
@class java_lang_Integer;
@class org_apertium_lttoolbox_process_State;
@class org_apertium_lttoolbox_Alphabet;
@class org_apertium_lttoolbox_process_Node;
@class java_util_Iterator;
@class java_lang_Exception;
@class java_lang_Math;

// Automatically generated by xmlvm2obj. Do not edit!


	
@interface org_apertium_lttoolbox_process_State : java_lang_Object
{
@private java_util_ArrayList* org_apertium_lttoolbox_process_State_state;

}
+ (void) initialize;
- (id) init;
- (java_util_ArrayList*) _GET_state;
- (void) _PUT_state: (java_util_ArrayList*) v;
+ (int) _GET_DEBUG;
+ (void) _PUT_DEBUG: (int) v;
- (void) __init_org_apertium_lttoolbox_process_State__;
- (org_apertium_lttoolbox_process_State*) copy___org_apertium_lttoolbox_process_State :(org_apertium_lttoolbox_process_State*)n1;
- (org_apertium_lttoolbox_process_State*) copy__;
- (void) poolInit__;
- (int) size__;
- (void) init___org_apertium_lttoolbox_process_Node :(org_apertium_lttoolbox_process_Node*)n1;
- (java_lang_String*) toString__;
- (void) apply___int :(int)n1;
- (void) apply___int_int :(int)n1 :(int)n2;
- (void) epsilonClosure__;
- (void) tjekDubletter__;
- (void) step___int :(int)n1;
- (void) step___int_int :(int)n1 :(int)n2;
- (void) step_case___char_boolean :(int)n1 :(int)n2;
- (void) step_case___int_boolean :(int)n1 :(int)n2;
- (int) isFinal___java_util_Set :(java_util_Set*)n1;
- (java_lang_String*) filterFinals___java_util_Set_org_apertium_lttoolbox_Alphabet_org_apertium_lttoolbox_process_SetOfCharacters_boolean_boolean :(java_util_Set*)n1 :(org_apertium_lttoolbox_Alphabet*)n2 :(org_apertium_lttoolbox_process_SetOfCharacters*)n3 :(int)n4 :(int)n5;
- (void) restartFinals___java_util_Set_int_org_apertium_lttoolbox_process_State_int :(java_util_Set*)n1 :(int)n2 :(org_apertium_lttoolbox_process_State*)n3 :(int)n4;
- (int) lastPartHasRequiredSymbol___java_util_List_int_int :(java_util_List*)n1 :(int)n2 :(int)n3;
- (void) pruneStatesWithForbiddenSymbol___int :(int)n1;
- (void) pruneCompounds___int_int :(int)n1 :(int)n2;
- (java_lang_String*) filterFinalsSAO___java_util_Set_org_apertium_lttoolbox_Alphabet_org_apertium_lttoolbox_process_SetOfCharacters_boolean_boolean_int :(java_util_Set*)n1 :(org_apertium_lttoolbox_Alphabet*)n2 :(org_apertium_lttoolbox_process_SetOfCharacters*)n3 :(int)n4 :(int)n5 :(int)n6;
- (java_lang_String*) filterFinalsTM___java_util_Set_org_apertium_lttoolbox_Alphabet_org_apertium_lttoolbox_process_SetOfCharacters_java_util_ArrayDeque_java_util_ArrayList :(java_util_Set*)n1 :(org_apertium_lttoolbox_Alphabet*)n2 :(org_apertium_lttoolbox_process_SetOfCharacters*)n3 :(java_util_ArrayDeque*)n4 :(java_util_ArrayList*)n5;
- (int) iswdigit___char :(int)n1;
+ (void) __clinit_org_apertium_lttoolbox_process_State;

@end

