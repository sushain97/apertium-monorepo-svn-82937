#import "xmlvm.h"
#import "java_lang_Object.h"

// For circular include:
@class java_io_InputStream;
@class java_util_ArrayDeque;
@class java_util_Map;
@class org_apertium_lttoolbox_Pair;
@class java_lang_StringBuilder;
@class java_io_PrintStream;
@class org_apertium_lttoolbox_process_SetOfCharacters;
@class java_lang_System;
@class java_io_IOException;
@class org_apertium_lttoolbox_process_TNodeState;
@class java_lang_CharSequence;
@class java_lang_Throwable;
@class java_lang_Character;
@class java_lang_Class;
@class java_util_Set;
@class java_util_Collection;
@class java_util_ArrayList;
@class org_apertium_lttoolbox_process_TransExe;
@class org_apertium_lttoolbox_process_FSTProcessor_GenerationMode;
@class java_lang_Object;
@class java_util_List;
@class java_io_Writer;
@class java_lang_Integer;
@class java_util_TreeMap;
@class java_lang_String;
@class org_apertium_lttoolbox_Compression;
@class org_apertium_lttoolbox_process_FSTProcessor;
@class org_apertium_lttoolbox_process_State;
@class org_apertium_lttoolbox_Alphabet;
@class org_apertium_lttoolbox_process_Node;
@class java_util_Iterator;
@class java_util_HashSet;
@class java_lang_RuntimeException;
@class java_util_Arrays;
@class org_apertium_lttoolbox_process_Buffer;
@class java_io_Reader;

// Automatically generated by xmlvm2obj. Do not edit!


	
@interface org_apertium_lttoolbox_process_FSTProcessor : java_lang_Object
{
@private int org_apertium_lttoolbox_process_FSTProcessor_isLastBlankTM;
@private java_util_Map* org_apertium_lttoolbox_process_FSTProcessor_transducers;
@private org_apertium_lttoolbox_process_State* org_apertium_lttoolbox_process_FSTProcessor_initial_state;
@private org_apertium_lttoolbox_process_State* org_apertium_lttoolbox_process_FSTProcessor_initial_compounding_state;
@private java_util_Set* org_apertium_lttoolbox_process_FSTProcessor_inconditional;
@private java_util_Set* org_apertium_lttoolbox_process_FSTProcessor_standard;
@private java_util_Set* org_apertium_lttoolbox_process_FSTProcessor_postblank;
@private java_util_Set* org_apertium_lttoolbox_process_FSTProcessor_preblank;
@private java_util_Set* org_apertium_lttoolbox_process_FSTProcessor_compounding_finals;
@private java_util_Set* org_apertium_lttoolbox_process_FSTProcessor_all_finals;
@private java_util_ArrayDeque* org_apertium_lttoolbox_process_FSTProcessor_blankqueue;
@private org_apertium_lttoolbox_process_SetOfCharacters* org_apertium_lttoolbox_process_FSTProcessor_alphabetic_chars;
@private org_apertium_lttoolbox_process_SetOfCharacters* org_apertium_lttoolbox_process_FSTProcessor_escaped_chars;
@private org_apertium_lttoolbox_Alphabet* org_apertium_lttoolbox_process_FSTProcessor_alphabet;
@private org_apertium_lttoolbox_process_Buffer* org_apertium_lttoolbox_process_FSTProcessor_input_buffer;
@private int org_apertium_lttoolbox_process_FSTProcessor_outOfWord;
@private int org_apertium_lttoolbox_process_FSTProcessor_caseSensitive;
@private int org_apertium_lttoolbox_process_FSTProcessor_nullFlush;
@private java_util_ArrayList* org_apertium_lttoolbox_process_FSTProcessor_tmNumbers;
@private int org_apertium_lttoolbox_process_FSTProcessor_do_decomposition;
@private int org_apertium_lttoolbox_process_FSTProcessor_compoundOnlyLSymbol;
@private int org_apertium_lttoolbox_process_FSTProcessor_compoundRSymbol;
@private int org_apertium_lttoolbox_process_FSTProcessor_do_flagMatch;
@private XMLVMArray* org_apertium_lttoolbox_process_FSTProcessor_flagMatch_symbolToVarVal;
@private int org_apertium_lttoolbox_process_FSTProcessor_flagMatch_no_of_flags;

}
+ (void) initialize;
- (id) init;
- (int) _GET_isLastBlankTM;
- (void) _PUT_isLastBlankTM: (int) v;
- (java_util_Map*) _GET_transducers;
- (void) _PUT_transducers: (java_util_Map*) v;
- (org_apertium_lttoolbox_process_State*) _GET_initial_state;
- (void) _PUT_initial_state: (org_apertium_lttoolbox_process_State*) v;
- (org_apertium_lttoolbox_process_State*) _GET_initial_compounding_state;
- (void) _PUT_initial_compounding_state: (org_apertium_lttoolbox_process_State*) v;
- (java_util_Set*) _GET_inconditional;
- (void) _PUT_inconditional: (java_util_Set*) v;
- (java_util_Set*) _GET_standard;
- (void) _PUT_standard: (java_util_Set*) v;
- (java_util_Set*) _GET_postblank;
- (void) _PUT_postblank: (java_util_Set*) v;
- (java_util_Set*) _GET_preblank;
- (void) _PUT_preblank: (java_util_Set*) v;
- (java_util_Set*) _GET_compounding_finals;
- (void) _PUT_compounding_finals: (java_util_Set*) v;
- (java_util_Set*) _GET_all_finals;
- (void) _PUT_all_finals: (java_util_Set*) v;
- (java_util_ArrayDeque*) _GET_blankqueue;
- (void) _PUT_blankqueue: (java_util_ArrayDeque*) v;
- (org_apertium_lttoolbox_process_SetOfCharacters*) _GET_alphabetic_chars;
- (void) _PUT_alphabetic_chars: (org_apertium_lttoolbox_process_SetOfCharacters*) v;
- (org_apertium_lttoolbox_process_SetOfCharacters*) _GET_escaped_chars;
- (void) _PUT_escaped_chars: (org_apertium_lttoolbox_process_SetOfCharacters*) v;
- (org_apertium_lttoolbox_Alphabet*) _GET_alphabet;
- (void) _PUT_alphabet: (org_apertium_lttoolbox_Alphabet*) v;
- (org_apertium_lttoolbox_process_Buffer*) _GET_input_buffer;
- (void) _PUT_input_buffer: (org_apertium_lttoolbox_process_Buffer*) v;
- (int) _GET_outOfWord;
- (void) _PUT_outOfWord: (int) v;
- (int) _GET_caseSensitive;
- (void) _PUT_caseSensitive: (int) v;
- (int) _GET_nullFlush;
- (void) _PUT_nullFlush: (int) v;
- (java_util_ArrayList*) _GET_tmNumbers;
- (void) _PUT_tmNumbers: (java_util_ArrayList*) v;
+ (int) _GET_EOF;
+ (void) _PUT_EOF: (int) v;
- (int) _GET_do_decomposition;
- (void) _PUT_do_decomposition: (int) v;
- (int) _GET_compoundOnlyLSymbol;
- (void) _PUT_compoundOnlyLSymbol: (int) v;
- (int) _GET_compoundRSymbol;
- (void) _PUT_compoundRSymbol: (int) v;
- (int) _GET_do_flagMatch;
- (void) _PUT_do_flagMatch: (int) v;
- (XMLVMArray*) _GET_flagMatch_symbolToVarVal;
- (void) _PUT_flagMatch_symbolToVarVal: (XMLVMArray*) v;
- (int) _GET_flagMatch_no_of_flags;
- (void) _PUT_flagMatch_no_of_flags: (int) v;
+ (int) _GET_DEBUG;
+ (void) _PUT_DEBUG: (int) v;
- (void) __init_org_apertium_lttoolbox_process_FSTProcessor__;
- (void) streamError__;
- (void) streamError___char :(int)n1;
- (int) readEscaped___java_io_Reader :(java_io_Reader*)n1;
- (java_lang_String*) readFullBlock___java_io_Reader_char_char :(java_io_Reader*)n1 :(int)n2 :(int)n3;
- (int) readAnalysis___java_io_Reader :(java_io_Reader*)n1;
- (int) readTMAnalysis___java_io_Reader :(java_io_Reader*)n1;
- (int) readPostgeneration___java_io_Reader :(java_io_Reader*)n1;
- (void) skipUntil___java_io_Reader_java_io_Writer_char :(java_io_Reader*)n1 :(java_io_Writer*)n2 :(int)n3;
- (int) readGeneration___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (void) flushBlanks___java_io_Writer :(java_io_Writer*)n1;
- (void) calc_initial_state__;
- (int) endsWith___java_lang_String_java_lang_String :(java_lang_String*)n1 :(java_lang_String*)n2;
- (void) classifyFinals__;
- (void) writeEscaped___java_lang_String_java_io_Writer :(java_lang_String*)n1 :(java_io_Writer*)n2;
- (void) printWord___java_lang_String_java_lang_String_java_io_Writer :(java_lang_String*)n1 :(java_lang_String*)n2 :(java_io_Writer*)n3;
- (void) printUnknownWord___java_lang_String_java_io_Writer :(java_lang_String*)n1 :(java_io_Writer*)n2;
- (int) lastBlank___java_lang_String :(java_lang_String*)n1;
- (void) printSpace___char_java_io_Writer :(int)n1 :(java_io_Writer*)n2;
- (int) isEscaped___char :(int)n1;
- (int) isAlphabetic___char :(int)n1;
- (void) load___java_io_InputStream :(java_io_InputStream*)n1;
- (void) initAnalysis__;
- (void) initDecomposition___boolean :(int)n1;
- (void) initFlagMatch___boolean :(int)n1;
- (void) deleteStatesWithConflictingFlags___org_apertium_lttoolbox_process_State :(org_apertium_lttoolbox_process_State*)n1;
- (void) initTMAnalysis__;
- (void) initGeneration__;
- (void) initPostgeneration__;
- (void) initBiltrans__;
- (void) analysis___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (java_lang_String*) compoundAnalysisOld___java_lang_String :(java_lang_String*)n1;
- (java_lang_String*) compoundAnalysis2___java_lang_String :(java_lang_String*)n1;
- (void) analysis_wrapper_null_flush___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (void) generation_wrapper_null_flush___java_io_Reader_java_io_Writer_org_apertium_lttoolbox_process_FSTProcessor_GenerationMode :(java_io_Reader*)n1 :(java_io_Writer*)n2 :(org_apertium_lttoolbox_process_FSTProcessor_GenerationMode*)n3;
- (void) postgeneration_wrapper_null_flush___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (void) transliteration_wrapper_null_flush___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (void) tm_analysis___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (void) generation___java_io_Reader_java_io_Writer_org_apertium_lttoolbox_process_FSTProcessor_GenerationMode :(java_io_Reader*)n1 :(java_io_Writer*)n2 :(org_apertium_lttoolbox_process_FSTProcessor_GenerationMode*)n3;
- (void) postgeneration___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (void) transliteration___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (java_lang_String*) biltrans___java_lang_String_boolean :(java_lang_String*)n1 :(int)n2;
- (org_apertium_lttoolbox_Pair*) biltransWithQueue___java_lang_String_boolean :(java_lang_String*)n1 :(int)n2;
- (java_lang_String*) biltransWithoutQueue___java_lang_String_boolean :(java_lang_String*)n1 :(int)n2;
- (int) valid__;
- (int) readSAO___java_io_Reader :(java_io_Reader*)n1;
- (void) printSAOWord___java_lang_String_java_io_Writer :(java_lang_String*)n1 :(java_io_Writer*)n2;
- (void) SAO___java_io_Reader_java_io_Writer :(java_io_Reader*)n1 :(java_io_Writer*)n2;
- (java_lang_String*) removeTags___java_lang_String :(java_lang_String*)n1;
- (void) setCaseSensitiveMode___boolean :(int)n1;
- (void) setFlagMatchMode___boolean :(int)n1;
- (void) setNullFlush___boolean :(int)n1;
- (int) getNullFlush__;
- (int) firstNotAlpha___java_lang_String :(java_lang_String*)n1;
- (int) xread___java_io_Reader :(java_io_Reader*)n1;
- (int) iswdigit___char :(int)n1;
- (int) iswpunct___char :(int)n1;
+ (void) __clinit_org_apertium_lttoolbox_process_FSTProcessor;

@end

