#import "javax_xml_stream_XMLStreamReader.h"
#import "java_lang_String.h"
#import "java_lang_StringBuilder.h"
#import "java_io_PrintStream.h"
#import "java_lang_System.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_apertium_lttoolbox_compile_XMLPrint.h"


@implementation org_apertium_lttoolbox_compile_XMLPrint;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_apertium_lttoolbox_compile_XMLPrint") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    [super dealloc];
}

- (void) __init_org_apertium_lttoolbox_compile_XMLPrint__
{
    XMLVMElem _stack[1];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = self;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [((super)) __init_java_lang_Object__];
    label1:;
    [_pool release];
    return;
}


+ (void) printNEvent___javax_xml_stream_XMLStreamReader_int :(javax_xml_stream_XMLStreamReader*)n1 :(int)n2
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[3];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    _locals[1].i = n2;
    label2:;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    label1:;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i >= _op2.i) goto label0;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"type of event : ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getEventType__];
    _stack[_sp++].i = _op1.i;
    _sp -= 1;
    _op1.o = [org_apertium_lttoolbox_compile_XMLPrint getEventTypeString___int:_stack[_sp + 0].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) println___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [org_apertium_lttoolbox_compile_XMLPrint printEvent___javax_xml_stream_XMLStreamReader:_stack[_sp + 0].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    [((java_io_PrintStream*) _stack[_sp].o) println__];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) next__];
    _stack[_sp++].i = _op1.i;
    _sp--;
    _locals[2].i += 1;
    goto label1;
    label0:;
    [_pool release];
    return;
}


+ (void) printEvent___javax_xml_stream_XMLStreamReader :(javax_xml_stream_XMLStreamReader*)n1
{
    XMLVMElem _stack[6];
    XMLVMElem _locals[3];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label25:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getEventType__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    switch(_op1.i) {
    case 1: goto label0;
    case 2: goto label1;
    case 3: goto label2;
    case 4: goto label3;
    case 5: goto label4;
    case 6: goto label3;
    case 7: goto label6;
    case 8: goto label7;
    case 9: goto label8;
    case 10: goto label7;
    case 11: goto label7;
    case 12: goto label11;
    default: goto label7;
    }
    label0:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"<";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [org_apertium_lttoolbox_compile_XMLPrint printName___javax_xml_stream_XMLStreamReader:_stack[_sp + 0].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [org_apertium_lttoolbox_compile_XMLPrint printNamespaces___javax_xml_stream_XMLStreamReader:_stack[_sp + 0].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [org_apertium_lttoolbox_compile_XMLPrint printAttributes___javax_xml_stream_XMLStreamReader:_stack[_sp + 0].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @">";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label1:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"</";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    [org_apertium_lttoolbox_compile_XMLPrint printName___javax_xml_stream_XMLStreamReader:_stack[_sp + 0].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @">";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label3:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getTextStart__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[1].i = _op1.i;
    label27:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getTextLength__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    label29:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_String alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getTextCharacters__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 4;
    [((java_lang_String*) _stack[_sp].o) __init_java_lang_String___char_ARRAYTYPE_int_int:_stack[_sp + 1].o:_stack[_sp + 2].i:_stack[_sp + 3].i];
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label2:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"<?";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) hasText__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label16;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getText__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label16:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"?>";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label11:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"<![CDATA[";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getTextStart__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[1].i = _op1.i;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getTextLength__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    _locals[2].i = _op1.i;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_String alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getTextCharacters__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _locals[2].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 4;
    [((java_lang_String*) _stack[_sp].o) __init_java_lang_String___char_ARRAYTYPE_int_int:_stack[_sp + 1].o:_stack[_sp + 2].i:_stack[_sp + 3].i];
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"]]>";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label4:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"<!--";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) hasText__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label19;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getText__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label19:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"-->";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label8:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getLocalName__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"=";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) hasText__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label7;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"[";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getText__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"]";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label7;
    label6:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"<?xml";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @" version='";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getVersion__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"'";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @" encoding='";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getCharacterEncodingScheme__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"'";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) isStandalone__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label23;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" standalone='yes'";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label24;
    label23:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" standalone='no'";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label24:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"?>";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label7:;
    [_pool release];
    return;
}


+ (java_lang_String*) getEventTypeString___int :(int)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[1];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].i = n1;
    label13:;
    _op1.i = _locals[0].i;
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    switch(_op1.i) {
    case 1: goto label0;
    case 2: goto label1;
    case 3: goto label2;
    case 4: goto label3;
    case 5: goto label4;
    case 6: goto label5;
    case 7: goto label6;
    case 8: goto label7;
    case 9: goto label8;
    case 10: goto label9;
    case 11: goto label10;
    case 12: goto label11;
    default: goto label12;
    }
    label0:;
    _stack[_sp++].o = @"START_ELEMENT";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label1:;
    _stack[_sp++].o = @"END_ELEMENT";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label2:;
    _stack[_sp++].o = @"PROCESSING_INSTRUCTION";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label3:;
    _stack[_sp++].o = @"CHARACTERS";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label4:;
    _stack[_sp++].o = @"COMMENT";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label6:;
    _stack[_sp++].o = @"START_DOCUMENT";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label7:;
    _stack[_sp++].o = @"END_DOCUMENT";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label8:;
    _stack[_sp++].o = @"ENTITY_REFERENCE";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label9:;
    _stack[_sp++].o = @"ATTRIBUTE";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label10:;
    _stack[_sp++].o = @"DTD";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label11:;
    _stack[_sp++].o = @"CDATA";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label5:;
    _stack[_sp++].o = @"SPACE";
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
    label12:;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"UNKNOWN_EVENT_TYPE , ";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.i = _locals[0].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    label14:;
    _op1.o = _stack[--_sp].o;
    [_op1.o retain];
    [_pool release];
    return _op1.o;
}


+ (void) printName___javax_xml_stream_XMLStreamReader :(javax_xml_stream_XMLStreamReader*)n1
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label1:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) hasName__];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i == 0) goto label0;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getPrefix__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[1].o = _op1.o;
    label3:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getNamespaceURI__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[2].o = _op1.o;
    label5:;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getLocalName__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label7:;
    _stack[_sp++].o = _locals[1].o;
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 3;
    [org_apertium_lttoolbox_compile_XMLPrint printName___java_lang_String_java_lang_String_java_lang_String:_stack[_sp + 0].o:_stack[_sp + 1].o:_stack[_sp + 2].o];
    label0:;
    [_pool release];
    return;
}


+ (void) printName___java_lang_String_java_lang_String_java_lang_String :(java_lang_String*)n1 :(java_lang_String*)n2 :(java_lang_String*)n3
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[3];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    _locals[1].o = n2;
    _locals[2].o = n3;
    label3:;
    _stack[_sp++].o = _locals[1].o;
    _op1.o = _stack[--_sp].o;
    if (_op1.o == [NSNull null]) goto label0;
    _stack[_sp++].o = @"";
    _stack[_sp++].o = _locals[1].o;
    _sp -= 2;
    _op1.i = [((java_lang_String*) _stack[_sp].o) equals___java_lang_Object:_stack[_sp + 1].o];
    _stack[_sp++].i = _op1.i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i != 0) goto label0;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"['";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[1].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"']:";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label0:;
    _stack[_sp++].o = _locals[2].o;
    _op1.o = _stack[--_sp].o;
    if (_op1.o == [NSNull null]) goto label2;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[2].o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label2:;
    [_pool release];
    return;
}


+ (void) printAttributes___javax_xml_stream_XMLStreamReader :(javax_xml_stream_XMLStreamReader*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label2:;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _locals[1].i = _op1.i;
    label1:;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getAttributeCount__];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i >= _op2.i) goto label0;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    [org_apertium_lttoolbox_compile_XMLPrint printAttribute___javax_xml_stream_XMLStreamReader_int:_stack[_sp + 0].o:_stack[_sp + 1].i];
    _locals[1].i += 1;
    goto label1;
    label0:;
    [_pool release];
    return;
}


+ (void) printAttribute___javax_xml_stream_XMLStreamReader_int :(javax_xml_stream_XMLStreamReader*)n1 :(int)n2
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[6];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    _locals[1].i = n2;
    label0:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getAttributePrefix___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[2].o = _op1.o;
    label4:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getAttributeNamespace___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label6:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getAttributeLocalName___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[4].o = _op1.o;
    label8:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getAttributeValue___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[5].o = _op1.o;
    label10:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" ";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[2].o;
    _stack[_sp++].o = _locals[3].o;
    _stack[_sp++].o = _locals[4].o;
    _sp -= 3;
    [org_apertium_lttoolbox_compile_XMLPrint printName___java_lang_String_java_lang_String_java_lang_String:_stack[_sp + 0].o:_stack[_sp + 1].o:_stack[_sp + 2].o];
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"='";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[5].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"'";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label1:;
    [_pool release];
    return;
}


+ (void) printNamespaces___javax_xml_stream_XMLStreamReader :(javax_xml_stream_XMLStreamReader*)n1
{
    XMLVMElem _stack[2];
    XMLVMElem _locals[2];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    label2:;
    _stack[_sp++].i = 0;
    _op1.i = _stack[--_sp].i;
    _locals[1].i = _op1.i;
    label1:;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _stack[_sp++].o = _locals[0].o;
    _sp -= 1;
    _op1.i = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getNamespaceCount__];
    _stack[_sp++].i = _op1.i;
    _op2.i = _stack[--_sp].i;
    _op1.i = _stack[--_sp].i;
    if (_op1.i >= _op2.i) goto label0;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    [org_apertium_lttoolbox_compile_XMLPrint printNamespace___javax_xml_stream_XMLStreamReader_int:_stack[_sp + 0].o:_stack[_sp + 1].i];
    _locals[1].i += 1;
    goto label1;
    label0:;
    [_pool release];
    return;
}


+ (void) printNamespace___javax_xml_stream_XMLStreamReader_int :(javax_xml_stream_XMLStreamReader*)n1 :(int)n2
{
    XMLVMElem _stack[3];
    XMLVMElem _locals[4];
    int _sp = 0;
    XMLVMElem _op1, _op2, _op3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _locals[0].o = n1;
    _locals[1].i = n2;
    label2:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getNamespacePrefix___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[2].o = _op1.o;
    label6:;
    _stack[_sp++].o = _locals[0].o;
    _op1.i = _locals[1].i;
    _stack[_sp++].i = _op1.i;
    _sp -= 2;
    _op1.o = [((javax_xml_stream_XMLStreamReader*) _stack[_sp].o) getNamespaceURI___int:_stack[_sp + 1].i];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _op1.o = _stack[--_sp].o;
    _locals[3].o = _op1.o;
    label8:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @" ";
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    _stack[_sp++].o = _locals[2].o;
    _op1.o = _stack[--_sp].o;
    if (_op1.o != [NSNull null]) goto label0;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"xmlns ='";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"'";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    goto label1;
    label0:;
    _op1.o = [java_lang_System _GET_out];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = [[[java_lang_StringBuilder alloc] init] autorelease];
    _op1 = _stack[_sp - 1];
    _stack[_sp++] = _op1;
    _sp -= 1;
    [((java_lang_StringBuilder*) _stack[_sp].o) __init_java_lang_StringBuilder__];
    _stack[_sp++].o = @"xmlns:";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[2].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"='";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = _locals[3].o;
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _stack[_sp++].o = @"'";
    _sp -= 2;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) append___java_lang_String:_stack[_sp + 1].o];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 1;
    _op1.o = [((java_lang_StringBuilder*) _stack[_sp].o) toString__];
    [_op1.o autorelease];
    _stack[_sp++].o = _op1.o;
    _sp -= 2;
    [((java_io_PrintStream*) _stack[_sp].o) print___java_lang_String:_stack[_sp + 1].o];
    label1:;
    [_pool release];
    return;
}



@end

