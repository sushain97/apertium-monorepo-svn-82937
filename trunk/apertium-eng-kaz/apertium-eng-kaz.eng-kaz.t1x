<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE transfer SYSTEM "transfer.dtd"> --> 
<!-- -*- sgml -*- -->
<transfer default="chunk">

  <section-def-cats>
<def-cat n="cat_predet">
 <cat-item tags="predet.sp"/>
 
 </def-cat>
<def-cat n="cat_det">
 <cat-item lemma="this" tags="det.dem.sg"/>
 <cat-item lemma="this" tags="det.dem.pl"/>
 
 </def-cat>
<def-cat n="cat_det-dem">
 <cat-item lemma="that" tags="det.dem.sg"/>
 <cat-item lemma="those" tags="det.dem.pl"/>
 
 </def-cat>
    <def-cat n="pers-verb"> <!-- past and present tense -->
      <cat-item tags="vblex.pres.*"/>
      <cat-item tags="vblex.sep.pres.*"/>
      <cat-item tags="vblex.pres"/>
      <cat-item tags="vblex.past"/>
 <cat-item tags="vblex.sep.pres"/>
      <cat-item tags="vblex.sep.past"/>
    </def-cat>   
    <def-cat n="approx-inf-verb"> <!-- infinitive and present where infinitive should have been found (tagger error) -->
      <cat-item tags="vblex.inf"/> <!-- This may be dangerous and should be treated at tagger level -->      
      <cat-item lemma="be" tags="vbser.inf"/>
    </def-cat>

  <def-cat n="inf-verb"> 
      <cat-item tags="vblex.inf"/>
      <cat-item tags="vbser.inf"/>

    </def-cat>
    <def-cat n="vaux-will"> <!-- future -->
      <cat-item lemma="will" tags="vaux.inf"/>
    </def-cat>

  <def-cat n="like"> <!--look like -->
      <cat-item lemma="like" tags="vblex.inf"/>
    </def-cat>



  <def-cat n="time"> <!--look like -->
      <cat-item lemma="time" tags="n.*"/>
    </def-cat>

  <def-cat n="past"> <!--ten past six -->
      <cat-item lemma="past" tags="vblex.pres"/>
    </def-cat>


  <def-cat n="v-look"> <!--look like -->
      <cat-item lemma="look" tags="vblex.*"/>
    </def-cat>
<def-cat n="vaux-would"> <!-- future -->
      <cat-item lemma="would" tags="vaux.past"/>
    </def-cat>
<def-cat n="vaux-must"> <!-- must -->
      <cat-item lemma="must" tags="vaux.inf"/>
    </def-cat>

<def-cat n="language"> <!--Turkic --> <!-- Have to check again, for which phrase I did it-  Aida-->
      <cat-item lemma="Kazakh" tags="n.sg"/>
<cat-item lemma="portuguese" tags="adj"/>
    </def-cat>
<def-cat n="vaux-may"> <!-- must -->
      <cat-item lemma="may" tags="vaux.*"/>
      <cat-item lemma="might" tags="vaux.*"/>
    </def-cat>

<def-cat n="vbmod-have-to"> <!-- have -->
      <cat-item lemma="have# to" tags="vbmod.*"/>
    </def-cat>
<def-cat n="vbmod-want-to"> <!-- want -->
      <cat-item lemma="want# to" tags="vbmod.*"/>
    </def-cat>
<def-cat n="vbmod-need-to"> <!-- need -->
      <cat-item lemma="need# to" tags="vbmod.*"/>
    </def-cat>
<def-cat n="s-gen"> <!-- Np's home -->
      <cat-item lemma="'s" tags="gen"/>
    </def-cat>

<def-cat n="vbmod"> <!-- have -->
      <cat-item lemma="have# to" tags="vbmod.*"/>
      <cat-item lemma="want# to" tags="vbmod.*"/>
      <cat-item lemma="need# to" tags="vbmod.*"/>
    <!--  <cat-item lemma="can" tags="vaux.*"/>-->
 <!--  <cat-item lemma="should" tags="vaux.inf"/>-->
      <cat-item lemma="shall" tags="vaux.inf"/>
      <cat-item lemma="must" tags="vaux.inf"/>
      <cat-item lemma="might" tags="vaux.inf"/>
      <cat-item lemma="may" tags="vaux.inf"/>
      <cat-item lemma="would" tags="vaux.past"/>
      <cat-item lemma="will" tags="vaux.inf"/>
    </def-cat>

 <def-cat n="vaux-can"> 
      <cat-item lemma="can" tags="vaux.pres"/>
      <cat-item lemma="can" tags="vaux.past"/>
      <cat-item lemma="can" tags="vaux.*"/>
    </def-cat>
<def-cat n="vaux-should"> 
      <cat-item lemma="should" tags="vaux.inf"/>
    </def-cat>

<def-cat n="or"> <!-- future -->
      <cat-item lemma="or" tags="cnjcoo"/>
    </def-cat>
    <def-cat n="pers-verb-to-be"> <!-- past and present tense -->
      <cat-item tags="vbser.pres"/>
      <cat-item tags="vbser.pres.*"/>
      <cat-item tags="vbser.past.*"/>
      <cat-item tags="vbser.past"/>
 <!-- <cat-item tags="vbser.pp"/> --> <!-- I think this does not belong here -->
    </def-cat>
<def-cat n="is-verb-to-be"> <!-- past and present tense -->
      <cat-item lemma="be" tags="vbser.pres"/>

 <cat-item lemma="be" tags="vbser.pres.*"/>
      <cat-item lemma="be" tags="vbser.pres.*"/>
      <cat-item lemma="be" tags="vbser.past.*"/>
      <cat-item lemma="be" tags="vbser.past"/>
 <!-- <cat-item tags="vbser.pp"/> --> <!-- I think this does not belong here -->
    </def-cat>
    <def-cat n="verb-ing"> <!--playing -->
      <cat-item tags="vblex.ger"/>
      <cat-item tags="vbmod.ger"/> 
   </def-cat>   

 <def-cat n="NP_verb-ing"> <!-- for ger like NP, I like playing-->
      <cat-item tags="vblex.ger"/>
      <cat-item tags="vblex.pprs"/>
      <cat-item tags="vblex.sep.ger"/>
   </def-cat>   

<def-cat n="subs-ing"> <!-- for ger like NP, I like playing-->
      <cat-item tags="vblex.subs"/>
      <cat-item tags="vblex.pprs"/>
      <cat-item tags="vblex.sep.pprs"/>
      <cat-item tags="vblex.sep.subs"/>
   </def-cat> 
<def-cat n="verb-pp"> <!-- present perfect tense -->
      <cat-item tags="vblex.pp"/>
 <cat-item lemma="be" tags="vbser.pp"/>
<cat-item tags="vbhaver.pp"/>
<cat-item tags="vblex.sep.pp"/>
<cat-item tags="vblex.sep.inf"/>
   </def-cat> 
  <def-cat n="vaux-have"> <!--perfect vbhaver -->
      <cat-item lemma="have" tags="vbhaver.*"/>
    </def-cat>

 <def-cat n="vblex-have"> <!-- to have as a lexical verb -->
      <cat-item lemma="have" tags="vblex.*"/>
    </def-cat>


 <def-cat n="det-which"> 
      <cat-item lemma="which" tags="det.*"/>
    </def-cat>
 <def-cat n="vblex-need"> <!-- to have as a lexical verb -->
      <cat-item lemma="need" tags="vblex.*"/>
    </def-cat>

  <def-cat n="vaux-do"> <!--perfect vbhaver -->
      <cat-item lemma="do" tags="vbdo.*"/>
    </def-cat>
    <def-cat n="not">
      <cat-item lemma="not" tags="adv"/>
     </def-cat>

<def-cat n="in-contrast">
      <cat-item lemma="in contrast" tags="adv"/>
     </def-cat>
<def-cat n="old">
      <cat-item lemma="old" tags="adj.*"/>
     </def-cat>

<def-cat n="one-another">
      <cat-item lemma="one another" tags="n.*"/>
      <cat-item lemma="each other" tags="n.*"/>
     </def-cat>

<def-cat n="years">
      <cat-item lemma="year" tags="n.pl.*"/>
      <cat-item lemma="year" tags="n.pl"/>
     </def-cat>

 <def-cat n="np-ant"> 
      <cat-item tags="np.ant"/>
      <cat-item tags="np.ant.*"/>

   </def-cat> 

 <def-cat n="np-cog"> 
      <cat-item tags="np.cog"/>
      <cat-item tags="np.cog.*"/>

   </def-cat>

<!--     
<def-cat n="be">
      <cat-item lemma="be" tags="vbser.inf"/>
<cat-item lemma="be" tags="vbser.ger"/>
   <cat-item lemma="be" tags="vbser.pp"/>

     </def-cat>
-->     
<def-cat n="been">
 <cat-item lemma="be" tags="vbser.pp"/>
</def-cat>    

<def-cat n="every">
 <cat-item lemma="every" tags="det.ind.*"/>
</def-cat>  

<def-cat n="being">
 <cat-item lemma="be" tags="vbser.ger"/>
</def-cat>     

<def-cat n="be"> <!-- needed? -->
 <cat-item lemma="be" tags="vbser.inf"/>
</def-cat>  

<def-cat n="be-vblex"> <!-- CHECKneeded? -->
 <cat-item lemma="be" tags="vbser.pres.*"/>
 <cat-item lemma="be" tags="vbser.past"/>
 <cat-item lemma="be" tags="vbser.inf"/>
 <cat-item lemma="be" tags="vbser.ger"/>
 <cat-item lemma="be" tags="vbser.pprs"/>
 <cat-item lemma="be" tags="vbser.subs"/>
 <cat-item lemma="be" tags="vbser.pp"/>

</def-cat>    
 <def-cat n="noun">
       <cat-item tags="n.*"/>
      <cat-item tags="np.al"/>
      <cat-item tags="np.al.*"/>
   <!--   <cat-item tags="np.cog"/>
      <cat-item tags="np.cog.*"/>-->
      <cat-item tags="np.unk"/>
      <cat-item tags="np.top"/>
      <cat-item tags="np.loc.*"/>
    </def-cat>
    <def-cat n="noun-ant">
      <cat-item tags="np.cog"/>
      <cat-item tags="np.cog.*"/>
      <cat-item tags="np.ant.*"/>
    </def-cat>
 
    <def-cat n="nom">
       <cat-item tags="n.*"/>
      <cat-item tags="np.top"/>
      <cat-item tags="np.al"/>
      <cat-item tags="np.al.*"/>
      <cat-item tags="np.cog"/>
      <cat-item tags="np.cog.*"/>
      <cat-item tags="np.*"/>
      <cat-item tags="np.unk"/>
      <cat-item tags="np.ant.*"/>
      <cat-item tags="np.loc.*"/>
    </def-cat>

<def-cat n="to">
      <cat-item tags="pr"/>
     </def-cat>
<def-cat n="num-year">
      <cat-item tags="num.year"/>
     </def-cat>
<def-cat n="both">
      <cat-item lemma="both" tags="prn.tn.mf.*"/>
     </def-cat>
  
    <def-cat n="num">
      <cat-item tags="num"/>
      <cat-item tags="det.ord.*"/>
      <cat-item tags="num.*"/>
     </def-cat>
    <def-cat n="adjec">
    <cat-item tags="adj"/>
    <cat-item tags="adj.sint"/>
    </def-cat>
    <def-cat n="sup-adjec">
      <cat-item tags="adj.sint.sup"/>
      <cat-item tags="adj.sint.sup.*"/>
    </def-cat>

  <def-cat n="comp-adjec">
      <cat-item tags="adj.sint.comp"/>
      <cat-item tags="adj.sint.comp.*"/>
    </def-cat>

    <def-cat n="non-sup-adjec">
      <cat-item tags="adj"/>
      <cat-item tags="adj.sint"/>
  <!--    <cat-item tags="adj.sint.comp"/>      
      <cat-item tags="adj.sint.comp.*"/>-->
    </def-cat>

<def-cat n="subst-adjec">
      <cat-item tags="adj.comp"/>
      <cat-item tags="adj.sup"/>
      <cat-item lemma="dumb" tags="adj.sint.comp"/>
      
    </def-cat>


    <def-cat n="the-most">
      <cat-item lemma="the most" tags="det.qnt.sp"/>
    </def-cat>

  <def-cat n="more">
      <cat-item lemma="more" tags="preadv"/>
    </def-cat>

    <def-cat n="det">
      <cat-item tags="det.def.*"/>
      <cat-item tags="det.ind.*"/>
      <cat-item tags="det.pos.*"/>
      <cat-item tags="det.dem.*"/>
      <cat-item tags="det.qnt.*"/>
    </def-cat>
    <def-cat n="the">
      <cat-item lemma="the" tags="det.def.sp" />
    </def-cat>
    <def-cat n="prep">
      <cat-item tags="pr"/>
     </def-cat>
  <def-cat n="rel">
      <cat-item tags="rel"/>
 <cat-item tags="rel.*"/>
     </def-cat>

    <def-cat n="obj-pron">
       <cat-item tags="prn.obj.*"/>
       <cat-item tags="prn.tn.*"/>
       <cat-item tags="prn.pos.*"/>
       <cat-item tags="prn.subj.p3.nt.sg"/>
 <cat-item tags="prn.ref.*"/>
       <cat-item tags="prn.itg.*"/>
    </def-cat>
  <def-cat n="pron-neg">
      <cat-item tags="prn.*"/>
      </def-cat>

    
 <def-cat n="it-pron">
       <cat-item lemma="it"  tags="prn.subj.p3.*"/>
    </def-cat>

    <def-cat n="subj-pron">
       <cat-item tags="prn.subj.*"/>
    </def-cat>
<def-cat n="coma">
      <cat-item tags="cm"/>
    </def-cat>

    <def-cat n="quote">
      <cat-item tags="quote" lemma="'"/>
    </def-cat>
    <def-cat n="quest">
      <cat-item tags="sent" lemma="?"/>
    </def-cat>
 <def-cat n="if-cnjadv">
       <cat-item lemma="if" tags="cnjadv"/>

       <cat-item lemma="If" tags="cnjadv"/>
    </def-cat>
 <def-cat n="when-cnjadv">

<cat-item lemma="when" tags="cnjadv"/>

    </def-cat>


 

 <def-cat n="cnjcoo">
       <cat-item tags="cnjcoo"/>
    </def-cat>

  <def-cat n="preadv">
      <cat-item tags="preadv.*"/>
      <cat-item tags="preadv"/>
    </def-cat>

  <def-cat n="adv-itg">
      <cat-item lemma="when" tags="adv.itg"/>
      <cat-item lemma="when" tags="adv.itg"/>
      <cat-item lemma="where" tags="adv.itg"/>
      
    </def-cat>


  <def-cat n="what-adv-itg">

      <cat-item lemma="what" tags="adv.itg"/>
      
    </def-cat>

    <def-cat n="adv">
      <cat-item tags="adv.*"/>
      <cat-item tags="adv"/>
       <cat-item tags="cnjadv"/>
    </def-cat>

    <def-cat n="unknown">
      <cat-item tags=""/>
    </def-cat>

   
  </section-def-cats>
 
  <section-def-attrs>

<def-attr n="_attr_prn_">
<attr-item tags="prn.qnt"/>
<attr-item tags="prn.dem"/>
  </def-attr>
<def-attr n="_attr_det_">
 <attr-item tags="det.dem.sg"/>
 <attr-item tags="det.dem.pl"/>
  </def-attr>
    <def-attr n="a_tense">
      <attr-item tags="pres"/>
      <attr-item tags="past"/>
      <attr-item tags="inf"/>
      <attr-item tags="pp"/>
    </def-attr> 
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.org"/>
      <attr-item tags="np.unk"/>
      <attr-item tags="abbr"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.pat"/>
      <attr-item tags="np.al"/>
    </def-attr>
    <def-attr n="a_adjec">
       <attr-item tags="adj"/>

    </def-attr>
 <def-attr n="a_gender">
       <attr-item tags="mf"/>
       <attr-item tags="m"/>
       <attr-item tags="f"/>

    </def-attr>

 <def-attr n="a_subst">
       <attr-item tags="subst"/>
    </def-attr>
<def-attr n="a_detdef">
       <attr-item tags="det.def"/>
       <attr-item tags="det.ind"/>
    </def-attr>
 
     <def-attr n="a_num">
      <attr-item tags="num"/>
      <attr-item tags="num.ord"/>
      <attr-item tags="num.ord.nom"/>
      <attr-item tags="num.ord.subst"/>
      <attr-item tags="num.ord.subst.nom"/>
      <attr-item tags="num.coll"/>
    </def-attr>

 <def-attr n="a_obj_pr">
      <attr-item tags="ind"/>
      <attr-item tags="itg"/>
      <attr-item tags="qnt"/>
      <attr-item tags="neg"/>
    </def-attr>
 <def-attr n="a_det_pron_adv">
      <attr-item tags="det"/>
      <attr-item tags="prn"/>
      <attr-item tags="adv"/>
    </def-attr>
    <def-attr n="a_gen">
      <attr-item tags="f"/>
      <attr-item tags="m"/>
      <attr-item tags="mf"/>
    </def-attr>
    <def-attr n="a_pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="a_nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
    </def-attr>
<def-attr n="a_trans">
      <attr-item tags="iv"/>
      <attr-item tags="tv"/>
    </def-attr>

 <def-attr n="a_cnjsub">
       <attr-item tags="cnjsub"/>
       <attr-item tags="adv"/>
    </def-attr>
 <def-attr n="a_cnjcoo">
       <attr-item tags="post"/>
       <attr-item tags="cnjcoo"/>
    </def-attr>
    <def-attr n="a_kaz_verb"> 
      <attr-item tags="v.tv"/>
      <attr-item tags="v.iv"/>

    </def-attr>
    <def-attr n="a_subj"> 
      <attr-item tags="subj"/>
    </def-attr>
  <def-attr n="a_pron"> 
      <attr-item tags="prn"/>
      <attr-item tags="prn.neg"/>
 <attr-item tags="prn.ind"/>
 <attr-item tags="prn.obj"/>
   <attr-item tags="prn.dem.*"/>
      <attr-item tags="prn.ref"/>

 <attr-item tags="prn.dem"/>
 <attr-item tags="prn.itg"/>
 <attr-item tags="prn.itg.sim"/>
<attr-item tags="prn.qnt"/>
<attr-item tags="prn.pos"/>
      <attr-item tags="prn.qnt.*"/>
      <attr-item tags="prn.ind"/>
 <attr-item tags="prn.*"/> 
      <attr-item tags="prn.pers"/>  
      <attr-item tags="prn.pers.*.*.gen"/>  
      <attr-item tags="prn.pers.*.*.gen.subst"/>  
</def-attr>
    <def-attr n="a_kaz_perspron"> 
      <attr-item tags="prn.pers"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.qnt"/>
    </def-attr>
    <def-attr n="a_cas">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="gen"/>
      <attr-item tags="loc"/>
      <attr-item tags="ins"/>
      <attr-item tags="abl"/>
    </def-attr>
    <def-attr n="a_Rcas">
      <attr-item tags="Rnom"/>
      <attr-item tags="Racc"/>
      <attr-item tags="Rdat"/>
      <attr-item tags="Rgen"/>
      <attr-item tags="Rloc"/>
      <attr-item tags="Rins"/>
      <attr-item tags="Rabl"/>
    </def-attr>
    <def-attr n="a_possessive"> <!-- check if complete -->
      <attr-item tags="PXD"/> <!-- to be determined -->
      <attr-item tags="px3sp"/>
      <attr-item tags="px1sg"/>
      <attr-item tags="px2sg"/>
      <attr-item tags="px1pl"/>
      <attr-item tags="px2pl"/>
      <attr-item tags="px3pl"/>
    </def-attr>

<def-attr n="a_cog"> 
      <attr-item tags="cog"/> 
    </def-attr>

    <def-attr n="a_postposition"> <!-- Kazakh postposition indicators -->
      <attr-item tags="n"/> 
      <attr-item tags="post"/>
	 
    </def-attr>
    <def-attr n="a_det">  <!-- determiner tag -->
      <attr-item tags="det"/>
      <attr-item tags="prn"/>
    </def-attr>
    <def-attr n="a_dem">  <!-- demonstrative tag -->
      <attr-item tags="dem"/>
      <attr-item tags="qnt"/>
      <attr-item tags="ind"/>
    </def-attr>
    <def-attr n="a_pos">  <!-- possessive tag -->
      <attr-item tags="pos"/>
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="number"/>
    <def-var n="gender"/>
    <def-var n="current_verb"/>
    <def-var n="possessive"/>
    <def-var n="plural"/>
    <def-var n="case"/>
    <def-var n="caseDem"/>
    <def-var n="bolmasyn"/>
  <def-var n="caseFirstWord"/>
    <def-var n="tense"/>
    <def-var n="verb-pass"/>
    <def-var n="verb-pers"/> <!-- State variable -->
    <def-var n="verb-nbr"/> <!-- State variable -->
    <def-var n="formality"/> <!-- Used to generate formal versions of 2nd person pronouns -->
    <def-var n="pptag"/> <!-- Will contain the tag of the next postpositional phrase generated (AdvP, GenP, etc.) -->

    <def-var n="genpp"/> <!-- yes: will generate postposition; no= won't -->
    <def-var n="pplemma"/> <!-- lemma of postpostion -->
    <def-var n="ppcat"/> <!-- category of postposition -->
    <def-var n="ppinfl"/> <!-- inflexion information for postposition -->
    <def-var n="postposition_lu"/> <!-- complete postposition ready for lu -->        
    <def-var n="noun_lu"/> <!-- complete noun in prep X rules, ready for lu -->
    <def-var n="NEW-noun_lu"/> <!-- complete noun lu, linked, new version -->
    <def-var n="adjec_lu"/> <!-- adjective, ready for lu -->
<def-var n="subj-pron_lu"/> <!-- complete noun in prep X rules, ready for lu -->
<def-var n="obj-pron_lu"/>
<def-var n="pos"/>
<def-var n="pron_lu"/>
<def-var n="comp_lu"/>
<def-var n="num_lu"/>    
<def-var n="noun_lu_with_poss"/> <!-- same, with possessive -->
    <def-var n="np-poss"/> <!-- possessive for noun_lu_with_poss -->
    <def-var n="poss-frm"/> <!-- formality for possessives -->
    <def-var n="preblank-1"/>
    <def-var n="preblank-2"/>
 <def-var n="cnjadv_lu"/> <!-- for conditional IF -->
  <def-var n="cnjcoo_lu"/> <!-- for THAN -->   
  </section-def-vars>
  <section-def-lists>
    <def-list n="pseudo_modal_verbs"> <!-- Verbs that can take verb-ing as object -->
      <list-item v="like"/>
      <list-item v="enjoy"/>
      <list-item v="start"/>
      <list-item v="love"/>
      <list-item v="stop"/>
      <list-item v="finish"/>
    </def-list>
    <def-list n="negative_pron"> <!-- Verbs that can take verb-ing as object -->
      <list-item v="nothing"/>
      <list-item v="nobody"/>
     <!--   <list-item v="anything"/>-->
    
    </def-list>
  </section-def-lists>
  

  <section-def-macros>

    <def-macro n="out-blank-if-not-single-space" npar="1">
<!-- Outputs nothing if the blank is " " and the blank otherwise..-->
<!-- Takes one position parameter -->
      <choose>
        <when>
          <test>
            <not>
              <equal>
                <b pos="1"/>
                <lit v=" "/>
              </equal>
            </not>
          </test>
          <out>
            <b pos="1"/>
          </out>
        </when>
      </choose>
    </def-macro>
    
     <def-macro n="process-preblank-1" npar="2">
<!-- Sets preblank-1 to null if it is just a single blank;
     sets it to superblank 1 otherwise -->
      <choose>
        <when>
          <test>
              <equal>
                <b pos="1"/>
                <lit v=" "/>
              </equal>
          </test>
          <let>
            <var n="preblank-1"/><lit v=""/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="preblank-1"/><b pos="1"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
 
     <def-macro n="process-preblank-2" npar="1">
<!-- Sets preblank-2 to null if it is just a single blank;
     sets it to superblank 1 otherwise -->
      <choose>
        <when>
          <test>
            <not>
              <equal>
                <b pos="1"/>
                <lit v=" "/>
              </equal>
            </not>
          </test>
          <let>
            <var n="preblank-2"/><b pos="1"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="preblank-2"/><lit v=""/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    


    <def-macro n="initialize_number" npar="0">
          <let>
            <var n="number"/>
            <lit v=""/>
          </let>
    </def-macro>

    <def-macro n="initialize_case_to_nominative" npar="0">
          <let>
            <var n="case"/>
            <lit-tag v="nom"/>
          </let>
    </def-macro>

    <def-macro n="assign-tl-plural-if-sl-nbr-plural" npar="1">
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" side="sl" part="a_nbr"/>
              <lit-tag v="pl"/>
            </equal>
          </test>
          <let><var n="number"/><lit-tag v="pl"/></let>
        </when>
      </choose>
    </def-macro>


    <def-macro n="assign-tl-number-according-to-sl-nbr" npar="1">
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" side="sl" part="a_nbr"/>
              <lit-tag v="pl"/>
            </equal>
          </test>
          <let><var n="number"/><lit-tag v="pl"/></let>
        </when>
        <otherwise>
          <let><var n="number"/><lit-tag v="sg"/></let>
        </otherwise>   
      </choose>
    </def-macro>

<def-macro n="assign-osy-dem-nom" npar="1">
      <choose>
<when> <!-- these as osy prn dem -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<or>
<equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="These"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="these"/></equal>
</or>
</and>
</test><let><var n="caseDem"/><lit-tag v="nom"/></let>
</when>
<otherwise>
<let><var n="caseDem"/><lit v=""/></let>
</otherwise>
</choose>
    </def-macro>

    <!--<def-macro n="choose_case_and_postposition" npar="1">  
    <let><var n="pptag"/><lit-tag v="AdvP"/></let> <let><var n="genpp"/><lit v="no"/></let> 
    <choose>
      <when> 
        <test>
          <or>
            <equal>
               <clip pos="1" side="tl" part="a_postposition"/>
               <lit-tag v="n"/>
            </equal>
 	
            <equal>
               <clip pos="1" side="tl" part="a_postposition"/>
               <lit-tag v="post"/>
            </equal>

          </or>  
        </test>
        <let><var n="genpp"/><lit v="yes"/></let> 
      </when>
    </choose>

    <choose>
      <when>
        <test>
          <equal><var n="genpp"/><lit v="no"/></equal>
        </test>
        <choose> 
          <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="in"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="loc"/>
            </let>
 	  </when> 

      <when>   
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="lem"/>
            <lit v="at"/>
          </equal>
        </test>
        <let>
          <var n="case"/>
          <lit-tag v="loc"/>
        </let>
	</when> 
  
           <when> 
             <test>
               <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="from"/>
               </equal>
             </test>
             <let>
                <var n="case"/>
                <lit-tag v="abl"/>
             </let>
	   </when>    

          <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="to"/>
              </equal>
            </test>
            <let>
              <var n="case"/>
              <lit-tag v="dat"/>
            </let>
	  </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="with"/>
                </equal>
             </test>
             <let>
               <var n="case"/>
               <lit-tag v="ins"/>
             </let>
       	   </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="of"/>
                 </equal>
              </test>
              <let>
                <var n="case"/>
                <lit-tag v="gen"/>
              </let>
              <let>
                 <var n="pptag"/>
                 <lit-tag v="GenP"/>   
              </let>
	   </when>    

           <otherwise>
              <let>
                <var n="case"/>
                <lit-tag v="ins"/> 
              </let>
              <let>
                <var n="pptag"/>
                <lit-tag v="AdvP"/>   
              </let>
            </otherwise>
	</choose>
      </when> 

      <when>  
        <test>
          <equal>
             <var n="genpp"/>
             <lit v="yes"/>
          </equal>
        </test>
        <choose>
          <when> 
             <test>
               <equal>
                 <clip side="tl" part="a_postposition" pos="1"/>
                 <lit-tag v="n"/>
	       </equal>
             </test>
             <let><var n="case"/><lit-tag v="gen"/></let>
             <let><var n="pptag"/><lit-tag v="AdvP"/></let>
             <let><var n="postposition_lu"/> 
                      <concat>
                        <clip pos="1" side="tl" part="lem"/>
                        <lit-tag v="n"/>
                        <lit-tag v="px3sp"/>
        		<clip part="a_cas" side="tl" pos="1"/> 
                      </concat>
             </let>
	  </when>
          <when> 
             <test>
               <equal>
                 <clip side="tl" part="a_postposition" pos="1"/>
                 <lit-tag v="post"/>
	       </equal>
             </test>
             <choose>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rnom"/></equal></test>
                   <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rdat"/></equal></test>
                   <let><var n="case"/><lit-tag v="dat"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rabl"/></equal></test>
                   <let><var n="case"/><lit-tag v="abl"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rloc"/></equal></test>
                   <let><var n="case"/><lit-tag v="loc"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rins"/></equal></test>
                   <let><var n="case"/><lit-tag v="ins"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Racc"/></equal></test>
                   <let><var n="case"/><lit-tag v="acc"/></let>
                </when>
                <when> <
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rgen"/></equal></test>
                   <let><var n="case"/><lit-tag v="gen"/></let>
                </when>
             </choose>
             <let><var n="pptag"/><lit-tag v="AdvP"/></let>
             <let><var n="postposition_lu"/> 
                      <concat>
                        <clip pos="1" side="tl" part="lem"/>
                        <lit-tag v="post"/>
                      </concat>
             </let>
	  </when>
	</choose>
       </when>
     </choose>
    </def-macro>

-->

<def-macro n="change-case" npar="1">  <!--change case to lower for p1 sg "I" -->
<choose>
  <when>
       <test>
<and>
         <equal>
           
           <clip pos="1" side="sl" part="a_pers"/>
            <lit-tag v="p1"/>

           </equal>
          <equal> 
           <clip pos="1" side="sl" part="a_subj"/>
            <lit-tag v="subj"/>
           </equal>
   </and>
          </test>
       <modify-case>
        <clip pos="1" side="tl" part="lem"/>
          <lit v="aa"/>
        </modify-case>
             <let>
		<var n="caseFirstWord"/>
		<lit v="aa"/>
	      </let>
       </when>
 <otherwise> 
  <modify-case>
        <clip pos="1" side="tl" part="lem"/>
          <lit v="aa"/>
        </modify-case>
	      <let>
		<var n="caseFirstWord"/>
		<lit v="aa"/>
	      </let>
	    </otherwise>
</choose>

</def-macro>

  <def-macro n="choose_case_and_postposition2" npar="2">  
    <let><var n="pptag"/><lit-tag v="PP"/></let> <!-- for most of them -->
    <let><var n="genpp"/><lit v="no"/></let> <!-- for simple cases -->

    <choose>
      <when> <!-- make genpp="yes" when a postposition is detected -->
        <test>
          <or>
            <equal>
               <clip pos="1" side="tl" part="a_postposition"/>
               <lit-tag v="n"/>
            </equal>
     
            <equal>
               <clip pos="1" side="tl" part="a_postposition"/>
               <lit-tag v="post"/>
            </equal>

          </or>  
        </test>
        <let><var n="genpp"/><lit v="yes"/></let> <!-- for simple cases -->
      </when>
    </choose>

    <choose>
      <when>
        <test>
          <equal><var n="genpp"/><lit v="no"/></equal>
        </test>
        <choose> <!-- no postpositions -->
          <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="in"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="loc"/>
            </let>
       </when> 
 <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="by"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="dat"/>
            </let>
       </when>
 <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="per"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="loc"/>
            </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="off"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="abl"/>
            </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="into"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="dat"/>
            </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="among"/>
              </equal>
            </test>
            <let>
               <var n="case"/>
               <lit-tag v="gen"/>
            </let>
       </when> 

      <when>   <!-- at and in have the same translation: locative -->
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="lem"/>
            <lit v="at"/>
          </equal>
        </test>
        <let>
          <var n="case"/>
          <lit-tag v="loc"/>
        </let>
    </when> 
  
           <when> 
             <test>
               <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="from"/>
               </equal>
             </test>
             <let>
                <var n="case"/>
                <lit-tag v="abl"/>
             </let>

       </when>    
<when> 
             <test>
               <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="after"/>
               </equal>
             </test>
             <let>
                <var n="case"/>
                <lit-tag v="abl"/>
             </let>
       </when>  
<when> 
             <test>
               <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="throughout"/>
               </equal>
             </test>
             <let>
                <var n="case"/>
                <lit-tag v="nom"/>
             </let>
       </when>    

<when> 
             <test>
               <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="since"/>
               </equal>
             </test>
             <let>
                <var n="case"/>
                <lit-tag v="abl"/>
             </let>
       </when>   
          <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="lem"/>
                <lit v="to"/>
              </equal>
            </test>
            <let>
              <var n="case"/>
              <lit-tag v="dat"/>
            </let>
      </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="with"/>
                </equal>
             </test>
             <let>
               <var n="case"/>
               <lit-tag v="ins"/>
             </let>
              </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="lem"/>
                  <lit v="of"/>
                 </equal>
              </test>
              <let>
                <var n="case"/>
                <lit-tag v="gen"/>
              </let>
              <let>
                 <var n="pptag"/>
                 <lit-tag v="GenP"/>   
              </let>
       </when>    

           <otherwise>
              <let>
                <var n="case"/>
                <lit-tag v="nom"/> <!-- Choice when we don't know the translation of the preposition, can be improved -->
              </let>
              <let>
                <var n="pptag"/>
                <lit-tag v="PP"/>  
              </let>
            </otherwise>
    </choose>
      </when> <!-- End of solutions without postpositions -->

      <when>  <!--- Now, with postpositions -->
        <test>
          <equal>
             <var n="genpp"/>
             <lit v="yes"/>
          </equal>
        </test>
        <choose> <!-- Generate postposition --> 
          <when> <!-- noun-based postpositions -->
             <test>
               <equal>
                 <clip side="tl" part="a_postposition" pos="1"/>
                 <lit-tag v="n"/>
           </equal>
             </test>
             <let><var n="case"/><lit-tag v="gen"/></let>
             <let><var n="pptag"/><lit-tag v="PP"/></let>
             <!-- we need to compute "possessive"  --> 
 
<let><var n="possessive"/><lit-tag v="px3sp"/></let> <!-- default value -->

<choose> 
<when>
   <test>
      <and>
          <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag  v="p1"/></equal>
          <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
       </and>
    </test>      
          <let><var  n="possessive"/><lit-tag v="px1sg"/></let>
</when>


<when>
   <test>
      <and>
          <equal><clip  pos="2" side="sl" part="a_pers"/><lit-tag  v="p1"/></equal>
          <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
       </and>
    </test>      
          <let><var  n="possessive"/><lit-tag v="px1pl"/></let>
</when>
<when><!--under you-->
   <test>
      <and>
          <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag  v="p2"/></equal>
          <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sp"/></equal>
	
       </and>
    </test>      
<let><var  n="formality"/><lit-tag v="frm"/></let>
<let><var  n="possessive"/><lit-tag v="px2sg.frm"/></let>
</when>



<!-- ...etc remaining cases ... -->
</choose>
                  
              <!-- end of computation of "possessive" -->
             <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                        <clip pos="1" side="tl" part="lem"/>
                        <lit-tag v="n"/>
			
                        <!-- <lit-tag v="px3sp"/>  -->
                     <var n="possessive"/>
                        
                        
                <clip part="a_cas" side="tl" pos="1"/> 
                      </concat>
             </let>
      </when>
          <when> <!-- non-noun-based postpositions -->
             <test>
               <equal>
                 <clip side="tl" part="a_postposition" pos="1"/>
                 <lit-tag v="post"/>
           </equal>
             </test>
             <choose>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rnom"/></equal></test>
                   <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rdat"/></equal></test>
                   <let><var n="case"/><lit-tag v="dat"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rabl"/></equal></test>
                   <let><var n="case"/><lit-tag v="abl"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rloc"/></equal></test>
                   <let><var n="case"/><lit-tag v="loc"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rins"/></equal></test>
                   <let><var n="case"/><lit-tag v="ins"/></let>
                </when>
                <when>
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Racc"/></equal></test>
                   <let><var n="case"/><lit-tag v="acc"/></let>
                </when>
                <when> <!-- This case is unlikely, but we'll leave it just in case -->
                   <test><equal><clip part="a_Rcas" pos="1" side="tl"/><lit-tag v="Rgen"/></equal></test>
                   <let><var n="case"/><lit-tag v="gen"/></let>
                </when>
             </choose>
             <let><var n="pptag"/><lit-tag v="PP"/></let>
             <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                        <clip pos="1" side="tl" part="lem"/>
                        <lit-tag v="post"/>
                      </concat>
             </let>
      </when>
    </choose>
       </when>
     </choose>
<choose>
         <when> 
           <test><equal><var n="case"/><lit v=""/>              </equal></test>
<let><var n="case"/><lit-tag v="nom"/> </let>
</when>
</choose>

    </def-macro>



<def-macro n="NEW-gen-simple-verb" npar="1">  
<choose>
<when>
<test>
   <in caseless="yes">
      <clip pos="1" side="sl" part="lem"/>
      <list n="pseudo_modal_verbs"/>
   </in>
</test>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
      <chunk name="pers-verb1">
      <tags>
        <tag><lit-tag v="VP_psmod"/></tag> 
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="6"/>
          <lit-tag v="4"/>

          <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
</out>


</when>
<otherwise>
<out>
      <chunk name="pers-verb1">
      <tags>
        <tag><lit-tag v="VP_psmod"/></tag> 
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>

          <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
</out>


</otherwise>
</choose>

</when>

<otherwise>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
      <chunk name="pers-verb11">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag><!-- negative -->
        <tag><lit-tag v="CD"/></tag> 
      </tags>
        <lu>
          <lit v="бол"/>
 	  <lit-tag v="v"/>
 	  <lit-tag v="iv"/>
	  <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>


</when>
<otherwise>

<out>
      <chunk name="pers-verb2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag><!-- negative -->
        <tag><lit-tag v="CD"/></tag> 
      </tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

</otherwise>
</choose>


</otherwise>
</choose>
</def-macro>

<def-macro n="NEW-gen-simple-verb-neg" npar="1">
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
      <chunk name="pers-verb2-be">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
        <tag><lit-tag v="CD"/></tag>       
</tags>
        <lu>
             <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

</when>
<otherwise>
<out>
      <chunk name="pers-verb2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
        <tag><lit-tag v="CD"/></tag>       
</tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

</otherwise>
</choose>

</def-macro>

<def-macro n="choose-pass" npar="1"><!-- passive could not be applied for intransitive verbs -->
<choose>
     <when>
       <test>
         <equal><clip pos="1" side="tl" part="a_trans"/><lit-tag v="tv"/></equal>
       </test>
      <let>
          <var n="verb-pass"/><lit-tag v="pass"/>
      </let>
     </when>
<otherwise>      <let>
          <var n="verb-pass"/><lit v=""/>      </let>
</otherwise>
    </choose>
</def-macro>

<def-macro n="NEW-gen-simple-verb-pass" npar="1">
 <call-macro n="choose-pass"><with-param pos="1"/></call-macro> 
    <choose>
     <when>
       <test>
         <equal><var n="verb-nbr"/><lit v=""/></equal></test>
      <let>
          <var n="verb-nbr"/><lit-tag v="sg"/>
      </let>
     </when>
    </choose>
<out>
      <chunk name="pers-verb-pass1">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
	  <var n="verb-pass"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>
</def-macro>


<def-macro n="NEW-gen-simple-verb-pass-neg" npar="1">
<out>
      <chunk name="pers-verb3">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag>
      </tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="6"/>          
          <lit-tag v="4"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
</def-macro>


<def-macro n="default-nbr-pers" npar="0">
    <choose>
     <when>
       <test>
         <equal><var n="verb-pers"/><lit v=""/></equal></test>
      <let>
          <var n="verb-pers"/><lit-tag v="p3"/>
      </let>
     </when>
    </choose>
    <choose>
     <when>
       <test>
         <equal><var n="verb-nbr"/><lit v=""/></equal></test>
      <let>
          <var n="verb-nbr"/><lit-tag v="sg"/>
      </let>
     </when>
    </choose>
</def-macro>    










<!-- The build-noun-lu will not be used when all prep X rules are converted -->
<def-macro n="build-noun-lu" npar="1"> 
     <let>
           <var n="noun_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_nom"/>
               <var n="number"/> 
               <var n="case"/>
           </concat>  
        </let>
</def-macro>


<def-macro n="NEW-build-noun-lu-2-4-5" npar="1"> 
<choose>
     <when>
       <test>
         <equal><clip pos="1" side="tl" part="a_cog"/><lit-tag v="cog"/></equal></test>
      <let>
          <var n="gender"/><clip pos="1" side="sl" part="a_gender"/>
      </let>
     </when>
     <otherwise>
      <let>
          <var n="gender"/><clip pos="1" side="tl" part="a_gender"/>
      </let>
     </otherwise>
    </choose>
     <let>
           <var n="NEW-noun_lu"/>
           <concat>
               <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_nom"/>
                <var n="gender"/>
               <lit-tag v="2"/> <!-- for number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive -->
               <lit-tag v="5"/> <!-- for case -->
           </concat>  
        </let>
</def-macro>

<def-macro n="NEW-build-noun-lu-2-4-5-sg" npar="1"> 
     <let>
           <var n="NEW-noun_lu"/>
           <concat>
               <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- force singular number (used with numerals) -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive -->
               <lit-tag v="5"/> <!-- for case -->
           </concat>  
        </let>
</def-macro>

<def-macro n="build-adjec-lu" npar="1"> 
     <let>
           <var n="adjec_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_adjec"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="build-pron-lu" npar="1"> 
     <let>
           <var n="pron_lu"/>
           <concat>
          <clip pos="1" side="tl" part="lem"/> 
          <clip pos="1" side="tl" part="a_pron"/>
               <lit-tag v="2"/> <!-- for number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive -->
               <lit-tag v="5"/> <!-- for case -->
           </concat>  
        </let>
</def-macro>

<def-macro n="build-num-lu" npar="1"> 
     <let>
           <var n="num_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_num"/>
           </concat>  
        </let>
</def-macro>



<def-macro n="build-subj-pron-lu" npar="1"> 
     <let>
           <var n="subj-pron_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_kaz_perspron"/>
               <var n="number"/> 
               <var n="case"/>
           </concat>  
        </let>

</def-macro>
<def-macro n="build-obj-pron-lu" npar="1"> 
 <choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_pers"/>
          <lit-tag v="p2"/>
       </equal>
     </test>
     <let><var n="formality"/><lit-tag v="frm"/></let>
    </when>
     <otherwise>
     <let><var n="formality"/><lit v=""/></let>
     </otherwise>
  </choose>
<choose>
    <when>
     <test>  
       <equal>
          <var n="case"/>
          <lit v=""/>
       </equal>
     </test>
     <let><var n="case"/><lit-tag v="nom"/></let>
    </when>
    </choose>

<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="tl" part="a_possessive"/>
             <lit-tag v="px3sp"/>
          </equal>
        </test>
          <let><var n="possessive"/><lit-tag v="px3sp"/></let>
<let>
           <var n="obj-pron_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_pron"/>
               <var n="possessive"/>
               <var n="case"/>
           </concat>  
        </let>

</when>
<otherwise>
     <let>
           <var n="obj-pron_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_pron"/>
               <clip pos="1" side="sl" part="a_pers"/>

               <var n="number"/> 
               <var n="formality"/>
               <var n="case"/>
           </concat>  
        </let>
</otherwise>
</choose>
</def-macro>

<def-macro n="build-cnjadv-lu" npar="1"> 
     <let>
           <var n="cnjadv_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
             <clip pos="1" side="tl" part="a_cnjsub"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="build-cnjcoo-lu" npar="1"> 
     <let>
           <var n="cnjcoo_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
             <clip pos="1" side="tl" part="a_cnjcoo"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="build-possessive-from-possessive-determiner" npar="1">


<choose> 
<when>
   <test>
          <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit  v="my"/></equal>
    </test>      
          <let><var  n="possessive"/><lit-tag v="px1sg"/></let>
</when>


<when>
   <test>
          <equal caseless="yes"><clip  pos="1" side="sl" part="lem"/><lit  v="our"/></equal>
    </test>      
          <let><var  n="possessive"/><lit-tag v="px1pl"/></let>
</when>
<when>
   <test>
          <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit  v="your"/></equal>
    </test>      
<let><var  n="possessive"/><lit-tag v="px2sg"/></let>
</when>

<otherwise>
<let><var n="possessive"/><lit-tag v="px3sp"/></let> <!-- default value -->
</otherwise>

</choose>

</def-macro>
<!-- This should be called build-noun-lu when all prep X rules are converted -->
<def-macro n="build-noun-lu-with-possessive" npar="2">
     <let><var n="poss-frm"/><lit v=""/></let>
     <choose>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="my"/></equal></test> <let><var n="np-poss"/><lit-tag v="px1sg"/></let></when>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="our"/></equal></test> <let><var n="np-poss"/><lit-tag v="px1pl"/></let></when>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="your"/></equal></test> <let><var n="np-poss"/><lit-tag v="px2sg"/></let>
             <let><var n="poss-frm"/><lit-tag v="frm"/></let></when>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="his"/></equal></test> <let><var n="np-poss"/><lit-tag v="px3sp"/></let></when>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="her"/></equal></test> <let><var n="np-poss"/><lit-tag v="px3sp"/></let></when>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="its"/></equal></test> <let><var n="np-poss"/><lit-tag v="px3sp"/></let></when>
       <when><test><equal caseless="yes"><clip pos="2" side="sl" part="lem"/><lit v="their"/></equal></test> <let><var n="np-poss"/><lit-tag v="px3sp"/></let></when>
      <otherwise><let><var n="np-poss"/><lit v=""/></let></otherwise>
     </choose>
     <let>
           <var n="noun_lu_with_poss"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_nom"/>
               <var n="number"/> 
               <var n="np-poss"/>
               <var n="poss-frm"/>
               <var n="case"/>
           </concat>  
        </let>

</def-macro>

</section-def-macros>





<section-rules>
<rule comment="NEW RULE: adv-itg-is-nom?"> <!-- when/where/why is James?-->  
  <pattern>
    <pattern-item n="adv-itg"/>
    <pattern-item n="is-verb-to-be"/>
    <pattern-item n="nom"/>
    <pattern-item n="quest"/>
  </pattern>
  <action>
 <call-macro n="change-case"><with-param pos="1"/></call-macro> 
<call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="3"/>
  </call-macro> 
<choose>
<when>
<test>

<and>
 <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="how"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="a_obj_pr"/>
          <lit-tag v="itg"/>
       </equal>
</and>
</test>
     <let><var n="case"/><lit-tag v="nom"/></let>
</when>
<otherwise>
     <let><var n="case"/><lit v=""/></let>
</otherwise>
</choose>
    <out>
    <chunk name="where-is-nom">
    <tags>
    <tag><lit-tag v="QAdvP"/></tag>
     <tag><lit-tag v="p3"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
       
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
    </tags>
<lu>  
      <var n="NEW-noun_lu"/>
     </lu>
<b/>
    <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det_pron_adv"/>

   <lit-tag v="itg"/>
      <var n="case"/>
     </lu>
<b/>
<lu>
      <clip pos="4" side="tl" part="whole"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: need to + infinitive"> <!--need to verb -->
  <pattern>

    <pattern-item n="vbmod-need-to"/>
    <pattern-item n="approx-inf-verb"/>  <!--I need to go - Маған бару керек-->
  </pattern>
<action>
  <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
 <choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
  <out>
      <chunk name="VP_need_to">
      <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
         <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
      </chunk>
  </out>
      

</when>
<otherwise>
  <out>
      <chunk name="VP_need_to">
      <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	         <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
      </chunk>
  </out>
      

</otherwise>
</choose>
      
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
   <out>
      <chunk name="VP_need_to">
        <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
            <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	    <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
<b/>
<lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
  </out>
     

</when>
<otherwise>
   <out>
      <chunk name="VP_need_to">
        <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
<b/>
<lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
  </out>
     

</otherwise>
</choose>

      </when>
    </choose>
      </action>
</rule>


<rule comment="NEW RULE: name noun-cog">  
  <pattern>
    <pattern-item n="np-ant"/>
    <pattern-item n="np-cog"/>
  </pattern>
  <action>

  <call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="2"/>

  </call-macro> 
<choose>
<when>
    <test>
<equal><clip pos="2" side="sl" part="a_possessive"/><lit-tag v="px3sp"/></equal>
</test>
<let> <var n="possessive"/><lit-tag v="px3sp"/></let>
</when>
<otherwise>
<let> <var n="possessive"/><lit-tag v="PXD"/></let>
</otherwise>
</choose>
    <out>
    <chunk name="np-ant-cog">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag>
    <tag><lit-tag v="p3"/></tag>
    <tag><var n="possessive"/></tag>
    <tag><lit-tag v="CD"/></tag> 
    </tags>
   
   <lu>
     <clip pos="1" side="tl" part="lem"/> 
     <clip pos="1" side="tl" part="a_nom"/>
     <clip pos="1" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
<b/>
 <lu>
      <var n="NEW-noun_lu"/>
    </lu>

    </chunk>
    </out>
  </action>
</rule>



<rule comment="NEW RULE: need to + infinitive"> <!--need to verb -->
  <pattern>
    <pattern-item n="vaux-will"/>
    <pattern-item n="be"/>
    <pattern-item n="vbmod-need-to"/>
    <pattern-item n="approx-inf-verb"/>  <!--I need to go - Маған бару керек-->
  </pattern>
<action>
  <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="4" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
   <out>
      <chunk name="VP_will_be_needed_to">
        <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
           <lit v="бол"/>
 	   <lit-tag v="v"/>
 	   <lit-tag v="iv"/>
	   <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
<b/>
<lu>
         <lit v="бол"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="vaux"/>
         <lit-tag v="aor"/>
         <lit-tag v="p3"/>
         <lit-tag v="sg"/>
       </lu>
      </chunk>
  </out>


</when>
<otherwise>
   <out>
      <chunk name="VP_will_be_needed_to">
        <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
<b/>
<lu>
         <lit v="бол"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="vaux"/>
         <lit-tag v="aor"/>
         <lit-tag v="p3"/>
         <lit-tag v="sg"/>
       </lu>
      </chunk>
  </out>


</otherwise>
</choose>

           
      </action>
</rule>

<rule comment="NEW RULE: look + infinitive"> <!--looks like -->
  <pattern>

    <pattern-item n="v-look"/>
    <pattern-item n="approx-inf-verb"/>  <!--I need to go - Маған бару керек-->
  </pattern>
<action>
  <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>
      <chunk name="VP_look_to">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
<lu>
          <lit v="сияқты"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
      <b pos="1"/>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="pass"/>
    	      <lit-tag v="4"/>
           <lit-tag v="3"/>
           <lit-tag v="2"/>
           <lit-tag v="5"/>
        </lu>
               
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="VP_look">
        <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <lu>
          <lit v="сияқты"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
      <b pos="1"/>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="pass"/>
    	      <lit-tag v="4"/>
  <lit-tag v="3"/>
           <lit-tag v="2"/>
           <lit-tag v="5"/>
        </lu>
<b/>
<lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
  </out>
      </when>
    </choose>
      </action>
</rule>


<rule comment="NEW RULE: one another">  
  <pattern>
    <pattern-item n="one-another"/>
  </pattern>
  <action>
 
    <out>
    <chunk name="One-anoth">
    <tags>
  <tag><lit-tag v="One-anoth"/></tag>
<tag><lit-tag v="PXD"/></tag>
<tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
<clip pos="1" side="tl" part="lem"/> 
<clip pos="1" side="tl" part="a_pron"/> 
<lit-tag v="recip"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>








<rule comment="NEW RULE: do not need"> <!--I do need a book - Magan kitap kerek емес-->
  <pattern>
    <pattern-item n="vaux-do"/>
    <pattern-item n="not"/>
    <pattern-item n="vblex-need"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal></test>
        <out>
      <chunk name="verb-need">
      <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="sg"/></tag> <!-- number -->
        <tag><lit-tag v="p3"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
       <lu>
         <lit v="керек"/>
         <lit-tag v="n"/>
         <lit-tag v="nom"/>
       </lu>
<b/>
       <lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="6"/>
         <lit-tag v="aor"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
        </out>
      </when>
     <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal></test>
        <out>
      <chunk name="verb-need">
      <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="sg"/></tag> <!-- number -->
        <tag><lit-tag v="p3"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
           <lu>
         <lit v="керек"/>
         <lit-tag v="n"/>
         <lit-tag v="nom"/>
       </lu>
<b/>
       <lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="6"/>
         <lit-tag v="aor"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       <b/>
       <lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="ifi"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>

      </chunk>
        </out>
      </when>
       
    </choose>   
  </action>
</rule>


<rule comment="NEW RULE: noun1's noun2">  <!-- football player-->
  <pattern>
    <pattern-item n="nom"/>
    <pattern-item n="s-gen"/>
 <pattern-item n="nom"/>
  </pattern>
  <action>

    <out>
    <chunk name="noun's-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="1" side="tl" part="lem"/> 
     <clip pos="1" side="tl" part="a_nom"/>
     <clip pos="1" side="tl" part="a_nbr"/>
     <lit-tag v="gen"/>
    </lu>
   
<b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="3"/> <!-- number -->
               <!-- no need to link person -->
                <lit-tag v="px3sp"/><!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
    </chunk>
    </out>
  </action>
</rule>



<rule comment="NEW RULE: num time a week">  <!-- five time a week-->
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="time"/>

 <pattern-item n="det"/>
 <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num-time-det-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
   
<b pos="1"/>
    <lu>
     <clip pos="4" side="tl" part="lem"/> 
     <clip pos="4" side="tl" part="a_nom"/>
     <clip pos="4" side="tl" part="a_nbr"/>
     <lit-tag v="4"/>
     <lit-tag v="dat"/>
    </lu>
   
<b pos="2"/>

            <lu>
      <var n="num_lu"/>
     </lu>
<b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <!-- for possessive, just in case -->
               <lit-tag v="nom"/> <!-- for case -->
            </lu>
    </chunk>
    </out>
  </action>
</rule>




<rule comment="NEW RULE: unknown noun2">  <!-- football player-->
  <pattern>
    <pattern-item n="unknown"/>
 <pattern-item n="nom"/>
  </pattern>
  <action>

    <out>
    <chunk name="unk-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="1" side="tl" part="whole"/> 
   
    </lu>
   
<b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
                <lit-tag v="px3sp"/><!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
    </chunk>
    </out>
  </action>
</rule>






<rule comment="NEW RULE: nom noun-ant num">  <!-- Queen Elizabeth II-->
  <pattern>
    <pattern-item n="nom"/>
 <pattern-item n="noun-ant"/>
 <pattern-item n="num"/>
  </pattern>
  <action>

    <out>
    <chunk name="nom-noun_ant-num">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="1" side="tl" part="lem"/> 
     <clip pos="1" side="tl" part="a_nom"/>
     <clip pos="1" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
   
<b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_gender"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
<b pos="2"/>
 <lu>  
               <clip pos="3" side="tl" part="whole"/> 
            </lu>
    </chunk>
    </out>
  </action>
</rule>







<rule comment="NEW RULE: noun1 noun2">  <!-- football player-->
  <pattern>
    <pattern-item n="nom"/>
 <pattern-item n="noun"/>
  </pattern>
  <action>

    <out>
    <chunk name="nom-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="1" side="tl" part="lem"/> 
     <clip pos="1" side="tl" part="a_nom"/>
     <clip pos="1" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
   
<b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
                <lit-tag v="px3sp"/><!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="NEW RULE: want to + infinitive"> <!--want to verb -->
  <pattern>

    <pattern-item n="vbmod-want-to"/>
    <pattern-item n="approx-inf-verb"/>  <!--I want to go - Менің барғым келеді-->
  </pattern>
<action>
  <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
<or>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
 <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="inf"/>
          </equal>
</or>
        </test>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

   <out>
      <chunk name="VP_want_to">
      <tags>
        <tag><lit-tag v="VP_wantto"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
	
      </tags>
      <b pos="1"/>
        <lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	   <lit-tag v="prc_vol"/>
	 <lit-tag v="3"/>
           <lit-tag v="2"/>
                  
        </lu>
        <b/> 
        <lu>
          <lit v="кел"/>
          <lit-tag v="vaux"/>
          <lit-tag v="aor"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
        </lu>
      </chunk>
  </out>
     
</when>
<otherwise>
   <out>
      <chunk name="VP_want_to">
      <tags>
        <tag><lit-tag v="VP_wantto"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
	
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
    	   <lit-tag v="prc_vol"/>
	 <lit-tag v="3"/>
           <lit-tag v="2"/>
                  
        </lu>
        <b/> 
        <lu>
          <lit v="кел"/>
          <lit-tag v="vaux"/>
          <lit-tag v="aor"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
        </lu>
      </chunk>
  </out>
     

</otherwise>
</choose>
   
       
  </when> 
      <when>
        <test>

          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
    <out>
      <chunk name="VP_want_to">
        <tags>
        <tag><lit-tag v="VP_wantto"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->

      </tags>
      <b pos="1"/>
        <lu>
         <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	  <lit-tag v="prc_vol"/>
           <lit-tag v="3"/>
           <lit-tag v="2"/>
           
        </lu>
        <b/> 
        <lu>
          <lit v="кел"/>
         <lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
        </lu>
      </chunk>
  </out>
    

</when>
<otherwise>
    <out>
      <chunk name="VP_want_to">
        <tags>
        <tag><lit-tag v="VP_wantto"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->

      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
    	   <lit-tag v="prc_vol"/>
           <lit-tag v="3"/>
           <lit-tag v="2"/>
           
        </lu>
        <b/> 
        <lu>
          <lit v="кел"/>
         <lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
        </lu>
      </chunk>
  </out>
    

</otherwise>
</choose>

      </when>
    </choose>
      </action>
</rule>






<rule comment="NEW RULE: have to + infinitive"> <!--have to verb -->
  <pattern>

    <pattern-item n="vbmod-have-to"/>
    <pattern-item n="pers-verb"/>  <!--I have to go - Менің баруым керек-->
  </pattern>
<action>
<!--
  <call-macro n="default-nbr-pers"/> -->
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            <choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
      <out>
      <chunk name="VP_have_to">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
      </chunk>
  </out>
  

</when>
<otherwise>
      <out>
      <chunk name="VP_have_to">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	         <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>
          <lit-tag v="nom"/>
        </lu>
      </chunk>
  </out>
  

</otherwise>
</choose>

       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
     <out>
      <chunk name="VP_have_to">
        <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
         <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>	
          <lit-tag v="nom"/>	
        </lu>
<b/>
<lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
  </out>
   

</when>
<otherwise>
     <out>
      <chunk name="VP_have_to">
        <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
          <lit-tag v="n"/>	
          <lit-tag v="nom"/>	
        </lu>
<b/>
<lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="ifi"/>
         <lit-tag v="p3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
  </out>
   

</otherwise>
</choose>

      </when>
    </choose>
      </action>
</rule>



<rule comment="NEW RULE: vaux-do not approx-inf-verb"> 
<!-- superblank management not solved -->
  <pattern>
    <pattern-item n="vaux-do"/>
    <pattern-item n="not"/>
    <pattern-item n="approx-inf-verb"/>
  </pattern>
  <action>
  <out><b pos="1"/><b pos="2"/></out> 
  
    <choose>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
      <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="3"/> 
     </call-macro>
      </when>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/><!--I didn't go - Мен бармадым -->
             <lit-tag v="past"/>
          </equal>
        </test>
         <let><var n="tense"/><lit-tag v="ifi"/></let> 
      <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="3"/> 
     </call-macro>
      </when>

    </choose>
  </action>
</rule>



<!--Is/Was?-->

 <!--
<rule comment="NEW RULE: Is/Was?">
 

  <pattern>
    <pattern-item n="pers-verb-to-be"/>
   </pattern>
  <action>
  
       <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
     
      </when>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
         <let><var n="tense"/><lit-tag v="ifi"/></let> 
   
      </when>
    </choose>
 <out> <chunk name="VP_q">  
      <tags>
       <tag><lit-tag v="VPQ"/></tag>
       <tag> <var n="tense"/>  </tag>
      </tags>
      <lu>
      <lit v="ма"/>
      <lit-tag v="qst"/>
       <lit-tag v="2"/> 
       </lu>
<b/>
     </chunk>
</out> 
  </action>
</rule>
-->


<rule comment="NEW RULE: to be noun"> <!--I am a doctor - ^Мен/мен<post>/мен<prn><pers><p1><sg><nom>$ ^дәрігермін/дәрігер<n><nom>+е<cop><p1><sg>$^./.<sent>$
-->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal></test>
        <out>
      <chunk name="verb-be">
      <tags>
        <tag><lit-tag v="VP_be"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
     </tags>
<lu>
         <lit v="е"/>
        <lit-tag v="cop"/>
       <lit-tag v="aor"/>
       <lit-tag v="evid"/>
        <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
        </out>
      </when>
     <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal></test>
        <out>
      <chunk name="verb-past-be">
      <tags>
        <tag><lit-tag v="VP_past_be"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
 <tag><lit-tag v="CD"/></tag> 
      </tags>

          
       <lu>
         <lit v="бол"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="vaux"/>
         <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
         <lit-tag v="5"/>
       </lu>
      </chunk>
        </out>
      </when>
       
    </choose>   
  </action>
</rule>


 
<rule comment="NEW RULE: to be not"> <!--I am not a doctor -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="not"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal></test>
        <out>
      <chunk name="verb-be">
      <tags>
        <tag><lit-tag v="VP_not_be"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
     </tags>
<b pos="1"/>
<lu>
         <lit v="е"/>
        <lit-tag v="cop"/>
         <lit-tag v="6"/>
<lit-tag v="aor"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>

      </chunk>
        </out>
      </when>
     <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal></test>
        <out>
      <chunk name="verb-past-be">
      <tags>
        <tag><lit-tag v="VP_past_not_be"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
          
       <lu>
         <lit v="бол"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="vaux"/>
         <lit-tag v="6"/>
         <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
        </out>
      </when>
       
    </choose>   
  </action>
</rule>





<rule comment="NEW RULE: need"> <!--I need a book - Magan kitap kerek-->
  <pattern>
    <pattern-item n="vblex-need"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal></test>
        <out>
      <chunk name="verb-need">
      <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
       <lu>
         <lit v="керек"/>
         <lit-tag v="n"/>
         <lit-tag v="nom"/>
       </lu>
      </chunk>
        </out>
      </when>
     <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal></test>
        <out>
      <chunk name="verb-need">
      <tags>
        <tag><lit-tag v="VP_need"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
           <lu>
         <lit v="керек"/>
         <lit-tag v="n"/>
         <lit-tag v="nom"/>
       </lu>
       <b/>
       <lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
        </out>
      </when>
       
    </choose>   
  </action>
</rule>



<!-- MLF has commented this rule which is breaking stuff:

<rule comment="NEW RULE: verb conditional"> 
  <pattern>

    <pattern-item n="pers-verb"/>
    
  </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
        <out>
      <chunk name="cond">
      <tags>
        <tag><lit-tag v="VP_cond"/></tag>
        <tag><lit-tag v="ND"/></tag>  
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="gna_cond"/></tag>  
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="NXD"/></tag> 
      </tags>
      <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
    	  <lit-tag v="4"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
       
      </chunk>
  </out>
      
  </action>
</rule>
-->

<!--
<rule comment="NEW RULE: verb + verb-ing ">  
  <pattern> 
    <pattern-item n="pers-verb"/>
    <pattern-item n="verb-ing"/>  
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>
      <chunk name="verb1">  
      <tags>
        <tag><lit-tag v="VP1_verb"/></tag>
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="a_tense"/></tag>
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="NXD"/></tag> 
      </tags>
            <b pos="1"/>
   	<lu>
         <clip pos="1" side="tl" part="lem"/>
	 <clip pos="1" side="tl" part="a_kaz_verb"/>
 	<lit-tag v="6"/>
	<lit-tag v="aor"/>
	<lit-tag v="3"/>
        <lit-tag v="2"/>
 	 </lu>
         </chunk>
<chunk name="verb_ger">  
      <tags>
       <tag><lit-tag v="VP2_Ger"/></tag>
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="a_tense"/></tag>
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="NXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	 <lit-tag v="ger"/>
	<lit-tag v="acc"/>
        
  
        </lu>
    
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
        <chunk name="verb1">  
      <tags>
        <tag><lit-tag v="VP1_verb"/></tag>
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="a_tense"/></tag>
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="NXD"/></tag> 
      </tags>
            <b pos="1"/>
   	<lu>
         <clip pos="1" side="tl" part="lem"/>
	 <clip pos="1" side="tl" part="a_kaz_verb"/>
 	
 	<lit-tag v="6"/>
	<lit-tag v="ifi"/>
	<lit-tag v="3"/>
        <lit-tag v="2"/>
 	 </lu>
         </chunk>
<chunk name="verb_ger">  
      <tags>
        <tag><lit-tag v="VP2_Ger"/></tag>
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="a_tense"/></tag>
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="NXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	 <lit-tag v="ger"/>
	<lit-tag v="acc"/>
        </lu>
    
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
      <out><b pos="1"/></out>  
      <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="2"/>  
     </call-macro>
      </otherwise> 
    </choose>
      </action>
</rule>

-->


<rule comment="NEW RULE: verb-ing ">  
  <pattern> 
       <pattern-item n="NP_verb-ing"/>  
   </pattern>
  <action>
<call-macro n="default-nbr-pers"/>               
        <out>
     <chunk name="NP_ger">  
      <tags>
       <tag><lit-tag v="NP_GER"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
            
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
         <lit-tag v="4"/>
  	 <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="6"/> <!-- FMT: added  to avoid gen error -->
        </lu>
    
      </chunk>
  </out>
 </action>
</rule>








<rule comment="NEW RULE: have"> <!--I have a book - Mende kitap bar-->
  <pattern>
    <pattern-item n="vblex-have"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal></test>
        <out>
      <chunk name="verb-have">
      <tags>
        <tag><lit-tag v="VP_have"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
       <lu>
         <lit v="бар"/>
         <lit-tag v="adj"/>
       </lu>
      </chunk>
        </out>
      </when>
     <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal></test>
        <out>
      <chunk name="verb-have">
      <tags>
        <tag><lit-tag v="VP_have"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
           <lu>
         <lit v="бар"/>
         <lit-tag v="adj"/>
       </lu>
       <b/>
       <lu>
         <lit v="е"/>  <!-- Note this is a cyrillic е -->
         <lit-tag v="cop"/>
         <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
      </chunk>
        </out>
      </when>
       
    </choose>   
  </action>
</rule>

<rule comment="NEW RULE: do not have"> <!--I do not have a book - Mende kitap jok-->
  <pattern>
    <pattern-item n="vaux-do"/>
    <pattern-item n="not"/>
    <pattern-item n="vaux-have"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal></test>
        <out>
      <chunk name="verb-not-have">
      <tags>
        <tag><lit-tag v="VP_have"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
       <lu>
         <lit v="жоқ"/>
         <lit-tag v="adj"/>
       </lu>
      </chunk>
        </out>
      </when>
     <when>
      <test><equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal></test>
        <out>
      <chunk name="verb-not-have">
      <tags>
        <tag><lit-tag v="VP_have"/></tag>
        <tag><lit-tag v="sg"/></tag> <!-- number -->
        <tag><lit-tag v="p3"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
           <lu>
         <lit v="бол"/>
         <lit-tag v="vaux"/>       
         <lit-tag v="6"/> 
         <lit-tag v="4"/>      
         <lit-tag v="3"/>
         <lit-tag v="2"/>       
        </lu>
       
      </chunk>
        </out>
      </when>
       
    </choose>   
  </action>
</rule>



<rule comment="NEW RULE: verb"> 
  <pattern>
    <pattern-item n="pers-verb"/>
  </pattern>
  <action>
     <call-macro n="default-nbr-pers"/>
    <choose>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="1"/> 
     </call-macro>

      </when>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="1"/> 
     </call-macro>
      </when>

      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="1"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>



<rule comment="NEW RULE: num past num"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="past"/>
    <pattern-item n="num"/>
  </pattern>
  <action>
     <call-macro n="default-nbr-pers"/>
    
        <let><var n="tense"/><lit-tag v="aor"/></let>

     <out>
  <chunk name="num-past-num">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="sg"/></tag> <!-- number -->
        <tag><lit-tag v="p3"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
        <tag><lit-tag v="CD"/></tag> <!-- negative -->
      </tags>
 <lu>
           <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_num"/>
	<lit-tag v="subst"/>
	<lit-tag v="abl"/>
	
        </lu>
            <b pos="1"/>
 <lu>
           <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_num"/>

        </lu>
            <b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="ifi"/>
	<lit-tag v="3"/>
	<lit-tag v="2"/>
    	
        </lu>
</chunk>
     </out>
  </action>
</rule>



<rule comment="NEW RULE: be + verb-ing "> 
  <pattern> 
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="verb-ing"/>  
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>

      <chunk name="pers-verb4">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
        <tag><lit-tag v="CD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_perf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="жат"/>  
 	<lit-tag v="vaux"/>
 	<lit-tag v="6"/>
	 <lit-tag v="4"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	        </lu>
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="pers-verb5">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
        <tag><lit-tag v="CD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_perf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="отыр"/> <!--I was not playing - Мен ойнап отырмадым  -->
 	<lit-tag v="vaux"/>
 	  <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
</lu>
          </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
      <out><b pos="1"/></out>  
      <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="2"/>  
     </call-macro>
      </otherwise> 
    </choose>
      </action>
</rule>




<rule comment="NEW RULE: be + not + verb-ing ">  
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="not"/>
    <pattern-item n="verb-ing"/>  
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/> <!--I am not playing - Мен ойнап жатқан жоқпын -->
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>
      <chunk name="pers-verb-neg-ing">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_perf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="жат"/> <!-- This is a very strange way of doing negatives -->
 	<lit-tag v="vaux"/>
          
 	<lit-tag v="neg"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/> 	

 	
 	        </lu>
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="past-verb-neg-ing">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_perf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="отыр"/>
 	<lit-tag v="vaux"/>
 	 <lit-tag v="6"/>
	 <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
      </when>
      <otherwise> 
        <let><var n="tense"/><lit-tag v="aor"/></let> <!-- This is clearly wrong but we'll change it later -->
      <out><b pos="1"/><b pos="2"/></out>
      <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="3"/>  
     </call-macro>
      </otherwise> 
    </choose>
      </action>
</rule>

<rule comment="NEW RULE: be + verb-ing "> 
  <pattern> 
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="adv"/>  
    <pattern-item n="verb-ing"/>  
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>

      <chunk name="pers-verb6">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="pres"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
 <lu>
      <clip pos="2" side="tl" part="whole"/>
     </lu>
            <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_perf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="жат"/>  
 	<lit-tag v="vaux"/>
 	<lit-tag v="6"/>
	 <lit-tag v="4"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="pers-verb7">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
<lu>
      <clip pos="2" side="tl" part="whole"/>
     </lu>
            <b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_perf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="отыр"/> <!--I was not playing - Мен ойнап отырмадым  -->
 	<lit-tag v="vaux"/>
 	  <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
</lu>
          </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
      <out><b pos="1"/></out>  
      <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="2"/>  
     </call-macro>
      </otherwise> 
    </choose>
      </action>
</rule>



<rule comment="NEW RULE: will + be + verb-ing"> <!--I will be playing - Мен ойнап отырармын -->
  <pattern>
<pattern-item n="vaux-will"/>
      <pattern-item n="be"/>
    <pattern-item n="verb-ing"/> <!-- * -->
   </pattern>
 <action>
     <call-macro n="default-nbr-pers"/>
    
       <out>
      <chunk name="pers-verb8">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="fut"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
        <b pos="1"/>
        <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/>
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
 	 <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
     
     
        
   
  </action>
</rule>

<rule comment="NEW RULE: will + not + be + verb-ing"> <!--I will not be playing - Мен ойнап отырмаймын -->
  <pattern>
<pattern-item n="vaux-will"/>
       <pattern-item n="not"/>
<pattern-item n="be"/>
    <pattern-item n="verb-ing"/> <!-- * -->
   </pattern>
 <action>
     <call-macro n="default-nbr-pers"/>
    
       <out>
      <chunk name="pers-verb9">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
        <b pos="1"/>
        <b pos="2"/>
        <b pos="3"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> <!-- this position is probably not optimal -->
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
	<lit-tag v="6"/>
 	<lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
     
        
   
  </action>
</rule>

<rule comment="NEW RULE: will + have + verb-pp"> <!--I will have пщ - Мен барармын -->
<!-- superblank management not corrected -->
  <pattern>
<pattern-item n="vaux-will"/>
      <pattern-item n="vaux-have"/>
    <pattern-item n="verb-pp"/> <!-- * -->
   </pattern>
 <action>
   <out><b pos="1"/><b pos="2"/></out>
   <let><var n="tense"/><lit-tag v="fut"/></let>
    <call-macro n="NEW-gen-simple-verb">
         <with-param pos="3"/> 
    </call-macro>   
        
  </action>
</rule>

<rule comment="NEW RULE: will + not + have + verb-pp"> <!--I  пщ - Мен бармармын ?? -->
<!-- superblank management not corrected -->
  <pattern>
<pattern-item n="vaux-will"/>
       <pattern-item n="not"/>
      <pattern-item n="vaux-have"/>
    <pattern-item n="verb-pp"/> <!-- * -->
   </pattern>
 <action>
      <out><b pos="1"/><b pos="2"/><b pos="3"/></out>
   <let><var n="tense"/><lit-tag v="fut"/></let>
    <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="4"/> 
    </call-macro>   
        
  </action>
</rule>

<rule comment="NEW RULE: will + have + been + verb-ing"> <!--Future perfect Cont I will have been playing - Мен ойнап боламын -->
  <pattern>
<pattern-item n="vaux-will"/>
<pattern-item n="vaux-have"/>
      <pattern-item n="been"/>
     <pattern-item n="verb-ing"/> <!-- * -->
   </pattern>
 <action>
     <call-macro n="default-nbr-pers"/>
           <out>
      <chunk name="pers-verb10">
       <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
     <b pos="1"/>
     <b pos="2"/>
     <b pos="3"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> <!-- this position is probably not optimal -->
        <lu>
          <lit v="бол"/>
          <lit-tag v="vaux"/>
 	<lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
            
   
  </action>
</rule>


<rule comment="NEW RULE: will + not + have + been + verb-ing"> <!--Future perfect Cont in Neg I will NOT have been playing  -->
  <pattern>
<pattern-item n="vaux-will"/>
<pattern-item n="not"/>
<pattern-item n="vaux-have"/>
      <pattern-item n="been"/>
     <pattern-item n="verb-ing"/> <!-- * -->
   </pattern>
 <action>
     <call-macro n="default-nbr-pers"/>
           <out>
      <chunk name="pers-verb11">
     <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
     <b pos="1"/>
     <b pos="2"/>
     <b pos="3"/>
     <b pos="4"/>
        <lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b pos="1"/> <!-- this position is probably not optimal -->
        <lu>
          <lit v="бол"/>
          <lit-tag v="vaux"/>
 	<lit-tag v="6"/>
 	<lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
         
   
  </action>
</rule>






<rule comment="NEW RULE: will + verb"> <!-- will verb -->
<!-- superblank management needs to be corrected -->
  <pattern>
    <pattern-item n="vaux-will"/>
    <pattern-item n="approx-inf-verb"/> <!-- MLF 20120618 this to catch tagger errors, should be solved there not here! -->
   </pattern>
  <action>
<!--<choose>
<when>
<test>
<equal>
          <clip pos="2" side="sl" part="lem"/><lit v="be"/>
</equal>
</test>
<let><clip pos="2" side="sl" part="lem"/><lit v="be"/>-->

        <out><b pos="1"/></out>
    <let><var n="tense"/><lit-tag v="aor"/></let>
    <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
    </call-macro>   
  </action>
</rule>




<rule comment="NEW RULE: would + like to play"> <!-- will verb -->
<!-- superblank management needs to be corrected -->
  <pattern>
    <pattern-item n="vaux-would"/>
    <pattern-item n="like"/>
    <pattern-item n="to"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="4" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

  <out>
      <chunk name="would-like">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="fut_plan"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>

        <lu>
         <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	 <lit-tag v="fut_plan"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       </chunk>
  </out> 
  
</when>
<otherwise>
  <out>
      <chunk name="would-like">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="fut_plan"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>

        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
	                <lit-tag v="fut_plan"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       </chunk>
  </out> 
  

</otherwise>
</choose>

     </action>
</rule>


<rule comment="NEW RULE: would + verb"> <!-- will verb -->
<!-- superblank management needs to be corrected -->
  <pattern>
    <pattern-item n="vaux-would"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
 <out>
      <chunk name="pers-verb_be">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
            <lit v="бол"/>
        <lit-tag v="v"/>
        <lit-tag v="iv"/>
	<lit-tag v="gpr_impf"/>
    	
        </lu>
        <b/> 
	<lu>
            <lit v="е"/>
        <lit-tag v="cop"/>
          <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       </chunk>
  </out>
      </when>
      <otherwise>
       <out>
      <chunk name="pers-verb12">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>

        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="gpr_impf"/>
    	
        </lu>
        <b/> 
	<lu>
            <lit v="е"/>
        <lit-tag v="cop"/>
          <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       </chunk>
  </out> 
      </otherwise>
      </choose>
  </action>
</rule>






<rule comment="NEW RULE: would + adv + verb"> <!-- will +adv verb -->
<!-- superblank management needs to be corrected -->
  <pattern>
    <pattern-item n="vaux-would"/>
    <pattern-item n="adv"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
   <out>
      <chunk name="pers-verb13">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
  <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>  

       <lu>
         <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
<lit-tag v="gpr_impf"/>
    	
        </lu>
        <b/> 
	<lu>
            <lit v="е"/>
        <lit-tag v="cop"/>
          <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       </chunk>
  </out> 
  
</when>
<otherwise>
   <out>
      <chunk name="pers-verb13">  
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ifi"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
  <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>  

       <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="gpr_impf"/>
    	
        </lu>
        <b/> 
	<lu>
            <lit v="е"/>
        <lit-tag v="cop"/>
          <lit-tag v="4"/>
         <lit-tag v="3"/>
         <lit-tag v="2"/>
       </lu>
       </chunk>
  </out> 
  
</otherwise>
</choose>
    </action>
</rule>

<rule comment="NEW RULE: will + not +  verb"> <!-- Future Simple in negative -->
<!-- superblank management needs to be corrected -->
  <pattern>
    <pattern-item n="vaux-will"/>
<pattern-item n="not"/>
    <pattern-item n="approx-inf-verb"/> <!-- MLF 20120618 this to catch tagger errors, should be solved there not here! -->
   </pattern>
  <action>	
    <let><var n="tense"/><lit-tag v="aor"/></let>
            <out><b pos="1"/><b pos="2"/></out>
    <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="3"/> 
    </call-macro>   
  </action>
</rule>

<rule comment="NEW RULE: must + not + infinitive"> <!--with # -->
  <pattern>

    <pattern-item n="vaux-must"/>
    <pattern-item n="not"/>
    <pattern-item n="approx-inf-verb"/>  
  </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>

<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
    <out>
      <chunk name="must-inf1">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
       <b pos="2"/>
        <lu>
         <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	   <lit-tag v="6"/>
    	   <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="n"/>
          <lit-tag v="nom"/>	
        </lu>
      </chunk>
  </out>

</when>
<otherwise>
    <out>
      <chunk name="must-inf1">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
       <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
           <lit-tag v="6"/>
    	   <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="n"/>
          <lit-tag v="nom"/>	
        </lu>
      </chunk>
  </out>

</otherwise>
</choose>
          
  </action>
</rule>


<rule comment="NEW RULE: will +adv + verb"> <!-- will verb -->
<!-- superblank management needs to be corrected -->
  <pattern>
    <pattern-item n="vaux-will"/>
    <pattern-item n="adv"/>
    <pattern-item n="approx-inf-verb"/> <!-- MLF 20120618 this to catch tagger errors, should be solved there not here! -->
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
    <out>
<chunk name="pers-verb114">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>  
  <lu>
       <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	  <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
  </out>
  
</when>
<otherwise>
    <out>
<chunk name="pers-verb14">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="aor"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>  
  <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
  </out>
  
</otherwise>
</choose>

    </action>
</rule>

<rule comment="NEW RULE: must + infinitive"> <!--must verb -->
  <pattern>

    <pattern-item n="vaux-must"/>
    <pattern-item n="approx-inf-verb"/>  <!--I must go - Мен баруым керек-->
  </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

  <out>
      <chunk name="must-inf2-be">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
             <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	    <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="n"/>
          <lit-tag v="nom"/>	
        </lu>
      </chunk>
  </out>
      
</when>
<otherwise>

  <out>
      <chunk name="must-inf2">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	         <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="n"/>
          <lit-tag v="nom"/>	
        </lu>
      </chunk>
  </out>
      
</otherwise>
</choose>

      
  </action>
</rule>


<rule comment="NEW RULE: must +be+ pp"> <!--must be paid -->
  <pattern>

    <pattern-item n="vaux-must"/>
    <pattern-item n="be"/>
    <pattern-item n="verb-pp"/>  <!--I must go - Мен баруым керек-->
  </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
        <out>
      <chunk name="must-be-pp">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	         <clip pos="3" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="pass"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="n"/>
          <lit-tag v="nom"/>	
        </lu>
      </chunk>
  </out>
      
  </action>
</rule>

<!-- may/might-->
<rule comment="NEW RULE: may/might + not + infinitive"> 
  <pattern>

    <pattern-item n="vaux-may"/>
    <pattern-item n="not"/>
    <pattern-item n="approx-inf-verb"/>  
  </pattern>
  <action>

    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
     <out>
      <chunk name="may-not-inf">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
       <b pos="2"/>
        <lu>
           <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	 <lit-tag v="6"/>
    	   <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="adj"/>
        </lu>
      </chunk>
  </out>
   
</when>
<otherwise>
     <out>
      <chunk name="may-not-inf">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
       <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
           <lit-tag v="6"/>
    	   <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="керек"/>
         <lit-tag v="adj"/>
        </lu>
      </chunk>
  </out>
   
</otherwise>
</choose>


      
  </action>
</rule>


<rule comment="NEW RULE: may/might + infinitive"> <!--may/might verb -->
  <pattern>

    <pattern-item n="vaux-may"/>
    <pattern-item n="approx-inf-verb"/>  
  </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
 <chunk name="may-be-inf">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>            
        <lu>
         <lit v="бол"/>
         <lit-tag v="v"/>
         <lit-tag v="iv"/>
         <lit-tag v="ger"/>
         <lit-tag v="5"/>
         <lit-tag v="nom"/>
        </lu>
<b/> 
        <lu>
          <lit v="мүмкін"/>
         <lit-tag v="adj"/>
        </lu>

    
      </chunk>
</out>
</when>
<otherwise>
        <out>
      <chunk name="may-inf">
      <tags>
        <tag><lit-tag v="VP_must_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	         <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="мүмкін"/>
         <lit-tag v="adj"/>
        </lu>
      </chunk>
  </out>
      </otherwise>
</choose>
  </action>
</rule>

<rule comment="NEW RULE: can + not + infinitive "> <!--Men bara almaimyn - I can not go-->
  <pattern> <!-- generalize it for "could" with a tense selector -->
    <pattern-item n="vaux-can"/>
    <pattern-item n="not"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            <choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
      <out>
      <chunk name="pers-verb115">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
 	<lit-tag v="neg"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
       
  
</when>
<otherwise>
      <out>
      <chunk name="pers-verb15">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
 	<lit-tag v="neg"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
       
  
</otherwise>
</choose>

  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="pers-verb16">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>

        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
 	<lit-tag v="neg"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
      </when>
    </choose>
      </action>
</rule>


<rule comment="NEW RULE: DO?"> 
<!-- for questions-->
  <pattern>
    <pattern-item n="vaux-do"/>
   
  </pattern>
  <action>
       <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
     
      </when>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
         <let><var n="tense"/><lit-tag v="ifi"/></let> 
   
      </when>

    </choose>
 <out> <chunk name="VP_q">  
      <tags>
       <tag><lit-tag v="VPQ"/></tag>
       <tag> <var n="tense"/>  </tag>
      </tags>
    <!--   <lu>
    <lit v="ма"/>
      <lit-tag v="qst"/>
       <lit-tag v="2"/> 
       </lu>-->
<b/>
     </chunk>
</out> 
  </action>
</rule>

<rule comment="NEW RULE: can + infinitive "> <!--Men bara alam - I can go-->
  <pattern> <!-- generalize it for "could" with a tense selector -->
    <pattern-item n="vaux-can"/>
    <pattern-item n="to"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
          <choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

     <out>
      <chunk name="pers-verb17">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
   
</when>
<otherwise>
     <out>
      <chunk name="pers-verb17">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
   

</otherwise>
</choose>


  
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
        <out>
      <chunk name="pers-verb_be18">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
          <lit v="бол"/>
	<lit-tag v="v"/>
	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
      </when>
      <otherwise>
 <out>
      <chunk name="pers-verb18">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
</when>
    </choose>
      </action>
</rule>


<rule comment="NEW RULE: can + infinitive "> <!--Men bara alam - I can go-->
  <pattern> <!-- generalize it for "could" with a tense selector -->
    <pattern-item n="vaux-can"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

        <out>
      <chunk name="pers-verb_be31">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
</when>
       <otherwise>
<out>
      <chunk name="pers-verb31">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
 </otherwise>
</choose>
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>

<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
 <out>
      <chunk name="pers-verb19-be">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
</when>
<otherwise>
 <out>
      <chunk name="pers-verb19">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
        <lit v="ал"/>
 	<lit-tag v="vaux"/>
	<lit-tag v="ifi"/>
	<lit-tag v="3"/>
        <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
</otherwise>
</choose>

             </when>
    </choose>
      </action>
</rule>

<rule comment="NEW RULE: can + adv + infinitive "> <!--You can also download-->
  <pattern> <!-- generalize it for "could" with a tense selector -->
    <pattern-item n="vaux-can"/>
    <pattern-item n="adv"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>    
        <out>
      <chunk name="pers-verb20_be">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>  	
        </lu>
           <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>

</when>
<otherwise>
 <out>
      <chunk name="pers-verb20">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
</otherwise>
  </choose>     
  </when> 

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

        <out>
      <chunk name="pers-verb21-be">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>

</when>
<otherwise>

        <out>
      <chunk name="pers-verb21">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
            </lu>
        <b/> 
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>

</otherwise>
</choose>

      </when>
    </choose>
      </action>
</rule>


<rule comment="NEW RULE: can + adv + infinitive "> <!--You can also download or stream-->
  <pattern> <!-- generalize it for "could" with a tense selector -->
    <pattern-item n="vaux-can"/>
    <pattern-item n="adv"/>
    <pattern-item n="approx-inf-verb"/> 
    <pattern-item n="or"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            <choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

      <out>
      <chunk name="pers-verb22-be">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
            <b pos="3"/>
 <lu>
      <clip pos="4" side="tl" part="whole"/>
            </lu>
        <b/> 
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
<b/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
  
</when>
 <when>
        <test>
          <equal>
             <clip pos="5" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

      <out>
      <chunk name="pers-verb22-be2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	
	<lit-tag v="prc_impf"/>
    	
        </lu>
            <b pos="3"/>
 <lu>
      <clip pos="4" side="tl" part="whole"/>
            </lu>
        <b/> 
<lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>

        <lit-tag v="prc_impf"/>
    	
        </lu>
<b/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
  
</when>
<otherwise>
      <out>
      <chunk name="pers-verb22">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
            <b pos="3"/>
 <lu>
      <clip pos="4" side="tl" part="whole"/>
            </lu>
        <b/> 
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
<b/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
  

</otherwise>
</choose>


       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
   <choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

      <out>
      <chunk name="pers-verb23-be">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
            <b pos="3"/>
 <lu>
      <clip pos="4" side="tl" part="whole"/>
            </lu>
        <b/> 
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
<b/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
  
</when>
 <when>
        <test>
          <equal>
             <clip pos="5" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

      <out>
      <chunk name="pers-verb23-be2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	
	<lit-tag v="prc_impf"/>
    	
        </lu>
            <b pos="3"/>
 <lu>
      <clip pos="4" side="tl" part="whole"/>
            </lu>
        <b/> 
<lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>

        <lit-tag v="prc_impf"/>
    	
        </lu>
<b/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
  
</when>
<otherwise>
      <out>
      <chunk name="pers-verb23">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
         <b pos="1"/>
        <lu>
      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
<lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
            <b pos="3"/>
 <lu>
      <clip pos="4" side="tl" part="whole"/>
            </lu>
        <b/> 
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
<b/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
  

</otherwise>
</choose>
      </when>
    </choose>
      </action>
</rule>

<rule comment="NEW RULE: have + not + been + verb-pp"> <!--Present Perfect Passive Negative A book has not been written ,Past perfect-->
  <pattern>
    <pattern-item n="vaux-have"/>
 <pattern-item n="not"/>
    <pattern-item n="been"/> <!--past participle -->
 <pattern-item n="verb-pp"/>
    </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let> 
    <out>
      <chunk name="pers-verb24">
       <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="past"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
      <b pos="3"/>
       <lu>
      <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
	<lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
         <lit v="бол"/>
 	<lit-tag v="vaux"/>
            <lit-tag v="6"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
	
        </lu>
      </chunk>
        </out>
      </when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
    <out>
      <chunk name="pers-verb25">
       <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="past"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
      <b pos="2"/>
      <b pos="3"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
 <lit-tag v="pass"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
	        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
           <out><b pos="1"/><b pos="2"/><b pos="3"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: can + be + infinitive "> <!--this can be go-->
  <pattern> <!-- generalize it for "could" with a tense selector -->
    <pattern-item n="vaux-can"/>
    <pattern-item n="be"/>
    <pattern-item n="verb-pp"/> 
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>
      <chunk name="can-be">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="pass"/>
	<lit-tag v="prc_impf"/>
    	
        </lu>
      <b pos="2"/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="could-be">
            <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
            <b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	<lit-tag v="pass"/>
	<lit-tag v="prc_impf"/>
            </lu>
      <b pos="2"/>
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
      </when>
    </choose>
      </action>
</rule>

<!--prs perfect verb -->
<!--<rule comment="NEW RULE: have + been"> 

  <pattern>
    <pattern-item n="vaux-have"/>
    <pattern-item n="been"/> 
   </pattern>
  <action>
   <let><var n="tense"/><lit-tag v="past"/></let>
   <out><b pos="1"/></out>
    <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
    </call-macro>   
  </action>
</rule>
-->


<rule comment="NEW RULE: have?"> <!--have? -->

  <pattern>
    <pattern-item n="vaux-have"/>
   </pattern>
  <action>
   <let><var n="tense"/><lit-tag v="past"/></let>
  
   <out> <chunk name="VP_qhave">  
      <tags>
       <tag><lit-tag v="VPQ"/></tag>
       <tag> <var n="tense"/>  </tag>
      </tags>
      <!-- <lu>
     <lit v="ма"/>
      <lit-tag v="qst"/>
       <lit-tag v="2"/> 
 </lu>
-->
<b/>
      
     </chunk>
</out> 
 
  </action>
</rule>

<rule comment="NEW RULE: have + verb-pp"> <!--prs perfect verb -->
<!-- superblank management not corrected yet -->
  <pattern>
    <pattern-item n="vaux-have"/>
    <pattern-item n="verb-pp"/> <!--past participle -->
   </pattern>
  <action>
   <let><var n="tense"/><lit-tag v="past"/></let>
   <out><b pos="1"/></out>
    <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
    </call-macro>   
  </action>
</rule>

<rule comment="NEW RULE: have + not + verb"> <!--prs perfect verb -->
<!-- superblank management not corrected yet -->
  <pattern>
    <pattern-item n="vaux-have"/>
 <pattern-item n="not"/>
    <pattern-item n="verb-pp"/> <!--past participle -->
   </pattern>
  <action>
     <out><b pos="1"/><b pos="2"/></out>
   <let><var n="tense"/><lit-tag v="past"/></let>
    <call-macro n="NEW-gen-simple-verb-neg">
         <with-param pos="3"/> 
    </call-macro>   
  </action>
</rule>
    
<rule comment="NEW RULE: have + been + verb-ing"> <!--Present Perfect Continuous I have been playing Мен ойнап отырғанмын -->
  <pattern>
    <pattern-item n="vaux-have"/>
    <pattern-item n="been"/> <!--past participle -->
 <pattern-item n="verb-ing"/>
   </pattern>
   <action>
    <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>
        <out>
      <chunk name="pers-verb26">
     <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="past"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
     <b pos="1"/>     
     <b pos="2"/>    
          
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
         <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when> 
    <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>
        <out>
      <chunk name="pers-verb27">
       <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="past"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
         <b pos="1"/>     
     <b pos="2"/>    
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> <!-- This is clearly wrong but we'll change it later -->
           <out><b pos="1"/><b pos="2"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </otherwise> 
  
 </choose>
  </action>
</rule>

<rule comment="NEW RULE: have + not + been + verb-ing"> <!--Present Perfect Continuous in Negative I have not been playing Мен ойнап отырмағанмын -->
  <pattern>
    <pattern-item n="vaux-have"/>
<pattern-item n="not"/>
    <pattern-item n="been"/> <!--past participle -->
 <pattern-item n="verb-ing"/>
   </pattern>
   <action>
    <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>
        <out>
      <chunk name="pers-verb28">
     <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="past"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
    <b pos="1"/>     
     <b pos="2"/>   
     <b pos="3"/>   
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/>
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
           <lit-tag v="6"/>
         <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when> 
    <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>
        <out>
      <chunk name="pers-verb29">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="past"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative --> <!-- the verb itself is negative -->
     </tags>
    <b pos="1"/>     
     <b pos="2"/>   
     <b pos="3"/>   
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> <!-- This is clearly wrong but we'll change it later -->
           <out><b pos="1"/><b pos="2"/><b pos="3"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="4"/> 
     </call-macro>
      </otherwise> 
  
 </choose>
  </action>
</rule>

<rule comment="NEW RULE: should + inf"> <!-- I should go -  Менің барғаным жөн-->
  <pattern>
    
   <pattern-item n="vaux-should"/>
    <pattern-item n="approx-inf-verb"/>
  </pattern>
  <action>
 <choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
    <call-macro n="default-nbr-pers"/>
        <out>
      <chunk name="should-inf-be">
      <tags>
        <tag><lit-tag v="VP_should_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger_past"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	    <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="жөн"/>
          <lit-tag v="adj"/>	
        </lu>
      </chunk>
  </out>
      </when>
<otherwise>

 <call-macro n="default-nbr-pers"/>
        <out>
      <chunk name="should-inf">
      <tags>
        <tag><lit-tag v="VP_should_inf"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="ger_past"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	         <clip pos="2" side="tl" part="a_kaz_verb"/>
    	      <lit-tag v="4"/>
           <lit-tag v="5"/>
           <lit-tag v="nom"/>
        </lu>
        <b/> 
        <lu>
          <lit v="жөн"/>
          <lit-tag v="adj"/>	
        </lu>
      </chunk>
  </out>
</otherwise>
</choose>


  </action>

</rule>




<rule comment="NEW RULE: be + verb-pp"> <!--are designed to have -->
<!-- superblank management to be corrected -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="verb-pp"/> <!--past participle -->
    <pattern-item n="to"/>
    <pattern-item n="inf-verb"/> 
   </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="4" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
         <out>
      <chunk name="pers-verb-pass-to-inf1_be">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="sg"/></tag> <!-- number -->
        <tag><lit-tag v="p3"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
 <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
        <lit-tag v="ger"/>
        <lit-tag v="nom"/>
        </lu>
<b pos="1"/>
<lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
<b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>
</when>
<otherwise>
 <out>
      <chunk name="pers-verb-pass-to-inf1">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="sg"/></tag> <!-- number -->
        <tag><lit-tag v="p3"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
 <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
                  <lit-tag v="nom"/>
        </lu>
<b pos="1"/>
<lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
<b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

</otherwise>
</choose>

      </when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
<choose>
      <when>
        <test>
          <equal>
             <clip pos="4" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
 <out>
      <chunk name="pers-verb-pass-to-inf2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
     <lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	 <lit-tag v="ger"/>
                 <lit-tag v="nom"/>
        </lu>
<b pos="1"/>
<lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
<b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>
     

</when>
<otherwise>

 <out>
      <chunk name="pers-verb-pass-to-inf2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
     <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
                 <lit-tag v="nom"/>
        </lu>
<b pos="1"/>
<lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
<b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>
     
</otherwise>
</choose>

      </when>

      <otherwise>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="4" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
     <let><var n="tense"/><lit-tag v="aor"/></let>
       <out>
      <chunk name="pers-verb-pass-to-inf3">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
       <lu>
           <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="ger"/>
         <lit-tag v="nom"/>
        </lu>
<b pos="1"/>
<lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
<b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

   

</when>
<otherwise>

     <let><var n="tense"/><lit-tag v="aor"/></let>
       <out>
      <chunk name="pers-verb-pass-to-inf3">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
       <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
        </lu>
<b pos="1"/>
<lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
<b pos="2"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

   
</otherwise>
</choose>

      </otherwise> 
    </choose>
  </action>
</rule>




<rule comment="NEW RULE: be + verb-pp"> <!--Pres and Past passive -->
<!-- superblank management to be corrected -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="verb-pp"/> <!--past participle -->
   </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let>
           <out><b pos="1"/></out>
      <call-macro n="NEW-gen-simple-verb-pass">
         <with-param pos="2"/> 
     </call-macro>

      </when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
   <out><b pos="1"/></out>
     <call-macro n="NEW-gen-simple-verb-pass">
         <with-param pos="2"/> 
     </call-macro>

      </when>

      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
   <out><b pos="1"/></out>
       <call-macro n="NEW-gen-simple-verb-pass">
         <with-param pos="2"/> 
     </call-macro>

      </otherwise> 
    </choose>
  </action>
</rule>






<rule comment="NEW RULE: be + not + verb-pp"> <!--Pres and Past passive -->
<!-- superblank management to be corrected -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
<pattern-item n="not"/>
    <pattern-item n="verb-pp"/> <!--past participle -->
   </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
           <out><b pos="1"/><b pos="2"/></out>
     <call-macro n="NEW-gen-simple-verb-pass-neg">
         <with-param pos="3"/> 
     </call-macro>

      </when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
           <out><b pos="1"/><b pos="2"/></out>
     <call-macro n="NEW-gen-simple-verb-pass-neg">
         <with-param pos="3"/> 
     </call-macro>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
           <out><b pos="1"/><b pos="2"/></out>
      <call-macro n="NEW-gen-simple-verb-pass-neg">
         <with-param pos="3"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: be + adv + verb-pp"> <!--Pres and Past passive -->
<!-- superblank management to be corrected -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="adv"/>
    <pattern-item n="verb-pp"/> <!--past participle -->
   </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let>
 <call-macro n="choose-pass"><with-param pos="3"/></call-macro> 
           <out>
      <chunk name="pers-verb-pass2">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
<lu>
             <clip pos="2" side="tl" part="whole"/>
</lu>
<b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/> 
          <var n="verb-pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

</when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
      <out>
      <chunk name="pers-verb-pass3">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag>
      </tags>
<lu>
             <clip pos="2" side="tl" part="whole"/>
</lu>
<b pos="1"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
             <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>

      </when>

      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
   <out><b pos="1"/><lu>
             <clip pos="2" side="tl" part="whole"/>
</lu></out>
       <call-macro n="NEW-gen-simple-verb-pass">
         <with-param pos="3"/> 
     </call-macro>

      </otherwise> 
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: have + been + verb-pp"> <!--Present Perfect Passive A books has been written  Кітап жазылып болған,Past perfect Кітап жазылған-->
<!-- not sure about the "past" part of this rule" -->
  <pattern>
    <pattern-item n="vaux-have"/>
    <pattern-item n="been"/> <!--past participle -->
 <pattern-item n="verb-pp"/>
    </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let> 
    <out>
      <chunk name="pers-verb30">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="past"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
       <lu>
      <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
	  <lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/>
        <lu>
         <lit v="бол"/>
 	<lit-tag v="vaux"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
	
        </lu>
      </chunk>
        </out>
      </when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
    <out>
      <chunk name="pers-verb31">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="past"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="4"/>
          <lit-tag v="3"/>	
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
   <out><b pos="1"/><b pos="2"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>








<rule comment="NEW RULE: will + be + verb-pp"> <!--Future1 Passive A books will be written  Кітап жазылады-->
<!-- superblank management not correct yet -->
  <pattern>
    <pattern-item n="vaux-will"/>
    <pattern-item n="be"/> <!--past participle -->
 <pattern-item n="verb-pp"/>
    </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
   
              <let><var n="tense"/><lit-tag v="aor"/></let> 
   <out><b pos="1"/><b pos="2"/></out>
    <call-macro n="NEW-gen-simple-verb-pass">
         <with-param pos="3"/> 
     </call-macro>
  </action>
</rule>

<rule comment="NEW RULE: will + not + be + verb-pp"> <!--Future1 Passive Negative A books will not be written-->
<!-- superblank management not correct yet -->
  <pattern>
    <pattern-item n="vaux-will"/>
<pattern-item n="not"/>
    <pattern-item n="be"/> <!--past participle -->
 <pattern-item n="verb-pp"/>
    </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
   
               <let><var n="tense"/><lit-tag v="aor"/></let> 
                  <out><b pos="1"/><b pos="2"/><b pos="3"/></out> <!-- ** -->
    <call-macro n="NEW-gen-simple-verb-pass-neg">
         <with-param pos="4"/> 
     </call-macro>
      
  </action>
</rule>


<rule comment="NEW RULE: be + being + verb-ed"> <!-- Passive Progressive: A book is being written -Кітап жазылып жатыр  -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="being"/>
<pattern-item n="verb-pp"/>
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="pres"/></let>
        <out>
      <chunk name="pers-verb-passive">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="pres"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
          <lit v="жат"/>
          <lit-tag v="vaux"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>

        <out>
      <chunk name="pers-verb32">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="ifi"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/>
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
<out><b pos="1"/><b pos="2"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: be + not + being + verb-ed"> <!-- Passive Progressive: A book is not being written   -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
<pattern-item n="not"/>
    <pattern-item n="being"/>
<pattern-item n="verb-pp"/>
   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="pres"/></let>
        <out>
      <chunk name="pers-verb-passive-neg">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="pres"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
      <b pos="3"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
          <lit v="жат"/>
          <lit-tag v="vaux"/>          
          <lit-tag v="neg"/>
          <lit-tag v="4"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>
        <out>
      <chunk name="pers-verb-being">
     <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="ifi"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="neg"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
      <b pos="2"/>
      <b pos="3"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/> 
        <lu>
          <lit v="отыр"/>
          <lit-tag v="vaux"/>
          <lit-tag v="6"/> 
          <lit-tag v="4"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> <!-- This is clearly wrong but we'll change it later -->
       <out><b pos="1"/><b pos="2"/><b pos="3"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: in contrast prep noun"> 
  <pattern>
    <pattern-item n="in-contrast"/>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="2"/>
        <with-param pos="4"/>
     </call-macro>
<call-macro n="change-case">  
<with-param pos="1"/>
  </call-macro> 
 <let><var n="case"/><lit-tag v="ins"/></let>
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="in-contrast-prep-nom-post">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
           <lu>
               <var n="postposition_lu"/>
            </lu>
<b/>
 <lu>  
      <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="in-contrast-prep-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
<b/>
 <lu>  
      <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>



<rule comment="NEW RULE: prep noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
     </call-macro>
<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
-->
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-nom-post">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep noun noun or noun noun"> <!--at cinemas or movie theatres. -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
    <pattern-item n="or"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
     </call-macro>
    <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="5"/>
     </call-macro>

<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
-->
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-nom-nom-or-n12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
<lu> 
 <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
 <b pos="3"/>
            <lu>  
               <clip pos="4" side="tl" part="whole"/> 
                  </lu>
 <b pos="4"/>
<lu> 
 <clip pos="5" side="tl" part="lem"/> 
     <clip pos="5" side="tl" part="a_nom"/>
     <clip pos="5" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="5"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="6" side="tl" part="lem"/> 
               <clip pos="6" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-nom-nom-or-n12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
<lu> 
 <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
<b pos="3"/>
            <lu>  
               <clip pos="4" side="tl" part="whole"/> 
                  </lu>
 <b pos="4"/>
<lu> 
 <clip pos="5" side="tl" part="lem"/> 
     <clip pos="5" side="tl" part="a_nom"/>
     <clip pos="5" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="5"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="6" side="tl" part="lem"/> 
               <clip pos="6" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
 
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep noun or noun noun"> <!--at cinemas or movie theatres. -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="nom"/>
    <pattern-item n="or"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
     </call-macro>

     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
     </call-macro>
<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
-->
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-nom-or-n12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
 <b pos="2"/>
            <lu>  
               <clip pos="3" side="tl" part="whole"/> 
                  </lu>
 <b pos="3"/>
<lu> 
 <clip pos="4" side="tl" part="lem"/> 
     <clip pos="4" side="tl" part="a_nom"/>
     <clip pos="4" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="4"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="5" side="tl" part="lem"/> 
               <clip pos="5" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-nom-or-n12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
<b pos="2"/>
            <lu>  
               <clip pos="3" side="tl" part="whole"/> 
                  </lu>
 <b pos="3"/>
<lu> 
 <clip pos="4" side="tl" part="lem"/> 
     <clip pos="4" side="tl" part="a_nom"/>
     <clip pos="4" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="4"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="5" side="tl" part="lem"/> 
               <clip pos="5" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
 
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep noun or noun noun"> <!--at cinemas or movie theatres. -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
    <pattern-item n="or"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
<call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
     </call-macro>
<call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="5"/>
     </call-macro>
<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
-->
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-adj-nom-or-n12gen">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
 <b pos="3"/>
            <lu>  
               <clip pos="4" side="tl" part="whole"/> 
                  </lu>
 <b pos="4"/>
<lu> 
 <clip pos="5" side="tl" part="lem"/> 
     <clip pos="5" side="tl" part="a_nom"/>
     <clip pos="5" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="5"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="6" side="tl" part="lem"/> 
               <clip pos="6" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-adj-nom-or-n12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
             <b pos="1"/>
 <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="2"/>
<lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
<b pos="3"/>
            <lu>  
               <clip pos="4" side="tl" part="whole"/> 
                  </lu>
 <b pos="4"/>
<lu> 
 <clip pos="5" side="tl" part="lem"/> 
     <clip pos="5" side="tl" part="a_nom"/>
     <clip pos="5" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="5"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="6" side="tl" part="lem"/> 
               <clip pos="6" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
 
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


    
  <rule comment="NEW RULE: prep obj-pron"> <!--I go with you - Мен сізбен барам --> <!-- not converted yet -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="obj-pron"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-number-according-to-sl-nbr"><with-param pos="2"/></call-macro> 
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
     </call-macro>
      <call-macro n="build-obj-pron-lu"><with-param pos="2"/></call-macro>
<choose>
  <when> 
    <test>
<or>
<equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
 <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
 <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
</or>
</test>
<let><var n="subj-pron_lu"/><clip pos="2" side="sl" part="a_pers"/></let>
</when>
<otherwise>
<let><var n="subj-pron_lu"/><lit-tag v="p3"/></let>
</otherwise>

</choose>
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 

        <out> <!-- with postposition -->

          <chunk name="prep-obj-pron-post">
            <tags><tag><var n="number"/> </tag>
                <tag><var n="pptag"/></tag>
              <!--<clip pos="2" part="a_nbr" side="sl"/></tag>  number -->
                <tag><var n="subj-pron_lu"/></tag> <!-- is it OK? -->
                <tag><var n="possessive"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
            </tags>
            <lu>  
               <var n="obj-pron_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-obj-pron">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- is it OK? -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag> 
            </tags>
            <lu>  
               <var n="obj-pron_lu"/>
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
        <call-macro n="out-blank-if-not-single-space"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="out-blank-if-not-single-space">
          <with-param pos="2"/>
        </call-macro>
  </action>
</rule>


<rule comment="NEW RULE: adjec noun1 noun2">   <!-- for "good football players"-->
  <pattern>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
 <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="3"/>
  </call-macro> 
<call-macro n="build-adjec-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="adjec-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="tl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="adjec_lu"/>
     </lu>
	<b pos="1"/>
 <lu>
     <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
     </lu>
<b pos="2"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>

<rule comment="NEW RULE: adjec noun"> 
  <pattern>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="2"/>
  </call-macro> 
<call-macro n="build-adjec-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="adjec-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="adjec_lu"/>
     </lu>
	<b pos="1"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>


<rule comment="NEW RULE: subs-ing noun"> 
  <pattern>
    <pattern-item n="subs-ing"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="2"/>
  </call-macro> 
    <out>
    <chunk name="subs-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="1" side="tl" part="lem"/>
     <clip pos="1" side="tl" part="a_kaz_verb"/>
          <lit-tag v="gpr_impf"/>
          <lit-tag v="subst"/>
          <lit-tag v="nom"/>
     </lu>
	<b pos="1"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>

<rule comment="NEW RULE: subs-ing noun"> 
  <pattern>

    <pattern-item n="nom"/>
    <pattern-item n="subs-ing"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="1"/>
  </call-macro> 
    <out>
    <chunk name="subs-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="2" side="tl" part="lem"/>
     <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="gpr_impf"/>
          <lit-tag v="subst"/>
          <lit-tag v="nom"/>
     </lu>
	<b pos="1"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>


<rule comment="NEW RULE: det noun1 s-gen noun2"> <!-- the football players-->
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
    <pattern-item n="s-gen"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="4"/>
    </call-macro> <!-- noun is built in singular as the NP contains numerals -->
    

<!-- *** -->
<choose>
  <when> <!-- Demonstrative -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>

<or>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</or>
</and>
</test>
<let>
<var n="case"/><lit-tag v="nom"/>
</let>
</when>
<otherwise>
<let>
<var n="case"/><lit v=""/>
</let>
</otherwise>
</choose>

<choose>
  <when> <!-- Demonstrative -->

    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>

    <out>
    <chunk name="detdem-nom-nom2">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder: use 'semantic' number for SL -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
<var n="case"/>
    </lu>
	<b pos="1"/>
    <lu>  
     <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="gen"/>
     </lu>
  <b pos="2"/>
 <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-num-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
  <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
<b pos="1"/>
        
    <lu> 
 <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="gen"/>
    </lu>
 <b pos="2"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-num-nom1"> <!-- the three good football players-->
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
 
   <lu> 
 <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="gen"/>
    </lu>
    
    <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>




<rule comment="NEW RULE: det noun1 noun2"> <!-- the football players-->
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="3"/>
    </call-macro> <!-- noun is built in singular as the NP contains numerals -->
   <choose>
  <when> <!-- Demonstrative -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>

<or>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</or>
</and>
</test>
<let>
<var n="case"/><lit-tag v="nom"/>
</let>
</when>
<otherwise>
<let>
<var n="case"/><lit v=""/>
</let>
</otherwise>
</choose>
 

   <choose>
  <when> <!-- nbr -->
    <test>
<not><equal><clip pos="1" side="sl" part="a_nbr"/><lit v=""/></equal></not>
</test>
<let>
<var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
</let>
</when>
<when> <!-- nbr -->
    <test>
<not><equal><clip pos="2" side="sl" part="a_nbr"/><lit v=""/></equal></not>
</test>
<let>
<var n="number"/><clip pos="2" side="sl" part="a_nbr"/>
</let>
</when>
<otherwise>
<let>
<var n="number"/><lit-tag v="sg"/>
</let>
</otherwise>
</choose>

<!-- *** -->

<choose>
  <when> <!-- Demonstrative -->

    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>

    <out>
    <chunk name="detdem-nom-nom2">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><var n="number"/></tag> <!-- number placeholder: use 'semantic' number for SL -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
<var n="case"/>
    </lu>
	<b pos="1"/>
    <lu>  
     <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
     </lu>
  <b pos="2"/>
 <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-num-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><var n="number"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
  <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
<b pos="1"/>
        
    <lu> 
 <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
 <b pos="2"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-num-nom2"> <!-- the three good football players-->
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><var n="number"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
 
   <lu> 
 <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
    
    <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>

<rule comment="NEW RULE: det num noun1 noun2"> <!-- three good football players-->
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="4"/>
    </call-macro> <!-- noun is built in singular as the NP contains numerals -->
     <call-macro n="build-num-lu">
      <with-param pos="2"/>
    </call-macro>

<!-- *** -->
<choose>
<when> <!-- these as osy prn dem -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<or>
<equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="These"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="these"/></equal>
</or>
</and>
</test><let><var n="caseDem"/><lit-tag v="nom"/></let>
</when>
<otherwise>
<let><var n="caseDem"/><lit v=""/></let>
</otherwise>
</choose>
<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-num-nom1">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder: use 'semantic' number for SL -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
<var n="caseDem"/>
    </lu>
	<b pos="1"/>
    <lu>  
      <var n="num_lu"/>
     </lu>
    <b pos="2"/>
    <lu>  
     <clip pos="3" side="tl" part="lem"/> 
     <clip pos="3" side="tl" part="a_nom"/>
     <clip pos="3" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
     </lu>
    <b pos="3"/>
 <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-num-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
  <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
<b pos="1"/>
  
    <lu> 
      <var n="num_lu"/>
     </lu>
    <b pos="2"/>
    <lu> 
 <clip pos="3" side="tl" part="lem"/> 
     <clip pos="3" side="tl" part="a_nom"/>
     <clip pos="3" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
    <b pos="3"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-num-nom3"> <!-- the three good football players-->
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
    <lu>  
      <var n="num_lu"/>
    </lu>
    <b pos="2"/>
   <lu> 
 <clip pos="3" side="tl" part="lem"/> 
     <clip pos="3" side="tl" part="a_nom"/>
     <clip pos="3" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
    </lu>
    <b pos="3"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>




 
<rule comment="NEW RULE: det NP_verb-ing noun"> 
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="NP_verb-ing"/>  
    <pattern-item n="nom"/>
  </pattern>
  <action>

    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="3"/>
    </call-macro> <!-- noun is built in singular as the NP contains numerals -->
     <call-macro n="build-num-lu">
      <with-param pos="2"/>
    </call-macro>

<call-macro n="assign-osy-dem-nom">
      <with-param pos="1"/>
    </call-macro> 
<!-- *** -->

<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-ing-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder: use 'semantic' number for SL -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
      <var n="caseDem"/>
    </lu>
	<b pos="1"/>

       <lu>
      <clip pos="2" side="tl" part="lem"/>
      <clip pos="2" side="tl" part="a_kaz_verb"/>
      <lit-tag v="ger_past"/>
      <lit-tag v="nom"/>
    </lu>
    <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-ing-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
  <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
<b pos="1"/>
  
       <lu>
      <clip pos="2" side="tl" part="lem"/>
      <clip pos="2" side="tl" part="a_kaz_verb"/>
      <lit-tag v="ger_past"/>
      <lit-tag v="nom"/>
    </lu>
    <b pos="2"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-ing-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
      <lu>
      <clip pos="2" side="tl" part="lem"/>
      <clip pos="2" side="tl" part="a_kaz_verb"/>
      <lit-tag v="ger_past"/>
      <lit-tag v="nom"/>
    </lu>
    <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>

<rule comment="NEW RULE: det verb-ing"> 
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="subs-ing"/>
  </pattern>
  <action>

      
    

<!-- *** -->
<choose>
  <when> <!-- Demonstrative -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>

<or>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</or>
</and>
</test>
<let>
<var n="case"/><lit-tag v="nom"/>
</let>
</when>
<otherwise>
<let>
<var n="case"/><lit v=""/>
</let>
</otherwise>
</choose>
<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-ving"  case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><lit-tag v="ND"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="PD"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="ger_past"/></tag> 
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
      <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
<var n="case"/>
    </lu>
    <b pos="1"/>
    <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
         <lit-tag v="4"/>
  	 <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="6"/> <!-- FMT: added  to avoid gen error -->
        </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-ving" case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
     <tag><lit-tag v="ND"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="PD"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="ger_past"/></tag> 
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
    <b pos="1"/>
    <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
         <lit-tag v="4"/>
  	 <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="6"/> <!-- FMT: added  to avoid gen error -->
        </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <call-macro n="process-preblank-1">
       <with-param pos="1"/>
       <with-param pos="2"/>
    </call-macro>
    <out>
    <chunk name="detart-ving">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><lit-tag v="ND"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="PD"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="ger_past"/></tag>  <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

<!--    <b pos="1"/> -->
     <var n="preblank-1"/>
      <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
         <lit-tag v="4"/>
  	 <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="6"/> <!-- FMT: added  to avoid gen error -->
        </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: det num noun"> 
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="3"/>
    </call-macro> <!-- noun is built in singular as the NP contains numerals -->
     <call-macro n="build-num-lu">
      <with-param pos="2"/>
    </call-macro>

<!-- *** -->

<choose>
<when> <!-- these as osy prn dem -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</and>
</test>
    <out>
    <chunk name="detdem-num-nom-osy">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="tl" part="a_nbr"/></tag> <!-- number placeholder: use 'semantic' number for SL -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
     <lit-tag v="nom"/>
    </lu>
	<b pos="1"/>
    <lu>  
      <var n="num_lu"/>
     </lu>
    <b pos="2"/>
    <lu>  
     <clip pos="3" side="tl" part="lem"/> 
     <clip pos="3" side="tl" part="a_nom"/>
     <clip pos="3" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
     </lu>
    <b pos="3"/>
 <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
 
 
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-num-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder: use 'semantic' number for SL -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
    </lu>
	<b pos="1"/>
    <lu>  
      <var n="num_lu"/>
     </lu>
    <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-num-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
  <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
<b pos="1"/>
  
    <lu> 
      <var n="num_lu"/>
     </lu>
    <b pos="2"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-num-nom4">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
    <lu>  
      <var n="num_lu"/>
    </lu>
    <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: num noun1 noun2"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5-sg">
       <with-param pos="3"/>
  </call-macro>  <!-- noun is built in singular as the NP contains numerals -->
<call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="tl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
	<b pos="1"/>
<lu>
     <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="nom"/>
</lu>
	<b pos="2"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>

<rule comment="NEW RULE: num years old">  <!-- num years old-->
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="years"/>
    <pattern-item n="old"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5-sg">
       <with-param pos="2"/>
  </call-macro>  <!-- noun is built in singular as the NP contains numerals -->
<call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num-years-old">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="loc"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
	<b pos="1"/>
         <b pos="2"/>
	<lu>
      <var n="NEW-noun_lu"/>

    </lu>
    </chunk>
    </out>
      </action>
</rule>


<rule comment="NEW RULE: num noun"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5-sg">
       <with-param pos="2"/>
  </call-macro>  <!-- noun is built in singular as the NP contains numerals -->
<call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
	<b pos="1"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>




<rule comment="NEW RULE: prep num noun1 noun2"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
      </call-macro>
<call-macro n="build-num-lu"><with-param pos="2"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-num-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  
               <var n="num_lu"/>
            </lu>
<b/>
 <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <clip pos="3" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-num-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="4"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 <lu>  
               <var n="num_lu"/>
            </lu>
 <b pos="2"/>
 <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <clip pos="3" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
<b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: prep adj noun1 noun2"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
      </call-macro>
<call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-adj-nom12post">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  
               <var n="adjec_lu"/>
            </lu>
<b/>
 <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <clip pos="3" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
                <clip pos="4" side="tl" part="a_nbr"/>  <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-adj-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="4"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="2"/>
 <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <clip pos="3" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
<b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
<clip pos="4" side="tl" part="a_nbr"/> 
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>




<rule comment="NEW RULE: prep noun1 noun2"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="noun"/>
    <pattern-item n="np-ant"/>
    <pattern-item n="np-cog"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
      </call-macro>
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-post-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
        <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 

 <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>



<rule comment="NEW RULE: prep noun1 noun2"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="noun"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
      </call-macro>
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-post-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
        <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 

 <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>




<rule comment="NEW RULE: prep noun1 s-gen noun2"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="noun"/>
    <pattern-item n="s-gen"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
      </call-macro>
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-post-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
        <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_nbr"/> 
               <lit-tag v="gen"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="px3sp"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-nom12">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 

 <lu>  <!-- build in situ for the time being -->
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <clip pos="2" side="tl" part="a_nbr"/> 
               <lit-tag v="gen"/> 
          
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: prep num noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
      </call-macro>
<call-macro n="build-num-lu"><with-param pos="2"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-num-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  
               <var n="num_lu"/>
            </lu>
 <b/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b pos="2"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-num-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 <lu>  
               <var n="num_lu"/>
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: prep every noun">  
<!-- superblank management around determiner -->	
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="every"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="3"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="3"/>
  </call-macro>  
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->
         
           <out>
             <chunk name="prep-det-ind-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
            
     <otherwise>

           <out>
             <chunk name="prep-detind-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
         </tags>  
             <b pos="1"/>        
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
             </otherwise>
</choose>
  </action>
</rule>



<rule comment="NEW RULE: num adjec noun1 noun2"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
   <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5-sg">
       <with-param pos="4"/>
  </call-macro>  <!-- noun is built in singular as the NP contains numerals -->
<call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
<call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
    <out>
    <chunk name="num-adjec-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
<b pos="1"/>
<lu>
      <var n="adjec_lu"/>
     </lu>
	<b pos="2"/>
 <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <clip pos="3" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
<b pos="3"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>


<rule comment="NEW RULE: num adjec noun"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5-sg">
       <with-param pos="3"/>
  </call-macro>  <!-- noun is built in singular as the NP contains numerals -->
<call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
<call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
    <out>
    <chunk name="num-adjec-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
<b pos="1"/>
<lu>
      <var n="adjec_lu"/>
     </lu>
	<b pos="2"/>
	<lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
      </action>
</rule>

<rule comment="NEW RULE: det num adjec noun1 noun2"> 
  <pattern>
    <pattern-item n="det"/>
     <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
   <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="5"/>
    </call-macro>
     <call-macro n="build-adjec-lu">
      <with-param pos="3"/>
    </call-macro>
  <call-macro n="build-num-lu">
      <with-param pos="2"/>
    </call-macro>

<!-- *** -->

<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-num-adjec-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
    </lu>
  	<b pos="1"/>
    <lu>  
      <var n="num_lu"/>
     </lu>
 <b pos="2"/>
   <lu>  
      <var n="adjec_lu"/>
     </lu>
   <b pos="3"/>
 <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <clip pos="4" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
          
            </lu>
<b pos="4"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
        <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
    <b pos="1"/>
    <lu> 
      <var n="num_lu"/>
     </lu>
     <b pos="2"/>
<lu> 
      <var n="adjec_lu"/>
     </lu>
<b pos="3"/>
<lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <clip pos="4" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
              </lu>
<b pos="4"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-nom3">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
<lu>  
      <var n="num_lu"/>
     </lu>
<b pos="2"/>
 <lu>  
      <var n="adjec_lu"/>
     </lu>
<b pos="3"/>
<lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <clip pos="4" side="tl" part="a_nbr"/> 
               <lit-tag v="nom"/> 
              </lu>
<b pos="4"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
   </otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: det num adjec noun"> 
  <pattern>
    <pattern-item n="det"/>
     <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5-sg">
      <with-param pos="4"/>
    </call-macro>
     <call-macro n="build-adjec-lu">
      <with-param pos="3"/>
    </call-macro>
  <call-macro n="build-num-lu">
      <with-param pos="2"/>
    </call-macro>

<!-- *** -->

<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-num-adjec-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
    </lu>
  	<b pos="1"/>
    <lu>  
      <var n="num_lu"/>
     </lu>
 <b pos="2"/>
   <lu>  
      <var n="adjec_lu"/>
     </lu>
   <b pos="3"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
        <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
    <b pos="1"/>
    <lu> 
      <var n="num_lu"/>
     </lu>
     <b pos="2"/>
<lu> 
      <var n="adjec_lu"/>
     </lu>
<b pos="3"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-nom2">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
<lu>  
      <var n="num_lu"/>
     </lu>
<b pos="2"/>
 <lu>  
      <var n="adjec_lu"/>
     </lu>
<b pos="3"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
   </otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: prep num adjec noun1 noun2"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="4"/>
     </call-macro>

 <call-macro n="build-adjec-lu"><with-param pos="3"/></call-macro> 
 <call-macro n="build-num-lu"><with-param pos="2"/></call-macro> 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-num-adj-noun">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
  <lu>  
               <var n="num_lu"/>
            </lu>
 <b pos="2"/>
            <lu>  
               <var n="adjec_lu"/>
            </lu>
  <b pos="3"/>
 <lu> 
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <clip pos="4" side="tl" part="a_nbr"/>
                <lit-tag v="nom"/>
 </lu> 
 <b pos="4"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="5" side="tl" part="lem"/> 
               <clip pos="5" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-num-adj-noun">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
<lu>  
               <var n="num_lu"/>
            </lu>
 <b pos="2"/>
 <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="3"/>
 <lu> 
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <clip pos="4" side="tl" part="a_nbr"/>
                <lit-tag v="nom"/>
 </lu> 
 <b pos="4"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="5" side="tl" part="lem"/> 
               <clip pos="5" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
        <call-macro n="out-blank-if-not-single-space"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="out-blank-if-not-single-space">
          <with-param pos="2"/>
        </call-macro>
  </action>
</rule>

<rule comment="NEW RULE: prep num adjec noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="4"/>
     </call-macro>

 <call-macro n="build-adjec-lu"><with-param pos="3"/></call-macro> 
 <call-macro n="build-num-lu"><with-param pos="2"/></call-macro> 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-num-adj-noun">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
  <lu>  
               <var n="num_lu"/>
            </lu>
  <b pos="1"/>
            <lu>  
               <var n="adjec_lu"/>
            </lu>
  <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-num-adj-noun">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
<lu>  
               <var n="num_lu"/>
            </lu>
  <b pos="2"/>
 <lu>  
               <var n="adjec_lu"/>
            </lu>
  <b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
        <call-macro n="out-blank-if-not-single-space"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="out-blank-if-not-single-space">
          <with-param pos="2"/>
        </call-macro>
  </action>
</rule>


<rule comment="NEW RULE: prep det num adjec noun1 noun2">  
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="5"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5-sg">
    <with-param pos="6"/>
  </call-macro>  
 <call-macro n="build-num-lu">
    <with-param pos="3"/>
  </call-macro>  
<call-macro n="build-adjec-lu">
    <with-param pos="4"/>
  </call-macro> 
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-adjec-noun1">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
       <b pos="1"/>
		<lu>
               <var n="num_lu"/>
            </lu>
         <b pos="2"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="4"/>
 <lu>
             <clip pos="5" side="tl" part="lem"/>
             <clip pos="5" side="tl" part="a_nom"/>
             <clip pos="5" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
<b pos="5"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-num-adjec-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="6" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><lit-tag v="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
               <var n="num_lu"/>
            </lu>
           <b pos="2"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <b pos="4"/>
 <lu>
             <clip pos="5" side="tl" part="lem"/>
             <clip pos="5" side="tl" part="a_nom"/>
             <clip pos="5" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
<b pos="5"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="prep-detart-num-adjec-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="6" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
             <b pos="1"/>
             <b pos="2"/>
             <lu>
               <var n="num_lu"/>
            </lu>
        <b pos="3"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>  
 <lu>
             <clip pos="5" side="tl" part="lem"/>
             <clip pos="5" side="tl" part="a_nom"/>
             <clip pos="5" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
<b pos="5"/>      
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-adjec-noun2">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="6" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
         <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
         <b pos="2"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>      
             <lu>
               <var n="num_lu"/>
            </lu>
             <b pos="4"/>
 <lu>
             <clip pos="5" side="tl" part="lem"/>
             <clip pos="5" side="tl" part="a_nom"/>
             <clip pos="5" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
<b pos="5"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-num-adjec-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="6" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags> 
                <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
               
        <b pos="2"/>
        <lu>
               <var n="num_lu"/>
            </lu>
	
            <b pos="3"/> <lu>
               <var n="adjec_lu"/>
            </lu>         
             <b pos="4"/>
 <lu>
             <clip pos="5" side="tl" part="lem"/>
             <clip pos="5" side="tl" part="a_nom"/>
             <clip pos="5" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
<b pos="5"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-num-adjec-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="6" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
               <lu>
               <var n="num_lu"/>
            </lu>
             <b pos="3"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/> 
 <lu>
             <clip pos="5" side="tl" part="lem"/>
             <clip pos="5" side="tl" part="a_nom"/>
             <clip pos="5" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
<b pos="5"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>



<rule comment="NEW RULE: prep det noun1 noun2">  
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
    <pattern-item n="s-gen"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="5"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5-sg">
    <with-param pos="5"/>
  </call-macro>  

    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-noun12">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
       <b pos="1"/>
	       <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="gen"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun12">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><lit-tag v="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
                <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="gen"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="prep-detart-noun12">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
             <b pos="1"/>
             <b pos="2"/>
                <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="gen"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-adjec-noun3">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
         <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
         <b pos="2"/>
	       <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="gen"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun12">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags> 
                <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
               
           <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="gen"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-noun12">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
          <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="gen"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>







<rule comment="NEW RULE: prep det noun1 noun2">  
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action><call-macro n="assign-osy-dem-nom">
      <with-param pos="2"/>
    </call-macro> 


  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5-sg">
    <with-param pos="4"/>
  </call-macro>  

    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-noun12">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
       <b pos="1"/>
	       <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
       <b pos="2"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
       <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun12">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><lit-tag v="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
                <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
       <b pos="2"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
       <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="prep-detart-noun12">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
             <b pos="1"/>

                <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
       <b pos="2"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
       <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-det-noun1-noun24">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
         <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
	     <var n="caseDem"/>
             </lu>
         <b pos="2"/>
	       <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
         <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun12">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags> 
                <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
                <b pos="2"/>      
           <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
       <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-noun12">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="px3sp"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
          <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_nom"/>
             <clip pos="3" side="tl" part="a_nbr"/>
             <lit-tag v="nom"/>
             </lu>
       <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep det num adjec noun">  
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
 <pattern-item n="num"/>
<pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="5"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5-sg">
    <with-param pos="5"/>
  </call-macro>  
 <call-macro n="build-num-lu">
    <with-param pos="3"/>
  </call-macro>  
<call-macro n="build-adjec-lu">
    <with-param pos="4"/>
  </call-macro> 
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-adjec-noun5">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
       <b pos="1"/>
		<lu>
               <var n="num_lu"/>
            </lu>
         <b pos="2"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="4"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-num-adjec-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><lit-tag v="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
               <var n="num_lu"/>
            </lu>
           <b pos="2"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <b pos="4"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="prep-detart-num-adjec-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
             <b pos="1"/>
             <b pos="2"/>
             <lu>
               <var n="num_lu"/>
            </lu>
        <b pos="3"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>        
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-adjec-noun6">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
         <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
         <b pos="2"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>      
             <lu>
               <var n="num_lu"/>
            </lu>
             <b pos="4"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-num-adjec-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags> 
                <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
               
        <b pos="2"/>
        <lu>
               <var n="num_lu"/>
            </lu>
	
            <b pos="3"/> <lu>
               <var n="adjec_lu"/>
            </lu>         
             <b pos="4"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-num-adjec-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
               <lu>
               <var n="num_lu"/>
            </lu>
             <b pos="3"/>
	<lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/> 
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep det noun">  
<!-- superblank management around determiner -->	
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="3"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="3"/>
  </call-macro>  
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
<when> <!-- these as osy prn dem -->
    <test>
<and>
<equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<equal><clip pos="2" side="sl" part="lem"/><lit v="that"/></equal>
</and>
</test>
	 <out>
             <chunk name="prep-detdem-noun-post-osy">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <lit-tag v="prn"/>
             <clip pos="2" side="tl" part="a_dem"/>
             <lit-tag v="nom"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
         </when>

         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-noun-post">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             <lit-tag v="nom"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><or><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal>
<equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or></test>

           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <b pos="2"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
<choose>
         <when> 
           <test><equal><var n="case"/><lit v=""/>       </equal></test>
<let><var n="case"/><lit-tag v="nom"/> </let>
</when>
</choose>
        
<out>
          <chunk name="prep-detart-noun1">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case of noun, but not case of PP (needs to change) -->
         </tags>
            <b pos="1"/>
            <b pos="2"/> 
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
<choose>
<when>  <!-- анау det dem -->
           <test><and><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<equal><clip pos="2" side="sl" part="lem"/><lit v="that"/></equal>
</and></test>
<let><var n="caseDem"/>             <lit v=""/></let>
</when>
<otherwise>
<let><var n="caseDem"/>             <lit-tag v="nom"/></let>
</otherwise>

</choose>

           <out>
             <chunk name="prep-detdem-noun-nopost">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
         </tags>  
             <b pos="1"/>        
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
<var n="caseDem"/>

             </lu>
             <b pos="2"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
            <test><or><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal>
<equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>      
             <b pos="1"/>    
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
             <b pos="2"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-noun2">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>   
              <b pos="1"/>
              <b pos="2"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: det prep det noun">  
<!-- all of the money -->	
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="2"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="4"/>
  </call-macro>  
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="det-prep-det-noun-post">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
             </lu>
<b/>
             <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><or><equal><clip pos="3" side="sl" part="a_pos"/><lit-tag v="pos"/></equal>
<equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or></test>

           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="3"/>
           </call-macro>
           <out>
            <chunk name="det-prep-det-noun-postposs">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
             </lu>
<b/>
              <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
              <b pos="2"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="det-prep-det-noun-postnoposs">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case of noun, but not case of PP (needs to change) -->
         </tags>
            <b pos="1"/>
            <b pos="2"/> 
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
             </lu>
<b/>
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->

 <choose>
<when> <!-- these as osy prn dem -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</and>
</test>
	 <out>
            <chunk name="det-prep-det-noun-postposs2-osy">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>      
             <b pos="1"/>  
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
		<lit-tag v="nom"/>
             </lu>
<b/>  
             <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
             <b pos="2"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
      
 </when>


         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="det-prep-det-noun-nopost">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
         </tags>  
             <b pos="1"/>  
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
             </lu>
<b/>      
             <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
            <test><or><equal><clip pos="3" side="sl" part="a_pos"/><lit-tag v="pos"/></equal>
<equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="3"/>
           </call-macro>
           <out>
            <chunk name="det-prep-det-noun-postposs2">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>      
             <b pos="1"/>  
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
             </lu>
<b/>  
             <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
             <b pos="2"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="det-prep-det-noun-noposs-nodem">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>   
              <b pos="1"/>
              <b pos="2"/>
 <lu>
             <clip pos="1" side="tl" part="lem"/>
             <clip pos="1" side="tl" part="a_det"/>
             <clip pos="1" side="tl" part="a_dem"/>
             </lu>
<b/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep det noun">  
<!-- superblank management around determiner -->	
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="4"/>
  </call-macro>  
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-det-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>

            <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
 <b pos="3"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><or><equal><clip pos="3" side="sl" part="a_pos"/><lit-tag v="pos"/></equal>
<equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or></test>

           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-det-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
              <b pos="2"/>
  <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
 <b pos="3"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="prep-detart-det-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case of noun, but not case of PP (needs to change) -->
         </tags>
            <b pos="1"/>
            <b pos="2"/> 
 <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
 <b pos="3"/>
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-det-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
         </tags>  
             <b pos="1"/>        
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
<lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
             <b pos="3"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
            <test><or><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal>
<equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or></test>
            <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-det-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>      
             <b pos="1"/>    
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
             <b pos="2"/>
<lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
             <b pos="3"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-det-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case as computed -->
           </tags>   
              <b pos="1"/>
              <b pos="2"/>
<lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
             <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>



<rule comment="NEW RULE: prep det comp-adjec noun">  
<!-- for comparative sint adj -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="comp-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="4"/>
  </call-macro>  
      <call-macro n="build-adjec-lu"><with-param pos="3"/></call-macro> 
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-comp_adj-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
              <lit-tag v="comp"/>
            </lu>
            <b pos="3"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-comp_adj-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>
            <lu>
               <var n="adjec_lu"/>
              <lit-tag v="comp"/>
            </lu>
              <b pos="3"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->

        <out>
          <chunk name="prep-detart-comp_adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
         <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
              <lit-tag v="comp"/>
            </lu>
            <b pos="3"/>        
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-comp_adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
              <lit-tag v="comp"/>
            </lu>

            <b pos="3"/>      
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-comp_adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>
           <b pos="1"/> 
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
           <b pos="2"/>
                <lu>
               <var n="adjec_lu"/>
              <lit-tag v="comp"/>
            </lu>
            <b pos="3"/>          
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
           <chunk name="prep-detart-comp_adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
           <lu>
                        <var n="adjec_lu"/> 
              <lit-tag v="comp"/>
            </lu>
            <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep det sup-adjec noun">  
<!-- for superlative sint adj -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
    <pattern-item n="sup-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="4"/>
  </call-macro>  
      <call-macro n="build-adjec-lu"><with-param pos="3"/></call-macro> 
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-sup_adj-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>
          <lit v="ең"/>
          <lit-tag v="adv"/> 
             </lu>
          <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
              
            </lu>
            <b/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-sup_adj-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor suputed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
           <b pos="2"/>
             <lu>
          <lit v="ең"/>
          <lit-tag v="adv"/> 
             </lu>
          <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
              
            </lu>
            <b/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->

        <out>
          <chunk name="prep-detart-sup_adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
           <b pos="2"/>
             <lu>
          <lit v="ең"/>
          <lit-tag v="adv"/> 
             </lu>
          <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
              
            </lu>
            <b/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-sup_adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
              <b pos="2"/>
             <lu>
          <lit v="ең"/>
          <lit-tag v="adv"/> 
             </lu>
          <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
              
            </lu>
            <b/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
           
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-sup_adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>
           <b pos="1"/> 
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>
             <lu>
          <lit v="ең"/>
          <lit-tag v="adv"/> 
             </lu>
          <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
              
            </lu>
            <b/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
           <chunk name="prep-detart-sup_adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
            <b pos="2"/>
             <lu>
          <lit v="ең"/>
          <lit-tag v="adv"/> 
             </lu>
          <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
              
            </lu>
            <b/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
           
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>
<!--in the most beautiful garden -->






<rule comment="NEW RULE: the most adjec noun"> 
  <pattern>
    <pattern-item n="the-most"/>
    <pattern-item n="non-sup-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
 
 
        <out> <!-- with postposition -->
          <chunk name="the_most_adjec-nom">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><lit-tag v="CD"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  
              <lit v="ең"/>
               <lit-tag v="adv"/>
            </lu>
            <b pos="2"/>
            <lu>  
               <var n="adjec_lu"/>
            </lu>
            <b/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>           
          </chunk>
        </out>

  </action>
</rule>



<rule comment="NEW RULE: prep the most adjec noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="the-most"/>
    <pattern-item n="non-sup-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="4"/>
     </call-macro>
<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
--><call-macro n="build-adjec-lu"><with-param pos="3"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-the_most_adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
        <lu>  
              <lit v="ең"/>
               <lit-tag v="adv"/>
            </lu>
 <b pos="2"/>

            <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-the_most_adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
<b pos="1"/> 
  <lu>  
              <lit v="ең"/>
               <lit-tag v="adv"/>
            </lu>
<b pos="2"/>
 <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


<!-- in the more beautiful garden-->

<rule comment="NEW RULE: prep det more adjec noun">  

  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
     <pattern-item n="more"/>
    <pattern-item n="non-sup-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="5"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="5"/>
  </call-macro>  
 <call-macro n="build-adjec-lu">
    <with-param pos="4"/>
  </call-macro>  
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-more_adj-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <b pos="2"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
                <lit-tag v="comp"/>
            </lu>
            <b pos="4"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-more_adj-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <b pos="2"/>
            <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="3"/>
            <lu>
               <var n="adjec_lu"/>
                <lit-tag v="comp"/>
            </lu>
              <b pos="4"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->

        <out>
          <chunk name="prep-detart-more_adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
         <b pos="2"/>
            <b pos="3"/>        
             <lu>
               <var n="adjec_lu"/>
                <lit-tag v="comp"/>
            </lu>
            <b pos="4"/>        
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-more_adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
             <b pos="1"/>
             <b pos="2"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
                <lit-tag v="comp"/>
            </lu>
            <b pos="4"/>      
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-more_adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>
           <b pos="1"/> 
           <b pos="2"/>
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
           <b pos="3"/>
                <lu>
               <var n="adjec_lu"/>
                <lit-tag v="comp"/>
            </lu>
            <b pos="4"/>          
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
           <chunk name="prep-detart-more_adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
            <b pos="3"/>
           <lu>
                        <var n="adjec_lu"/> 
                <lit-tag v="comp"/>
            </lu>
            <b pos="4"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>





<rule comment="NEW RULE: prep det adjec noun">  
<!-- explicit superblank management -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
     <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="4"/>
  </call-macro>  
 <call-macro n="build-adjec-lu">
    <with-param pos="3"/>
  </call-macro>  
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
<when> <!-- these as osy prn dem -->
    <test>
<and>
<equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
<equal><clip pos="2" side="sl" part="lem"/><lit v="this"/></equal>
</and>
</test>
	<out>
             <chunk name="prep-det-adjec-noun-dempost-osy">
    		<tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
	     <lit-tag v="nom"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
 </when>


         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-det-adjec-noun-dempost">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-det-adjec-noun-postposs">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>
            <lu>
               <var n="adjec_lu"/>
            </lu>
              <b pos="3"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
<choose>
         <when> 
           <test><equal><var n="case"/><lit v=""/>              </equal></test>
<let><var n="case"/><lit-tag v="nom"/> </let>
</when>
</choose>

        <out>
          <chunk name="prep-det-adjec-noun-postnoposs">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
         <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>        
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-det-adjec-noun-nopost">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             <lit-tag v="nom"/>
             </lu>
             <b pos="2"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>      
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-det-adjec-noun-postposs">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>
           <b pos="1"/> 
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
           <b pos="2"/>
                <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="3"/>          
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
           <chunk name="prep-det-adjec-noun-nopossnodem">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
           <lu>
                        <var n="adjec_lu"/> 
            </lu>
            <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep det unknown adjec noun">  
<!-- explicit superblank management -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="unknown"/>
    <pattern-item n="det"/>
     <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="5"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="5"/>
  </call-macro>  
 <call-macro n="build-adjec-lu">
    <with-param pos="4"/>
  </call-macro>  
<call-macro n="assign-osy-dem-nom">
      <with-param pos="3"/>
    </call-macro> 

    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="5" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             <var n="caseDem"/>
             </lu>
             <b pos="2"/>
  <lu>
             <clip pos="2" side="tl" part="whole"/>
            
             </lu>
            <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="3" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="3"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>
  <lu>
             <clip pos="2" side="tl" part="whole"/>
            
             </lu>
            <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->

        <out>
          <chunk name="prep-detart-unk-adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
            <b pos="2"/>
  <lu>
             <clip pos="2" side="tl" part="whole"/>
            
             </lu>
            <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>     
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="3" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-unk-adj-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
             <b pos="1"/>
              <lu>
             <clip pos="3" side="tl" part="lem"/>
             <clip pos="3" side="tl" part="a_det"/>
             <clip pos="3" side="tl" part="a_dem"/>
             </lu>
             <b pos="2"/>
  <lu>
             <clip pos="2" side="tl" part="whole"/>
            
             </lu>
            <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/> 
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="3" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="3"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-unk-adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>
           <b pos="1"/> 
             <lu>
                <clip pos="3" side="tl" part="whole"/>
              </lu>
             <b pos="2"/>
  <lu>
             <clip pos="2" side="tl" part="whole"/>
            
             </lu>
            <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>    
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
           <chunk name="prep-detart-unk-adj-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="5" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
             <b pos="2"/>
  <lu>
             <clip pos="2" side="tl" part="whole"/>
            
             </lu>
            <b pos="3"/>
             <lu>
               <var n="adjec_lu"/>
            </lu>
            <b pos="4"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: prep det unknown noun">  
<!-- explicit superblank management -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
     <pattern-item n="unknown"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<call-macro n="assign-osy-dem-nom">
      <with-param pos="2"/>
    </call-macro> 

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5">
    <with-param pos="4"/>
  </call-macro>  
 
    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             <var n="caseDem"/>
             </lu>
             <b pos="2"/>
             <lu>
             <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
            <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>
            <lu>
             <clip pos="3" side="tl" part="whole"/>
            </lu>
              <b pos="3"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->

        <out>
          <chunk name="prep-detart-noun3">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
         <b pos="2"/>
             <lu>
             <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>        
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
<call-macro n="assign-osy-dem-nom">
      <with-param pos="2"/>
    </call-macro> 

        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-noun">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
             <b pos="1"/>
             <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
	     <var n="caseDem"/>
             </lu>
             <b pos="2"/>
             <lu>
             <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>      
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>
           <b pos="1"/> 
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
           <b pos="2"/>
                <lu>
             <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>          
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
           <chunk name="prep-detart-noun4">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
           <lu>
             <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: prep det num noun">  
<!-- in these and many other prep rules, the case of the chunk is wrong, as it is set to the case computed for the noun: 
this would have to be changed -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det"/>
 <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="choose_case_and_postposition2"><with-param pos="1"/><with-param pos="4"/></call-macro>
  <call-macro n="NEW-build-noun-lu-2-4-5-sg">
    <with-param pos="4"/>
  </call-macro>  
 <call-macro n="build-num-lu">
    <with-param pos="3"/>
  </call-macro> 
<call-macro n="assign-osy-dem-nom">
      <with-param pos="2"/>
    </call-macro> 


    <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
       <!-- when there is postposition information, it is generated -->

       <choose>
         <when> <!-- Demonstrative, postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-noun">
             <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>   
             </tags>
      <b pos="1"/>		
            <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             <var n="caseDem"/>
             </lu>
            <b pos="2"/>
 		<lu>
               <var n="num_lu"/>
            </lu>
             <b pos="3"/>
             <lu>
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
             </chunk>
           </out>
        </when>
       
        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
           <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-num-noun">
            <tags>
                 <tag><var n="pptag"/></tag>
                 <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
                 <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
                 <tag><var n="possessive"/></tag> 
                 <tag><var n="case"/></tag> <!-- case placeholder -->
            </tags>
            <b pos="1"/>
              <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>
            <lu>
               <var n="num_lu"/>
            </lu>
              <b pos="3"/>
              <lu> 
                <var n="NEW-noun_lu"/>
              </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
           </chunk>
         </out>
       </when>


       <otherwise> <!-- no possessive or demonstrative, postposition -->
        <out>
          <chunk name="prep-detart-num-noun2">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>  
         <b pos="1"/>
         <b pos="2"/>
             <lu>
               <var n="num_lu"/>
            </lu>
            <b pos="3"/>        
            <lu>  
               <var n="NEW-noun_lu"/>
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
       </otherwise>
       
      </choose>
      </when>
      <otherwise> <!-- no postposition -->
        <choose>   

         <when> <!-- Demonstrative, no postposition -->
           <test><equal><clip pos="2" side="sl" part="a_dem"/><lit-tag v="dem"/>              </equal></test>
           <out>
             <chunk name="prep-detdem-num-noun3">
          <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
         </tags>    
         <b pos="1"/>

              <lu>
             <clip pos="2" side="tl" part="lem"/>
             <clip pos="2" side="tl" part="a_det"/>
             <clip pos="2" side="tl" part="a_dem"/>
             <var n="caseDem"/>
             </lu>
          <b pos="2"/>   
          <lu>
               <var n="num_lu"/>
            </lu>
              <b pos="3"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
             </chunk>
           </out>
        </when>

        <when>  <!-- Possessive, with postposition -->
           <test><equal><clip pos="2" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
          <call-macro n="build-possessive-from-possessive-determiner">
              <with-param pos="2"/>
           </call-macro>
           <out>
            <chunk name="prep-detpos-num-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags> 
           <b pos="1"/>
             <lu>
                <clip pos="2" side="tl" part="whole"/>
              </lu>
            <b pos="2"/>          
                <lu>
               <var n="num_lu"/>
            </lu>
             <b pos="3"/>
             <lu>  
                <var n="NEW-noun_lu"/>
             </lu>
           </chunk>
         </out>
       </when>
          

          <otherwise> <!-- No possessive, no demonstrative -->
           <out>
             <chunk name="prep-detart-num-noun">
           <tags>
             <tag><var n="pptag"/></tag>
             <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
             <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
             <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
             <tag><var n="case"/></tag> <!-- case placeholder -->
           </tags>  
           <b pos="1"/>
           <b pos="2"/>
               <lu>
               <var n="num_lu"/>
            </lu>
            <b pos="3"/> 
              <lu>  
                 <var n="NEW-noun_lu"/>
              </lu>
             </chunk>
            </out>
	  </otherwise>
       </choose>
     </otherwise>
    </choose>
  </action>
</rule>


<rule comment="NEW RULE: det noun"> 
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5">
      <with-param pos="2"/>
    </call-macro>
    

<!-- *** -->
<choose>
  <when> <!-- Demonstrative -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>

<or>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</or>
</and>
</test>
<let>
<var n="case"/><lit-tag v="nom"/>
</let>
</when>
<otherwise>
<let>
<var n="case"/><lit v=""/>
</let>
</otherwise>
</choose>
<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>

    <out>
    <chunk name="detdem-nom"  case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
      <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
<var n="case"/>
    </lu>
    <b pos="1"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-nom" case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
    <b pos="1"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <call-macro n="process-preblank-1">
       <with-param pos="1"/>
       <with-param pos="2"/>
    </call-macro>
<!--<call-macro n="change-case">   
<with-param pos="1"/>
  </call-macro> -->
    <out>
    <chunk name="detart-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

<!--    <b pos="1"/> -->
     <var n="preblank-1"/>
     <lu>  
     <get-case-from pos="1">
      <var n="NEW-noun_lu"/>
     </get-case-from>
     </lu>
    </chunk>
    </out>
    <call-macro n="out-blank-if-not-single-space"> 
        <with-param pos="1"/>
    </call-macro>
  </otherwise>
</choose>
  </action>
</rule>

  

<rule comment="NEW RULE: sup-adjec">  
  <pattern>
    <pattern-item n="sup-adjec"/>
  </pattern>
  <action>
    <out>
    <chunk name="sup-adjec">
    <tags>
    <tag><lit-tag v="SupP"/></tag>
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
       <lit v="ең"/>
       <lit-tag v="adv"/>
    </lu>
    <b/>
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <lit-tag v="adj"/>
       <lit-tag v="subst"/>
       <lit-tag v="2"/>
       <lit-tag v="3"/>       
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="NEW RULE: sup-adjec">  
  <pattern>
    <pattern-item n="the"/>
    <pattern-item n="sup-adjec"/>
  </pattern>
  <action>
    <out>
    <chunk name="sup-adjec">
    <tags>
    <tag><lit-tag v="SupP"/></tag>
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <b pos="1"/>
    <lu>
       <lit v="ең"/>
       <lit-tag v="adv"/>
    </lu>
    <b/>
    <lu>
       <clip pos="2" part="lem" side="tl"/>
       <lit-tag v="adj"/>
       <lit-tag v="subst"/>
       <lit-tag v="2"/>
       <lit-tag v="3"/>       
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="NEW RULE: sup-adjec + nom">  
  <pattern>
    <pattern-item n="the"/>
    <pattern-item n="sup-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="3"/>
  </call-macro> 
    <out>
    <chunk name="sup-adjec-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
  <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <b pos="1"/>
    <lu>
       <lit v="ең"/>
       <lit-tag v="adv"/>
    </lu>
    <b/>
    <lu>
       <clip pos="2" part="lem" side="tl"/>
       <lit-tag v="adj"/>
       <lit-tag v="subst"/>
       <lit-tag v="4"/>
       <lit-tag v="5"/>       
     </lu>
    <b pos="2"/>
 <lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: sup-adjec unknown nom">  
  <pattern>
    <pattern-item n="the"/>
    <pattern-item n="sup-adjec"/>
    <pattern-item n="unknown"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="4"/>
  </call-macro> 
    <out>
    <chunk name="sup-adjec-unk-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
  <tag><clip pos="4" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <b pos="1"/>
    <lu>
       <lit v="ең"/>
       <lit-tag v="adv"/>
    </lu>
    <b/>
    <lu>
       <clip pos="2" part="lem" side="tl"/>
       <lit-tag v="adj"/>
       <lit-tag v="subst"/>
       <lit-tag v="4"/>
       <lit-tag v="nom"/>       
     </lu>
    <b pos="2"/>
   <lu>
       <clip pos="3" part="whole" side="tl"/>
     
     </lu>
<b/>
 <lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: noun">  
  <pattern>
    <pattern-item n="nom"/>
  </pattern>
  <action>

  <call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="1"/>
  </call-macro> 
<choose>
<when>
    <test>
<equal><clip pos="1" side="sl" part="a_possessive"/><lit-tag v="px3sp"/></equal>
</test>
<let> <var n="possessive"/><lit-tag v="px3sp"/><!--<clip pos="1" side="sl" part="a_possessive"/>--></let>
</when>
<otherwise>
<let> <var n="possessive"/><lit-tag v="PXD"/></let>
</otherwise>
</choose>
    <out>
    <chunk name="noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="NEW-noun_lu"/>
    </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: unknown">  
  <pattern>
    <pattern-item n="unknown"/>
  </pattern>
  <action>
 
    <out>
    <chunk name="unk-noun">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><lit-tag v="sg"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
       <clip pos="1" side="tl" part="whole"/>
    </lu>
    </chunk>
    </out>
  </action>
</rule>

 
<rule comment="NEW RULE: det unknown noun"> 
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="unknown"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5">
      <with-param pos="3"/>
    </call-macro>

<call-macro n="assign-osy-dem-nom">
      <with-param pos="1"/>
    </call-macro> 


<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>
    <out>
    <chunk name="detdem-adjec-nom1">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

      <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
      <var n="caseDem"/>
    </lu>
     	<b pos="1"/>
   <lu>  
       <clip pos="2" side="tl" part="whole"/>
     </lu>
     <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-adjec-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
    <b pos="1"/>
<lu> 
       <clip pos="2" side="tl" part="whole"/>
     </lu>
<b pos="2"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-adjec-nom">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
 <lu>  
       <clip pos="2" side="tl" part="whole"/>
     </lu>
<b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </otherwise>
</choose>
  </action>
</rule>


  
<rule comment="NEW RULE: det adjec noun"> 
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="NEW-build-noun-lu-2-4-5">
      <with-param pos="3"/>
    </call-macro>
     <call-macro n="build-adjec-lu">
      <with-param pos="2"/>
    </call-macro>

<!-- *** -->
<choose>
  <when> <!-- Demonstrative -->
    <test>
<and>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>

<or>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="This"/></equal>
 <equal><clip pos="1" side="sl" part="lem"/><lit v="this"/></equal>
</or>
</and>
</test>
<let>
<var n="case"/><lit-tag v="nom"/>
</let>
</when>
<otherwise>
<let>
<var n="case"/><lit v=""/>
</let>
</otherwise>
</choose>
<choose>
  <when> <!-- Demonstrative -->
    <test>
<or>
<equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="dem"/></equal>
 <equal><clip pos="1" side="sl" part="a_dem"/><lit-tag v="qnt"/></equal>
</or>
</test>

    <out>
    <chunk name="detdem-adjec-nom" case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>

      <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
<var n="case"/>
    </lu>
     	<b pos="1"/>
   <lu>  
      <var n="adjec_lu"/>
     </lu>
     <b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>
  
  <when> 
    <test><equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="pos"/></equal></test>
    <call-macro n="build-possessive-from-possessive-determiner">
       <with-param pos="1"/>
    </call-macro>
    <out>
    <chunk name="detpos-adjec-nom" case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor computed from possessive determiner -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
    <b pos="1"/>
<lu> 
      <var n="adjec_lu"/>
     </lu>
<b pos="2"/>
    <lu> 
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </when>

  <otherwise>
    <out>
    <chunk name="detart-adjec-nom"  case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <b pos="1"/>
 <lu> 
      <get-case-from pos="1"> 
      <var n="adjec_lu"/>
      </get-case-from>
     </lu>
<b pos="2"/>
    <lu>  
      <var n="NEW-noun_lu"/>
     </lu>
    </chunk>
    </out>
  </otherwise>
</choose>
  </action>
</rule>



<rule comment="NEW RULE: prep language">  <!-- This rule is wrong: not all adjectives
are languages, not all prepositions are used with languages, and the macro needs two arguments and it segfaults
sometimes. MLF 20150520 patches it but it should be removed!! -->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="language"/>

  </pattern>
  <action>
    <!--
        <call-macro n="initialize_number"/>
        <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
    -->
    <call-macro n="choose_case_and_postposition2">
      <with-param pos="1"/>
      <with-param pos="2"/>  <!-- MLF 20150520, patch to (hopefully) avoid segfault -->
    </call-macro>
    <!--
        <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
    --><call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
    
    <choose>
      <when>  
        <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-adjec">
            <tags>
              <tag><var n="pptag"/></tag>
              <tag><lit-tag v="sg"/></tag> <!-- number -->
              <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
              <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
              <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  
              <var n="adjec_lu"/>
            </lu>
            <b/>
            <lu>  <!-- build in situ for the time being -->
              <lit v="тіл"/> 
              <lit-tag v="n"/> 
              <lit-tag v="2"/> <!-- number -->
              <!-- no need to link person -->
              <lit-tag v="4"/> <!-- for possessive, just in case -->
              <lit-tag v="loc"/> <!-- for case -->
            </lu>
                     </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-adjec">
            <tags>
              <tag><var n="pptag"/></tag>
              <tag><lit-tag v="sg"/></tag> <!-- number -->	               <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
              <tag><lit-tag v="px3sp"/></tag> <!-- just in case -->
              <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/> 
            <lu>  
              <var n="adjec_lu"/>
            </lu>
            <b/>
            <lu>  <!-- build in situ for the time being -->
              <lit v="тіл"/> 
              <lit-tag v="n"/> 
              <lit-tag v="2"/> <!-- number -->
              <!-- no need to link person -->
              <lit-tag v="4"/> <!-- for possessive, just in case -->
              <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
 

<rule comment="NEW RULE: prep adjec noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
     </call-macro>
<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
--><call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
            <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
<b pos="1"/> 
 <lu>  
               <var n="adjec_lu"/>
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>



<rule comment="NEW RULE: prep verb-pp noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="verb-pp"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>

     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
     </call-macro>
<let><var n="tense"/><lit-tag v="ger_past"/></let> 
     
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag> 
                <tag><lit-tag v="NXD"/></tag>      
            </tags>
 <b pos="1"/>
             <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <var n="tense"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-verb-pp-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
                <tag><lit-tag v="NXD"/></tag>      
            </tags>
<b pos="1"/> 
  <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <var n="tense"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>




<rule comment="NEW RULE: prep verb-pp"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="verb-pp"/>

  </pattern>
  <action>

     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
     </call-macro>
<let><var n="tense"/><lit-tag v="ger_past"/></let> 
     
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-verb-pp">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag> 
                <tag><lit-tag v="NXD"/></tag>      
            </tags>
 <b pos="1"/>
             <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <var n="tense"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>

          <lit-tag v="4"/>

        </lu>
 <b pos="2"/>
            
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-verb-pp-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
                <tag><lit-tag v="NXD"/></tag>      
            </tags>
<b pos="1"/> 
  <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="6"/>
          <var n="tense"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>

          <lit-tag v="4"/>

        </lu>
 
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


<!-- of bigger garden-->
<rule comment="NEW RULE: prep comp-adjec noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="comp-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
<!--
    <call-macro n="initialize_number"/>
   <call-macro n="assign-tl-plural-if-sl-nbr-plural"><with-param pos="2"/></call-macro> 
-->
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="3"/>
     </call-macro>
<!--
      <call-macro n="build-noun-lu"><with-param pos="2"/></call-macro>
--><call-macro n="build-adjec-lu"><with-param pos="2"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-comp_adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
            <lu>  
               <var n="adjec_lu"/>
             <lit-tag v="comp"/>
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-comp_adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
<b pos="1"/> 
 <lu>  
               <var n="adjec_lu"/>
    <lit-tag v="comp"/>
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="3" side="tl" part="lem"/> 
               <clip pos="3" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>




<rule comment="NEW RULE: prep more adjec noun"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="more"/>
    <pattern-item n="non-sup-adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="4"/>
     </call-macro>
<call-macro n="build-adjec-lu"><with-param pos="3"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
 <b pos="1"/>
            <lu>  
               <var n="adjec_lu"/>
               <lit-tag v="comp"/>
              
            </lu>
 <b pos="2"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          <b pos="3"/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-adjec-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="4" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
<b pos="1"/> 
 <b pos="2"/>
 <lu>  
               <var n="adjec_lu"/>
             <lit-tag v="comp"/>
            </lu>
 <b pos="3"/>
            <lu>  <!-- build in situ for the time being -->
               <clip pos="4" side="tl" part="lem"/> 
               <clip pos="4" side="tl" part="a_nom"/>
               <lit-tag v="2"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>


<!-- rule for "Ol" as "bul"-->
<rule comment="NEW RULE: subj-pron-it">
  <pattern>
    <pattern-item n="it-pron"/>
  </pattern>
  <action>
<!--<call-macro n="change-case">   change case  "I"
<with-param pos="1"/>
  </call-macro> -->
         <let><var n="number"/><lit-tag v="sg"/></let> <!-- choosing singular in the absence of information -->
   
    <call-macro n="initialize_case_to_nominative"/> <!-- will set it to nominative -->
  <out>
   <chunk name="it-pron" case="caseFirstWord">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><var n="number"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag> <!-- Formality 2nd will be set in .t4x -->
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
     
    </tags>
    <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_pron"/>
      <lit-tag v="3"/> <!-- number -->
      <lit-tag v="2"/> <!-- number -->
      <lit-tag v="4"/> <!-- possession -->
      <lit-tag v="5"/> <!-- case -->
    </lu>
  </chunk>
  </out>
 </action>
</rule>



<!--
<rule comment="NEW RULE: pron-dem">
  <pattern>

<pattern-item n="pron-neg"/>
  </pattern>
    <action>
<call-macro n="build-pron-lu"><with-param pos="1"/></call-macro> 
<choose>

  <when>
        <test>
          <in caseless="yes">
      <clip pos="1" side="sl" part="lem"/>
      <list n="negative_pron"/>
   </in>
        </test>
    <out>
    <chunk name="pron">
    <tags>
    <tag><lit-tag v="NP_pron_neg"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
    <tag><lit-tag v="p3"/></tag>
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
      <var n="pron_lu"/>
     </lu>
    </chunk>

</out>
</when>
<otherwise>
 <out>
    <chunk name="pron">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
    <tag><lit-tag v="p3"/></tag>
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
      <var n="pron_lu"/>
     </lu>
    </chunk>
    </out>
</otherwise>
</choose>
  </action>
</rule>
-->

<rule comment="RULE: obj-pron">
  <pattern>
    <pattern-item n="obj-pron"/>
  </pattern>
  <action>
<call-macro n="build-pron-lu"><with-param pos="1"/></call-macro> 
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sp"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sg"/></let> <!-- choosing singular in the absence of information -->
    </when>
       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="tl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
<choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pron"/>
         <lit-tag v="prn.pos"/>
       </equal>
      </test>
       <let><var n="pos"/><lit-tag v="gen.subst"/></let> <!-- choosing for менікі -->
    </when>
       <otherwise>
          <let><var n="pos"/><lit v=""/></let> 
       </otherwise>
  </choose>

  <choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_pers"/>
          <lit-tag v="p2"/>
       </equal>
     </test>
     <let><var n="formality"/><lit-tag v="frm"/></let>
     <let><var n="case"/><lit-tag v="4"/></let>
    </when>
     <otherwise>
     <let><var n="formality"/><lit v=""/></let>
     </otherwise>
  </choose>

<choose>
    <when>
     <test>  
<or>
       <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="both"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="most"/>
       </equal>
</or>
     </test>
     <let><var n="number"/><lit v=""/></let>
    </when>
      </choose>


<choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_dem"/>
          <lit-tag v="dem"/>
       </equal>
     </test>
     <let><var n="subj-pron_lu"/><lit-tag v="p3"/></let>
    </when>
     <otherwise>
     <let><var n="subj-pron_lu"/><clip pos="1" side="sl" part="a_pers"/></let>
     </otherwise>
  </choose>
<choose>
    <when>

     <test> 
<or> 
       <equal>
          <clip pos="1" side="sl" part="a_obj_pr"/>
          <lit-tag v="ind"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="a_obj_pr"/>
          <lit-tag v="itg"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="a_obj_pr"/>
          <lit-tag v="qnt"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="a_obj_pr"/>
          <lit-tag v="neg"/>
       </equal>
</or> 
     </test>
     <let><var n="case"/><lit-tag v="nom"/></let>
     <let><var n="number"/><clip pos="1" side="sl" part="a_nbr"/></let>
     <let><var n="subj-pron_lu"/><lit-tag v="p3"/></let>
    </when>
     <otherwise>
     <let><var n="case"/><lit-tag v="4"/></let>
     </otherwise>
  </choose>
 <choose>
    <when>
     <test> 
<or> 
       <equal>
          <clip pos="1" side="sl" part="a_pers"/>
          <lit-tag v="p1"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="a_pers"/>
          <lit-tag v="p2"/>
       </equal>
</or>
     </test>
    
     <let><var n="case"/><lit-tag v="nom"/></let>
    </when>
<otherwise>
     <let><var n="case"/><lit-tag v="4"/></let>
</otherwise>
  
  </choose>


<choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_possessive"/>
          <lit-tag v="px3sp"/>
       </equal>
     </test>
     <let><var n="possessive"/><lit-tag v="px3sp"/></let>
    </when>
     <otherwise>
     <let><var n="possessive"/><lit-tag v="PXD"/></let>
     </otherwise>
  </choose>

<choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_pron"/>
          <lit-tag v="prn.ref"/>
       </equal>
     </test>
     <let><var n="possessive"/><clip pos="1" side="sl" part="a_possessive"/></let>
     <let><var n="number"/><lit-tag v="ND"/></let>
           </when>
   
  </choose>

<choose>
    <when>
     <test>  

       <equal>
          <clip pos="1" side="sl" part="a_pron"/>
          <lit-tag v="prn.pos"/>
       </equal>

     </test>
     
     <let><var n="number"/><clip pos="1" side="tl" part="a_nbr"/></let>
           </when>
    
  </choose>
<choose>
    <when>
     <test>  

       <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="whatever"/>
       </equal>

     </test>
     
     <let><var n="case"/><clip pos="1" side="tl" part="a_cas"/></let>
 <let><var n="bolmasyn"/> <!-- ready for lu -->
                      <concat>

                        <lit v="бол"/>
			<lit-tag v="vaux"/>
			<lit-tag v="neg"/>
			<lit-tag v="opt"/>
			<lit-tag v="p3"/>
                       	<lit-tag v="sg"/>
                      </concat>
             </let>
           </when>
       <otherwise>
     <let><var n="bolmasyn"/><lit v=""/></let>
     </otherwise>
  </choose>
<!--<choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_pron"/>
          <lit-tag v="prn.ind"/>
       </equal>
     </test>
     <let><var n="possessive"/><lit-tag v="px3sp"/></let>
    </when>
     <otherwise>
     <let><var n="possessive"/><lit-tag v="PXD"/></let>
     </otherwise>
  </choose>-->
<choose>
    <when>
      <test>
<and>
       <equal>
         <clip pos="1" side="sl" part="a_pron"/>
         <lit-tag v="prn.obj"/>
       </equal>
<or>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p1"/>
       </equal>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
       </equal>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
</or>
<or>
<equal>
         <clip pos="1" side="sl" part="a_gender"/>
         <lit-tag v="m"/>
       </equal>
<equal>
         <clip pos="1" side="sl" part="a_gender"/>
         <lit-tag v="mf"/>
       </equal>
<equal>
         <clip pos="1" side="sl" part="a_gender"/>
         <lit-tag v="f"/>
       </equal>
</or>
</and>
      </test>
       <let>    <var n="case"/><lit-tag v="dat"/></let> 
    </when>
       
  </choose>


<choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="many"/>
       </equal>

     </test>
     <let><var n="possessive"/> <clip pos="1" side="tl" part="a_possessive"/></let>
     <let><var n="case"/> <lit-tag v="nom"/></let>
     <let><var n="number"/>          <lit v=""/></let>
    </when>
      </choose>
<choose>

  <when>
        <test>
<or>
          <in caseless="yes">
      <clip pos="1" side="sl" part="lem"/>
      <list n="negative_pron"/>
   </in>
 <equal>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="ешнәрсе"/>
       </equal>
</or>
        </test>
    <out>
    <chunk name="pron">
    <tags>
    <tag><lit-tag v="NP_pron_neg"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
    <tag><lit-tag v="p3"/></tag>
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
      <var n="pron_lu"/>
     </lu>
    </chunk>

</out>
</when>
<otherwise>
<choose>
<when>
     <test>  
<or>
    <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="none"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="None"/>
       </equal>

</or>
     </test>
     <let><var n="case"/> <lit-tag v="nom"/></let>
     <let><var n="number"/><lit v=""/></let>
     <let><var n="possessive"/><lit v=""/></let>
    </when>

<when>
     <test>  
<or>
    <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="one"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="One"/>
       </equal>

</or>
     </test>
     <let><var n="case"/> <lit-tag v="nom"/></let>
     <let><var n="number"/><lit v=""/></let>
     <let><var n="possessive"/><lit v=""/></let>
    </when>

    <when>
     <test>  
<not>

       <equal>
          <clip pos="1" side="sl" part="a_possessive"/>
          <lit v=""/>
       </equal>
</not>

     </test>
     <let><var n="possessive"/> <clip pos="1" side="tl" part="a_possessive"/></let>
     <let><var n="case"/> <lit-tag v="nom"/></let>
     <let><var n="number"/><lit v=""/></let>
    </when>
    <when>
     <test>  
<or>
       <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="that"/>
       </equal>
<equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="each"/>
       </equal>
<equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="Each"/>
       </equal>

</or>
     </test>
     <let><var n="possessive"/><lit v=""/></let>
     <let><var n="case"/> <lit-tag v="nom"/></let>
     <let><var n="number"/><lit v=""/></let>
    </when>

<otherwise>
     <let><var n="possessive"/><lit v=""/></let>
</otherwise>
      </choose>

   <out>
   <chunk name="obj-pron" case="caseFirstWord">
   <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
    <tag><var n="subj-pron_lu"/></tag> <!-- Formality 2nd will be set in .t4x -->

    <tag><lit-tag v="CD"/></tag>
     
    </tags>
    <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_pron"/>
      <var n="possessive"/>
      <clip pos="1" side="tl" part="a_pers"/>
      <var n="number"/>
      <var n="pos"/> 
      <var n="case"/> <!-- case --> 
    </lu>
<b/>
    <lu>
 	<var n="bolmasyn"/> 
     </lu>


  </chunk>
  </out>
</otherwise>
</choose>
 </action>
</rule>




 

<rule comment="RULE: which - ol">
  <pattern>
    <pattern-item n="det-which"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sp"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sg"/></let> <!-- choosing singular in the absence of information -->
    </when>
       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="tl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_pers"/>
          <lit-tag v="p2"/>
       </equal>
     </test>
     <let><var n="formality"/><lit-tag v="frm"/></let>
    </when>
     <otherwise>
     <let><var n="formality"/><lit v=""/></let>
     </otherwise>
  </choose>
  <call-macro n="initialize_case_to_nominative"/> <!-- will set it to nominative -->
   <out>
   <chunk name="which">
   <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><var n="number"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag> <!-- Formality 2nd will be set in .t4x -->
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="nom"/></tag>
     
    </tags>
    <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_kaz_perspron"/>
      <clip pos="1" side="tl" part="a_pers"/>
      <lit-tag v="2"/> <!-- number -->
      <lit-tag v="4"/> <!-- possession -->
      <lit-tag v="5"/> <!-- case --> 
    </lu>
  </chunk>
  </out>
 </action>
</rule>

<rule comment="RULE: prep - which - ol">
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="det-which"/>
  </pattern>
  <action>
  <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
     </call-macro>
 <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-which">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
                   <lu>
     	  <clip pos="2" side="tl" part="lem"/>
    	  <clip pos="2" side="tl" part="a_kaz_perspron"/>
     	  <clip pos="2" side="tl" part="a_pers"/>
    	  <lit-tag v="sg"/> <!-- number -->
    	  <lit-tag v="4"/> <!-- possession -->
     	  <lit-tag v="5"/> <!-- case --> 
    		</lu>
            
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
        <out>
          <chunk name="prep-det-which">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="2" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
             <lu>
     	  <clip pos="2" side="tl" part="lem"/>
    	  <clip pos="2" side="tl" part="a_kaz_perspron"/>
     	  <clip pos="2" side="tl" part="a_pers"/>
    	  <lit-tag v="sg"/> <!-- number -->
    	  <lit-tag v="4"/> <!-- possession -->
     	  <lit-tag v="5"/> <!-- case --> 
    		</lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
 </action>
</rule>
 






<rule comment="NEW RULE: subj-pron">
  <pattern>
    <pattern-item n="subj-pron"/>
  </pattern>
  <action>
 
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sp"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sg"/></let> <!-- choosing singular in the absence of information -->
    </when>
       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="tl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
     <test>  
       <equal>
          <clip pos="1" side="sl" part="a_pers"/>
          <lit-tag v="p2"/>
       </equal>
     </test>
     <let><var n="formality"/><lit-tag v="frm"/></let>
    </when>
     <otherwise>
     <let><var n="formality"/><lit v="FD"/></let>
     </otherwise>
  </choose>
  <call-macro n="initialize_case_to_nominative"/> <!-- will set it to nominative -->
  <out>
   <chunk name="subj-pron">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><var n="number"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag> <!-- Formality 2nd will be set in .t4x -->
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
     
    </tags>
    <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_kaz_perspron"/>
      <clip pos="1" side="tl" part="a_pers"/>
      <lit-tag v="2"/> <!-- number -->
      <lit-tag v="4"/> <!-- possession -->
      <lit-tag v="5"/> <!-- case -->
    </lu>
  </chunk>
  </out>
 </action>
</rule>


<rule comment="NEW RULE: pron-both">
  <pattern>
<pattern-item n="both"/>
  </pattern>
    <action>
<call-macro n="build-pron-lu"><with-param pos="1"/></call-macro> 

 <out>
    <chunk name="pron-both">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
    <tag><lit-tag v="p3"/></tag>
    <tag><lit-tag v="px3sp"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
     <clip pos="1" side="tl" part="lem"/> 
<lit-tag v="prn.qnt"/>
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive -->
               <lit-tag v="5"/> <!-- for case -->
     </lu>
    </chunk>
    </out>

  </action>
</rule>

<rule comment="NEW RULE: have + adv + been + verb-pp"> 
  <pattern>
    <pattern-item n="vaux-have"/>
 <pattern-item n="adv"/>
    <pattern-item n="been"/> <!--past participle -->
 <pattern-item n="verb-pp"/>
    </pattern>
  <action>    
   <call-macro n="default-nbr-pers"/>
    <choose>

      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let> 
    <out>
      <chunk name="have-adv-be-pp">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="past"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
  <lu>
      <clip pos="2" side="tl" part="whole"/>
	        </lu>
      <b pos="2"/>
       <lu>
      <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
	  <lit-tag v="pass"/>
          <lit-tag v="prc_perf"/>
        </lu>
        <b/>
        <lu>
         <lit v="бол"/>
 	<lit-tag v="vaux"/>
          <lit-tag v="4"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
	
        </lu>
      </chunk>
        </out>
      </when>

      <when>
         <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let> 
    <out>
      <chunk name="had-adv-be-pp">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag>
        <tag><lit-tag v="past"/></tag>  
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
      <b pos="1"/>
       <lu>
      <clip pos="2" side="tl" part="whole"/>
	        </lu>
      <b pos="2"/>
        <lu>
          <clip pos="4" side="tl" part="lem"/>
	  <clip pos="4" side="tl" part="a_kaz_verb"/>
          <lit-tag v="pass"/>
          <lit-tag v="4"/>
          <lit-tag v="3"/>	
          <lit-tag v="2"/>
        </lu>
      </chunk>
        </out>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
   <out><b pos="1"/>  <lu>
      <clip pos="2" side="tl" part="lem"/>
	        </lu>
      <b pos="2"/></out>
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="3"/> 
     </call-macro>
      </otherwise> 
    </choose>
  </action>
</rule>








<!--
<rule comment="NEW RULE: pron-dem">
  <pattern>
    <pattern-item n="pron-dem"/>
  </pattern>
    <action>

 <call-macro n="build-pron-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="pron">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
    <tag><lit-tag v="p3"/></tag>
    <tag><lit-tag v="PXD"/></tag>
    <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
      <var n="pron_lu"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>
-->


<rule comment="RULE: Quest">
      <pattern>
        <pattern-item n="quest"/>
      </pattern>
      <action>
        <let> <!-- approx: assign 3rd person singular for verbs -->
          <var n="verb-pers"/>
          <lit-tag v="p3"/>
        </let>
        <let>
          <var n="verb-nbr"/>
          <lit-tag v="sg"/>
        </let>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Q_mark"/></tag>
             
            </tags>
<!--
<lu>
            <lit v="ма"/>
            <lit-tag  v="qst"/>
</lu>-->
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

 
    <rule comment="RULE: QUOTE">
      <pattern>
        <pattern-item n="quote"/>
      </pattern>
      <action>      
        <out>
          <chunk name="quote" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="QUOTE"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>




<rule comment="RULE: Coma">
      <pattern>
        <pattern-item n="coma"/>
      </pattern>
      <action>
        <out>
          <chunk name="coma" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="CM"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>




<rule comment="NEW RULE: the adjec+comp">   <!-- bigger, for adj comp -->
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="comp-adjec"/>
  </pattern>
  <action>
    <out>
    <chunk name="comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
 <tag><lit-tag v="CD"/></tag>
    </tags>
   <b pos="1"/> 
    <lu>
       <clip pos="2" part="lem" side="tl"/>
       <lit-tag v="adj"/>
       <lit-tag v="comp"/>
<lit-tag v="2"/>
         
     </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: more adjec">   <!-- more beautiful, for sint adj comp -->
  <pattern>
    <pattern-item n="more"/>
    <pattern-item n="non-sup-adjec"/>
  </pattern>
  <action>

<choose>
    <when>
      <test>
       <equal>
         <clip pos="2" side="sl" part="a_subst"/>
         <lit-tag v="subst"/>
       </equal>
      </test>
       <let><var n="comp_lu"/><lit v=""/></let> 
       <let><var n="case"/><lit v=""/></let> 
    </when>
       <otherwise>
         <let>
           <var n="comp_lu"/>       <lit-tag v="comp"/>

         </let>
       <let><var n="case"/><lit-tag v="2"/></let> 
       </otherwise>
  </choose>

    <out>
    <chunk name="more-comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
 <tag><lit-tag v="CD"/></tag>
    </tags>
    <b pos="1"/>
    <lu>
       <clip pos="2" part="lem" side="tl"/>
       <lit-tag v="adj"/>
      <var n="comp_lu"/>
      <var n="case"/>
     </lu>
    </chunk>
    </out>
  </action>      
</rule>

<rule comment="NEW RULE: more adjec">   <!-- more beautiful, for sint adj comp -->
  <pattern>
   
    <pattern-item n="subst-adjec"/>
  </pattern>
  <action>
<choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_subst"/>
         <lit-tag v="subst"/>
       </equal>
      </test>
       <let><var n="comp_lu"/><lit v=""/></let> 
       <let><var n="case"/><lit v=""/></let> 
    </when>
       <otherwise>
         <let>
           <var n="comp_lu"/>       <lit-tag v="comp"/>

         </let>
       <let><var n="case"/><lit-tag v="2"/></let> 
 <let>
           <var n="case"/>       <lit-tag v="nom"/>
         </let>
       </otherwise>
  </choose>
<choose>
    <when>
      <test>
<or>
       <equal>
         <clip pos="1" side="sl" part="lem"/>
         <lit v="aware"/>
       </equal>
 <equal>
         <clip pos="1" side="tl" part="lem"/>
         <lit v="риза"/>
       </equal>
</or>
      </test>
       <let><var n="comp_lu"/><lit v=""/></let> 
<let>
           <var n="case"/>       <lit v=""/>
         </let>
    </when>
     
  </choose>

    <out>
    <chunk name="comp-subst-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
 <tag> <var n="case"/></tag>
    </tags>
       <lu>
       <clip pos="1" part="lem" side="tl"/>
       <lit-tag v="adj"/>
 <var n="comp_lu"/>
         <lit-tag v="2"/> 
     </lu>
    </chunk>
    </out>
  </action>      
</rule>

<rule comment="NEW RULE:the more adjec">   <!-- the more beautiful, for sint adj comp -->
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="more"/>
    <pattern-item n="non-sup-adjec"/>
  </pattern>
  <action>
    <out>
    <chunk name="comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
    <b pos="1"/>
 <b pos="2"/>
    <lu>
       <clip pos="3" part="lem" side="tl"/>
       <lit-tag v="adj"/>
       <lit-tag v="comp"/>
         
     </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: adjec+comp">   <!-- bigger, for adj comp -->
  <pattern>
    <pattern-item n="comp-adjec"/>
  </pattern>
  <action>
<choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_subst"/>
         <lit-tag v="subst"/>
       </equal>
      </test>
       <let><var n="comp_lu"/><lit v=""/></let> 
    </when>
       <otherwise>
         <let>
           <var n="comp_lu"/>       <lit-tag v="comp"/>
         </let>
       </otherwise>
  </choose>
    <out>
    <chunk name="comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
   
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <lit-tag v="adj"/>
	<var n="comp_lu"/>
         
     </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: adjec">  
  <pattern>
    <pattern-item n="non-sup-adjec"/>
  </pattern>
  <action>
   <call-macro n="build-adjec-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
 <tag><lit-tag v="subst"/></tag>
 <tag><lit-tag v="CD"/></tag>
    </tags>
    <lu>
      <var n="adjec_lu"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>


<!--
<rule comment="NEW RULE:adv adv">  
  <pattern>
 <pattern-item n="adv"/>
    <pattern-item n="adv-itg"/>
  </pattern>
  <action>
    <out>
    <chunk name="adv-when">
    <tags>
    <tag><lit-tag v="AdvP-when"/></tag>
    </tags>
	<b pos="1"/>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
     </lu>
	<b/>

    </chunk>
    </out>
  </action>
</rule>-->



<rule comment="NEW RULE:adv adv">  
  <pattern>
 <pattern-item n="preadv"/>
    <pattern-item n="adv"/>
  </pattern>
  <action>
    <out>
    <chunk name="preadv-adv">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
	<b pos="1"/>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
     </lu>
	<b/>

    <lu>
      <clip pos="2" side="tl" part="whole"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>



<rule comment="NEW RULE: which house what house"> <!-- + noun-->  
  <pattern>
    <pattern-item n="adv-itg"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
 <call-macro n="change-case"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="adv-itg+nom">
    <tags>
    <tag><lit-tag v="QAdvP"/></tag>
    </tags>
 <b pos="1"/>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
     </lu>
<b/>
  <lu>
               <clip pos="2" side="tl" part="lem"/> 
               <clip pos="2" side="tl" part="a_nom"/>
               <lit-tag v="acc"/>
 </lu>
    </chunk>
    </out>
  </action>
</rule>



<rule comment="NEW RULE: which house what house"> <!-- what-time-is-it-->  
  <pattern>
    <pattern-item n="what-adv-itg"/>
    <pattern-item n="time"/>
    <pattern-item n="be-vblex"/>
    <pattern-item n="obj-pron"/>
  </pattern>
  <action>
 <call-macro n="change-case"><with-param pos="1"/></call-macro> 
 <call-macro n="NEW-build-noun-lu-2-4-5">
      <with-param pos="2"/>
    </call-macro>
    <out>
    <chunk name="what-time-is-it">
    <tags>
    <tag><lit-tag v="PP"/></tag>
  <tag><clip pos="2" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
 <b pos="1"/>

<lu>  
      <var n="NEW-noun_lu"/>
     </lu>
 <b pos="2"/>

<lu>
   <lit v="қанша"/>
        <lit-tag v="det"/>
        <lit-tag v="qnt"/>


     </lu>    
    </chunk>
    </out>
  </action>
</rule>




<rule comment="NEW RULE:time for play"> <!-- time for play-->  
  <pattern>

    <pattern-item n="time"/>
    <pattern-item n="prep"/>
    <pattern-item n="approx-inf-verb"/>
  </pattern>
  <action>
 <call-macro n="change-case"><with-param pos="1"/></call-macro> 
 <call-macro n="NEW-build-noun-lu-2-4-5">
      <with-param pos="1"/>
    </call-macro>
     <let><var n="possessive"/><lit-tag v="px3sp"/></let>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

  <out>
    <chunk name="time-for-play">
    <tags>
    <tag><lit-tag v="NP"/></tag>
  <tag><clip pos="1" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
 <b pos="1"/>

<lu>
    <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>    
 <b pos="2"/>

<lu>  
      <var n="NEW-noun_lu"/>
     </lu>

    </chunk>
    </out>

</when>
<otherwise>
  <out>
    <chunk name="time-for-play">
    <tags>
    <tag><lit-tag v="NP"/></tag>
  <tag><clip pos="1" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
 <b pos="1"/>

<lu>
   <clip pos="3" side="tl" part="lem"/>
   <clip pos="3" side="tl" part="a_kaz_verb"/>
<lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>    
 <b pos="2"/>

<lu>  
      <var n="NEW-noun_lu"/>
     </lu>

    </chunk>
    </out>


</otherwise>
</choose>

    </action>
</rule>




<rule comment="NEW RULE: adv-itg"> <!-- when/where/why-->  
  <pattern>
    <pattern-item n="adv-itg"/>
  </pattern>
  <action>
 <call-macro n="change-case"><with-param pos="1"/></call-macro> 
<choose>
<when>
<test>

<and>
 <equal>
          <clip pos="1" side="sl" part="lem"/>
          <lit v="how"/>
       </equal>
 <equal>
          <clip pos="1" side="sl" part="a_obj_pr"/>
          <lit-tag v="itg"/>
       </equal>
</and>
</test>
     <let><var n="case"/><lit-tag v="nom"/></let>
</when>
<otherwise>
     <let><var n="case"/><lit v=""/></let>
</otherwise>
</choose>
    <out>
    <chunk name="adv-itg">
    <tags>
    <tag><lit-tag v="QAdvP"/></tag>
    </tags>
    <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det_pron_adv"/>

   <lit-tag v="itg"/>
      <var n="case"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>




<rule comment="NEW RULE: cnjadv">  
  <pattern>
    <pattern-item n="if-cnjadv"/>
  </pattern>
  <action>
  <call-macro n="build-cnjadv-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="if">
    <tags>
  <tag><lit-tag v="IF"/></tag>
    <tag><lit-tag v="cnjsub"/></tag>
    </tags>
    <lu>
               <var n="cnjadv_lu"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>



<rule comment="NEW RULE: adv">  
  <pattern>
    <pattern-item n="adv"/>
  </pattern>
  <action>
    <out>
    <chunk name="adv">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="NEW RULE: cnjadv">  
  <pattern>
    <pattern-item n="when-cnjadv"/>
  </pattern>
  <action>
  <call-macro n="build-cnjadv-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="if">
    <tags>
  <tag><lit-tag v="IF"/></tag>
    </tags>
    
<b/>
     
    </chunk>
    </out>
  </action>
</rule>





<rule comment="NEW RULE: preadv">  
  <pattern>
    <pattern-item n="preadv"/>
  </pattern>
  <action>
    <out>
    <chunk name="preadv">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>




<rule comment="NEW RULE: prep num-years noun"> <!-- after 1920 - 1920 jykdan kein--> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num-year"/>
  </pattern>
  <action>
     <call-macro n="choose_case_and_postposition2">
        <with-param pos="1"/>
        <with-param pos="2"/>
      </call-macro>
<call-macro n="build-num-lu"><with-param pos="2"/></call-macro> 
 
     <choose>
      <when>  
       <test><equal><var n="genpp"/><lit v="yes"/></equal></test> 
        <out> <!-- with postposition -->
          <chunk name="prep-num-year-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag><clip pos="3" part="a_nbr" side="sl"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><lit-tag v="PXD"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
            <lu>  
               <var n="num_lu"/>
            </lu>
 <b/>
            <lu>  <!-- build in situ for the time being -->
     
                 <lit v="жыл"/>
                 <lit-tag v="n"/>
                    <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
            <b/>
            <lu>  
               <var n="postposition_lu"/>
            </lu>
          </chunk>
        </out>
      </when>
      <otherwise> <!-- without postposition -->
<choose>
    <when>
     <test>  
       <equal>
         <var n="case"/>
          <lit-tag v="loc"/>
       </equal>
     </test>
     <let><var n="case"/><lit-tag v="nom"/></let>
     <let><var n="possessive"/><lit-tag v="px3sp"/></let>
    </when>
<otherwise>
     <let><var n="possessive"/><lit-tag v="PXD"/></let>
</otherwise>
</choose>
        <out>
          <chunk name="prep-num-year-nom">
            <tags>
                <tag><var n="pptag"/></tag>
                <tag> <lit-tag v="sg"/></tag> <!-- number -->
                <tag><lit-tag v="p3"/></tag> <!-- person is 3 for nouns -->
                <tag><var n="possessive"/></tag> <!-- just in case -->
                <tag><var n="case"/></tag>       
            </tags>
            <b pos="1"/>
 <lu>  
               <var n="num_lu"/>
            </lu>
 <b/>
            <lu>  <!-- build in situ for the time being -->
                   <lit v="жыл"/>
                 <lit-tag v="n"/>
               <lit-tag v="sg"/> <!-- number -->
               <!-- no need to link person -->
               <lit-tag v="4"/> <!-- for possessive, just in case -->
               <lit-tag v="5"/> <!-- for case -->
            </lu>
          </chunk>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>

<rule comment="NEW RULE: num-year">  
  <pattern>
    <pattern-item n="num-year"/>
  </pattern>
  <action>
   <call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num-years">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
<b/>
<lu>
     <lit v="жыл"/>
     <lit-tag v="n"/>
       <lit-tag v="px3sp"/> 
      <lit-tag v="nom"/>
 </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="NEW RULE: Rel which">  
  <pattern>
    <pattern-item n="rel"/>
  </pattern>
  <action>
      <let> <clip pos="1" side="tl" part="a_cas"/><lit-tag v="nom"/></let> 
    <out>
    <chunk name="rel">
    <tags>
  <tag><lit-tag v="Rel"/></tag>
    </tags>
    <lu>
 <clip pos="1" side="tl" part="whole"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="NEW RULE: num">  
  <pattern>
    <pattern-item n="num"/>
  </pattern>
  <action>
   <call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
    </tags>
    <lu>
      <var n="num_lu"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>




<rule comment="NEW RULE: cnjcoo">  
  <pattern>
    <pattern-item n="cnjcoo"/>
  </pattern>
  <action>
   <call-macro n="build-cnjcoo-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="than">
    <tags>
  <tag><lit-tag v="THAN"/></tag>
    <tag><lit-tag v="post"/></tag>
    </tags>
    <lu>
      <var n="cnjcoo_lu"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>



<rule comment="NEW RULE:adv adj">    <!--very large-->
  <pattern>
 <pattern-item n="preadv"/>
    <pattern-item n="adjec"/>
  </pattern>
  <action>
    <out>
    <chunk name="adv-adj">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
    </tags>
	<b pos="1"/>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
     </lu>
	<b/>
    <lu>
      <clip pos="2" side="tl" part="lem"/>
        <lit-tag v="adj"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE:det adj">    <!--less successful-->
  <pattern>
 <pattern-item n="det"/>
    <pattern-item n="adjec"/>
  </pattern>
  <action>
<choose>
    <when>
     <test>
<and>
      
 <equal>
      <clip pos="1" side="tl" part="a_dem"/>
          <lit-tag v="dem"/>
       </equal>
<equal>
      <clip pos="1" side="tl" part="a_det"/>
          <lit-tag v="prn"/>
       </equal>
</and>
     </test>
    <let><var n="case"/><lit-tag v="nom"/> </let>
</when>
</choose>
<choose>
    <when>
     <test>
<equal>
      <clip pos="2" side="tl" part="a_subst"/>
          <lit-tag v="subst"/>
       </equal>
     </test>
    <let><var n="caseDem"/><lit-tag v="nom"/> </let>
</when>
</choose>
<choose>
    <when>
     <test>  
       <equal>
      <clip pos="1" side="tl" part="a_pron"/>
          <lit-tag v="prn.pers"/>
       </equal>
     </test>
      <out>
    <chunk name="pron-adj">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
 <tag><lit-tag v="subst"/></tag>
 <tag><lit-tag v="PXD"/></tag>
 <tag><lit-tag v="CD"/></tag>
    </tags>
	<b pos="1"/>
     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_pron"/>
      <clip pos="1" side="tl" part="a_pers"/>
      <clip pos="1" side="tl" part="a_nbr"/>
      <clip pos="1" side="tl" part="a_cas"/>
    </lu>
	<b/>
    <lu>
      <clip pos="2" side="tl" part="lem"/>
        <lit-tag v="adj"/>
        <lit-tag v="2"/>
        <lit-tag v="3"/>
        <lit-tag v="4"/>
     </lu>
    </chunk>
    </out>
</when>
<when>
     <test>
<or>
<equal>
      <clip pos="1" side="sl" part="a_detdef"/>
          <lit-tag v="det.def"/>
       </equal>
<equal>
      <clip pos="1" side="sl" part="a_detdef"/>
          <lit-tag v="det.ind"/>
       </equal>

</or>
     </test>
    <out>
    <chunk name="the-adj">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
 <tag><lit-tag v="subst"/></tag>
 <tag><lit-tag v="PXD"/></tag>
 <tag><var n="case"/></tag>
    </tags>
	<b pos="1"/>
     <lu>
      <clip pos="2" side="tl" part="lem"/>
        <lit-tag v="adj"/>
        <clip pos="2" side="tl" part="a_subst"/>
        <lit-tag v="3"/>
        <lit-tag v="4"/>
     </lu>
    </chunk>
    </out>

</when>
<otherwise>
    <out>
    <chunk name="det-adj">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
 <tag><lit-tag v="subst"/></tag>
 <tag><lit-tag v="PXD"/></tag>
 <tag><var n="caseDem"/></tag>
    </tags>
	<b pos="1"/>
     <lu>
      <clip pos="1" side="tl" part="lem"/>
      <clip pos="1" side="tl" part="a_det"/>
      <clip pos="1" side="tl" part="a_dem"/>
      <var n="case"/>
    </lu>
	<b/>
    <lu>
      <clip pos="2" side="tl" part="lem"/>
        <lit-tag v="adj"/>
      <clip pos="2" side="tl" part="a_subst"/>
        <lit-tag v="3"/>
        <lit-tag v="4"/>
     </lu>
    </chunk>
    </out>
</otherwise>
</choose>

  </action>
</rule>

<rule comment="NEW RULE:adv adj">    <!--very large-->
  <pattern>
 <pattern-item n="det"/>
 <pattern-item n="preadv"/>
    <pattern-item n="adjec"/>
  </pattern>
  <action>
    <out>
    <chunk name="det-adv-adj">
    <tags>
    <tag><lit-tag v="AdjP"/></tag>
    </tags>
	<b pos="1"/>
    <lu>
      <clip pos="2" side="tl" part="whole"/>
     </lu>
	<b/>
    <lu>
      <clip pos="3" side="tl" part="lem"/>
        <lit-tag v="adj"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>




<rule comment="NEW RULE: be"> 
  <pattern>
    <pattern-item n="be-vblex"/>
  </pattern>
  <action>
<choose>
  <when>
        <test>

          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="inf"/>
          </equal>

        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let> 
</when>
  <when>
        <test>

          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pp"/>
          </equal>

        </test>
        <let><var n="tense"/><lit-tag v="past"/></let> 
</when>
  <when>
        <test>

          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="ger"/>
          </equal>

        </test>
        <let><var n="tense"/><lit-tag v="ger"/></let> 
</when>
<otherwise>
     <let><var n="tense"/><lit-tag v="aor"/></let>
</otherwise>
</choose>
     <out>
      <chunk name="be-verb">
      <tags>
        <tag><lit-tag v="VP"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><var n="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag><!-- negative -->
        <tag><lit-tag v="CD"/></tag> 
      </tags>
        <lu>

          <lit v="бол"/>
          <lit-tag v="vaux"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>
          <lit-tag v="5"/>
          <lit-tag v="3"/>
          <lit-tag v="2"/>
          <lit-tag v="7"/>
        </lu>
      </chunk>
        </out>
 
  </action>
</rule>



<!-- vbser solve-->
<rule comment="NEW RULE: infinitive - verb"> 
  <pattern>
    <pattern-item n="approx-inf-verb"/>
  </pattern>
  <action>
     <let><var n="tense"/><lit-tag v="aor"/></let> 
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="1"/> 
     </call-macro>
 
  </action>
</rule>


<rule comment="NEW RULE: vbser- verb"> 
  <pattern>
    <pattern-item n="verb-pp"/>
  </pattern>
  <action>
     <let><var n="tense"/><lit-tag v="past"/></let> 
      <call-macro n="NEW-gen-simple-verb">
         <with-param pos="1"/> 
     </call-macro>
 
  </action>
</rule>




<rule comment="NEW RULE: pseudo+to+inf"> <!--to play -->
  <pattern>
    <pattern-item n="to"/>
    <pattern-item n="inf-verb"/> 
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
  <chunk name="NP_to_be">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
<b pos="1"/>            
        <lu>
         <lit v="бол"/>
         <lit-tag v="v"/>
         <lit-tag v="iv"/>
         <lit-tag v="ger"/>
         <lit-tag v="5"/>
         <lit-tag v="6"/>
        </lu>


    
      </chunk>
</out>
</when>
<otherwise>
<out>
  <chunk name="NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
<b pos="1"/>            
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
          <lit-tag v="ger"/>
         <lit-tag v="5"/>
         <lit-tag v="6"/>
        </lu>


    
      </chunk>
</out></otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: adv-itg to inf-verb"> <!--to play -->
  <pattern>
    <pattern-item n="adv-itg"/>
    <pattern-item n="to"/>
    <pattern-item n="inf-verb"/> 
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

<out>
  <chunk name="what-NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
<b pos ="1"/>
<lu>
          <clip pos="1" side="tl" part="whole"/>
	
        </lu>
<b pos ="2"/>
            
        <lu>
          <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	 <lit-tag v="4"/>
         <lit-tag v="5"/>
         <lit-tag v="6"/>
        </lu>
    
      </chunk>
</out>

</when>
<otherwise>
<out>
  <chunk name="what-NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
<b pos ="1"/>
<lu>
          <clip pos="1" side="tl" part="whole"/>
	
        </lu>
<b pos ="2"/>
            
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
         <lit-tag v="4"/>
         <lit-tag v="5"/>
         <lit-tag v="6"/>
        </lu>
    
      </chunk>
</out>


</otherwise>
</choose>

  </action>
</rule>


<rule comment="NEW RULE: adjec to inf-verb"> <!--to play -->
  <pattern>
    <pattern-item n="adjec"/>
    <pattern-item n="to"/>
    <pattern-item n="inf-verb"/> 
   </pattern>
  <action>
<call-macro n="build-adjec-lu"><with-param pos="1"/></call-macro> 

<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

<out>
  <chunk name="NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="dat"/></tag>
      </tags>
            
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="4"/>
         <lit-tag v="5"/>
         <lit-tag v="6"/>
        </lu>
<b pos="1"/>
  <lu>
      <var n="adjec_lu"/>
	
        </lu>
    
      </chunk>
</out>

</when>
<otherwise>
<out>
  <chunk name="NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
        <tag><lit-tag v="ger"/></tag> 
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="dat"/></tag>
      </tags>
            
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
         <lit-tag v="4"/>
         <lit-tag v="5"/>
         <lit-tag v="6"/>
        </lu>
<b pos="1"/>
  <lu>
      <var n="adjec_lu"/>
	
        </lu>
    
      </chunk>
</out>


</otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: pseudo+to+inf"> <!--to play -->
  <pattern>
    <pattern-item n="the-most"/>
    <pattern-item n="to"/>
    <pattern-item n="inf-verb"/> 
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>

<out>
  <chunk name="NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
       
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="acc"/></tag>
      </tags>
            
        <lu>
        <lit v="бол"/>
 	<lit-tag v="v"/>
 	<lit-tag v="iv"/>
	<lit-tag v="ger"/>
         <lit-tag v="4"/>
         <lit-tag v="5"/>

        </lu>
<b pos="1"/>
     
        <lu>
         <lit v="көп"/>
         <lit-tag v="adj"/>
         <lit-tag v="comp"/>

        </lu>
    
      </chunk>
</out>

</when>
<otherwise>

<out>
  <chunk name="NP_to_inf">  
      <tags>
       <tag><lit-tag v="NP_to_inf"/></tag>
        <tag><lit-tag v="PD"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
       
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="acc"/></tag>
      </tags>
            
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="4"/>
         <lit-tag v="5"/>

        </lu>
<b pos="1"/>
     
        <lu>
         <lit v="көп"/>
         <lit-tag v="adj"/>
         <lit-tag v="comp"/>

        </lu>
    
      </chunk>
</out>

</otherwise>
</choose>

  </action>
</rule>

<rule comment="NEW RULE: det nom to vblex-have"> <!--I like to play -->
  <pattern>
    <pattern-item n="det"/>
    <pattern-item n="nom"/>
    <pattern-item n="to"/>
    <pattern-item n="vblex-have"/> 
   </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="2"/>
  </call-macro> 
<out>
  <chunk name="to-have">  
      <tags>
       <tag><lit-tag v="NP_to_have"/></tag>
        <tag><lit-tag v="p3"/></tag> 
        <tag><lit-tag v="ND"/></tag> 
       
        <tag><lit-tag v="px3sp"/></tag> 
        <tag><lit-tag v="CD"/></tag>
      </tags>
       
        <lu>
         <lit v="ал"/>
          <clip pos="4" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="gen"/>
        </lu>
     <b pos="1"/>
      <lu>
      <var n="NEW-noun_lu"/>
    </lu>
      </chunk>
</out>
  </action>
</rule>

<rule comment="NEW RULE: pseudo+to+inf"> <!--I like to play -->
  <pattern>
    <pattern-item n="to"/>
    <pattern-item n="approx-inf-verb"/> 
    <pattern-item n="nom"/>
   </pattern>
  <action>

  <call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="3"/>
  </call-macro> 
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
  <chunk name="to-be-noun1">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="NEW-noun_lu"/>
    </lu>
<b pos="1"/>
        <lu>
         <lit v="бол"/>
         <lit-tag v="v"/>
         <lit-tag v="iv"/>
         <lit-tag v="ger"/>

         <lit-tag v="5"/>
        </lu>
</chunk>
</out>
</when>
<otherwise>
    <out>
    <chunk name="to-inf-noun2">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="NEW-noun_lu"/>
    </lu>
   <b pos ="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>
  <b/> 
    <lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
      </chunk>
</out>
</otherwise>
</choose>
  </action>
</rule>

<rule comment="NEW RULE: pseudo+to+inf"> <!--I like to play -->
  <pattern>
    <pattern-item n="to"/>
    <pattern-item n="approx-inf-verb"/> 
    <pattern-item n="obj-pron"/>
   </pattern>
  <action>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
  <chunk name="to-be-noun3">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><clip pos="3" side="sl" part="a_pers"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
     <lu>
      <clip pos="3" side="tl" part="lem"/>
      <clip pos="3" side="tl" part="a_pron"/>
      <clip pos="3" side="tl" part="a_pers"/>
      <lit-tag v="2"/> <!-- number -->
      <lit-tag v="4"/> <!-- possession -->
      <lit-tag v="5"/> <!-- case --> 
    </lu>
    <b pos="1"/>
        <lu>
         <lit v="бол"/>
         <lit-tag v="v"/>
         <lit-tag v="iv"/>
         <lit-tag v="ger"/>
         <lit-tag v="5"/>
        </lu>
<b/> 
    <lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>
    </lu>
</chunk>
</out>
</when>
<otherwise>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="3" side="tl" part="a_possessive"/>
             <lit-tag v="px3sp"/>
          </equal>
        </test>
          <let><var n="possessive"/><lit-tag v="px3sp"/></let>
          <let><var n="number"/><lit v=""/></let>
</when>
<otherwise>
          <let><var n="possessive"/><lit-tag v="PXD"/></let>
          <let><var n="number"/><lit-tag v="2"/></let>
</otherwise>
</choose>
    <out>
    <chunk name="to-inf-noun1">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><clip pos="3" side="sl" part="a_pers"/></tag> <!-- person placeholder -->
    <tag><var n="possessive"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
     <lu>
      <clip pos="3" side="tl" part="lem"/>
      <clip pos="3" side="tl" part="a_pron"/>
      <clip pos="3" side="tl" part="a_pers"/>
      <var n="number"/> <!-- number -->
      <lit-tag v="4"/> <!-- possession -->
      <lit-tag v="5"/> <!-- case --> 
    </lu>
    <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>
  <b/> 
    <lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>

    </lu>
      </chunk>
</out>
</otherwise>
</choose>
  </action>
</rule>

<rule comment="NEW RULE: to inf nom cnjcoo in"> <!--I like to play games or find -->
  <pattern>
    <pattern-item n="to"/>
    <pattern-item n="approx-inf-verb"/> 
    <pattern-item n="nom"/>
    <pattern-item n="cnjcoo"/>
    <pattern-item n="approx-inf-verb"/> 
   </pattern>
  <action>
   <call-macro n="build-cnjcoo-lu"><with-param pos="4"/></call-macro> 
  <call-macro n="NEW-build-noun-lu-2-4-5">
       <with-param pos="3"/>
  </call-macro> 
<choose>
      <when>
        <test>
          <equal>
             <clip pos="2" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
  <chunk name="to-be-noun">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="NEW-noun_lu"/>
    </lu>
   <b pos="1"/>
        <lu>
         <lit v="бол"/>
         <lit-tag v="v"/>
         <lit-tag v="iv"/>
         <lit-tag v="ger"/>
         <lit-tag v="5"/>
        </lu>
<b pos="2"/>
<lu>
           <var n="cnjcoo_lu"/>
     </lu>
   <b pos="3"/>
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>
   <b pos="4"/>
    <lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>
    </lu>
</chunk>
</out>
</when>
<when>
        <test>
          <equal>
             <clip pos="5" side="sl" part="lem"/>
             <lit v="be"/>
          </equal>
        </test>
<out>
  <chunk name="to-be-noun-be">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="NEW-noun_lu"/>
    </lu>
   <b pos="1"/>
        <lu>
         <lit v="бол"/>
         <lit-tag v="v"/>
         <lit-tag v="iv"/>
         <lit-tag v="ger"/>
         <lit-tag v="5"/>
        </lu>
<b pos="2"/>
<lu>
           <var n="cnjcoo_lu"/>
     </lu>
   <b pos="3"/>
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>
   <b pos="4"/>
    <lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>
    </lu>
</chunk>
</out>
</when>
<otherwise>
    <out>
    <chunk name="to-inf-noun">
    <tags>
    <tag><lit-tag v="PP"/></tag>
    <tag><clip pos="3" side="sl" part="a_nbr"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="acc"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
      <var n="NEW-noun_lu"/>
    </lu>
   <b pos="1"/>
        <lu>
          <clip pos="2" side="tl" part="lem"/>
	  <clip pos="2" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>
   <b pos="2"/>
<lu>
           <var n="cnjcoo_lu"/>
     </lu>
   <b pos="3"/>
<lu>
          <clip pos="5" side="tl" part="lem"/>
	  <clip pos="5" side="tl" part="a_kaz_verb"/>
         <lit-tag v="ger"/>
         <lit-tag v="nom"/>
     </lu>
   <b pos="4"/>
    <lu>
     <lit v="үшін"/>
         <lit-tag v="post"/>
    </lu>
      </chunk>
</out>
</otherwise>
</choose>
  </action>
</rule>


<rule comment="NEW RULE: subs-ing "> 
  <pattern>
    <pattern-item n="subs-ing"/>
  </pattern>
  <action>
 
    <out>
    <chunk name="subs">
    <tags>
    <tag><lit-tag v="NP"/></tag>
    <tag><lit-tag v="sg"/></tag> <!-- number placeholder -->
    <tag><lit-tag v="p3"/></tag> <!-- person placeholder -->
    <tag><lit-tag v="PXD"/></tag> <!-- possessor placeholder -->
    <tag><lit-tag v="CD"/></tag> <!-- case placeholder -->
    </tags>
    <lu>
     <clip pos="1" side="tl" part="lem"/>
     <clip pos="1" side="tl" part="a_kaz_verb"/>
          <lit-tag v="gpr_impf"/>
          <lit-tag v="subst"/>
          <lit-tag v="nom"/>
     </lu>
	
    </chunk>
    </out>
      </action>
</rule>

<rule comment="NEW RULE: vbmod-s"> <!--for cleaning # with want to, have to, need to -->
  <pattern>
    <pattern-item n="vbmod"/>
  </pattern>
<action>
        <out>
      <chunk name="VP_vbmod">
      <tags>
        <tag><lit-tag v="VP"/></tag>
          </tags>
       <b/>
      </chunk>
        </out>
      </action>
</rule>


<rule comment="NEW RULE: should ...?"> <!--should?-->
  <pattern>
    
   <pattern-item n="vaux-should"/>

  </pattern>
  <action>
 
    <call-macro n="default-nbr-pers"/>
        <out>
      <chunk name="should-inf_q">
      <tags>
        <tag><lit-tag v="VP_should_inf"/></tag>
      </tags>
      <b pos="1"/>
<lu>
          <lit v="жөн"/>
          <lit-tag v="adj"/>	
        </lu>
          </chunk>
  </out>
      
  </action>

</rule>



<rule comment="NEW RULE: can/could? + infinitive "> <!--could you play-->
  <pattern> 
    <pattern-item n="vaux-can"/>

   </pattern>
  <action>
    <call-macro n="default-nbr-pers"/>
<choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
            
        <out>
      <chunk name="can?">
      <tags>
        <tag><lit-tag v="VPQ_can"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>

           
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="aor"/>
	  <lit-tag v="3"/>
          <lit-tag v="2"/>
 	
 	        </lu>
      </chunk>
  </out>
       
  </when> 
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <out>
      <chunk name="could">
            <tags>
        <tag><lit-tag v="VPQ_can"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><lit-tag v="tense"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> <!-- possessive-->
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>

        
	<lu>
          <lit v="ал"/>
 	<lit-tag v="vaux"/>
	 <lit-tag v="ifi"/>
	<lit-tag v="3"/>
          <lit-tag v="2"/>
 	</lu>
          </chunk>
        </out>
      </when>
    </choose>
      </action>
</rule>
<rule comment="RULE:this-det">
<pattern>
 <pattern-item n="cat_det"/>
</pattern>
  <action>
 <out>
       <chunk name="__this-det__" case="caseFirstWord"> 
      <tags><tag><lit-tag v="NP"/></tag>  
            <tag><lit-tag v="CD"/></tag> 
     </tags>   
  <lu>
  <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="_attr_prn_"/>
<clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="2"/>
 </lu>
 </chunk>
  </out>
 </action>
 </rule> 


<rule comment="RULE:that-det">
<pattern>
 <pattern-item n="cat_det-dem"/>
</pattern>
  <action>
 <out>
       <chunk name="__that-det__" case="caseFirstWord"> 
      <tags><tag><lit-tag v="NP"/></tag>       </tags>   
  <lu>
  <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="_attr_det_"/>
<clip pos="1" side="tl" part="a_nbr"/>

 </lu>
 </chunk>
  </out>
 </action>
 </rule> 
<rule comment="RULE:predet">
<pattern>
 <pattern-item n="cat_predet"/>
</pattern>
  <action>
 <out>
       <chunk name="__predet__" case="caseFirstWord"> 
      <tags><tag><lit-tag v="NP"/></tag>       </tags>   
  <lu>
  <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="_attr_prn_"/>
          <lit-tag v="px3sp"/>
          <lit-tag v="nom"/>
 </lu>
 </chunk>
  </out>
 </action>
 </rule> 
  </section-rules>
</transfer>

