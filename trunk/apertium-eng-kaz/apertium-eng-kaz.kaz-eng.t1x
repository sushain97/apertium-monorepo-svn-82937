<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="vaux-neg-pres">
    
      <cat-item tags="vaux.neg.pres.*"/>
     <cat-item tags="vaux.neg.ifi.*.*.*"/>
    </def-cat>
<def-cat n="num-det">
      <cat-item tags="num"/>
      <cat-item tags="num.ord"/>
      <cat-item tags="num.itg"/>
    </def-cat>
<def-cat n="abbr">
      <cat-item tags="abbr"/>
      
    </def-cat>



<def-cat n="n-sim">
      <cat-item tags="n.px1sg.sim"/>
      <cat-item tags="n.px2sg.sim"/>
      <cat-item tags="n.px3sg.sim"/>
      <cat-item tags="n.px1pl.sim"/>
    </def-cat>

<def-cat n="birge">
      <cat-item lemma="бір" tags="num.subst.dat"/>
     
    </def-cat>

<def-cat n="zhyl">
      <cat-item lemma="жыл" tags="n.*"/>
     
    </def-cat>

<def-cat n="osydan">
      <cat-item lemma="осы" tags="prn.dem.abl"/>
     
    </def-cat>

<def-cat n="kein">
      <cat-item lemma="кейін" tags="post"/>
     
    </def-cat>


<def-cat n="vaux-can">
      <cat-item lemma="ал" tags="vaux.*.prc_impf"/>
     
    </def-cat>

<def-cat n="mod_ass">
      <cat-item tags="mod_ass"/>
      <cat-item tags="mod_ass.*"/>
         </def-cat>




<def-cat n="R-KT">
<cat-item tags="v.*.ger_past"/>
<cat-item tags="v.*.ger_past.*"/>
<cat-item tags="v.*.ger_past.*.*"/>
<cat-item tags="v.*.ger_past.*.*.*"/>
<cat-item tags="v.*.ger_past.*.*.*.*"/>
<cat-item tags="v.*.ger_past.*.*.*.*.*"/>
         </def-cat>



<def-cat n="verb-subst">
      <cat-item tags="v.tv.gpr_fut.subst.*.*.gen.subst.nom"/>
	<cat-item tags="v.*.gpr_fut.subst.*.*.gen.subst.nom"/>
<cat-item tags="v.*.gpr_fut.subst.*.*"/>
<cat-item tags="v.*.gpr_fut.subst.*.*.*.attr"/>
<cat-item tags="v.*.gpr_fut.subst.*.*.*"/>
<cat-item tags="v.*.gpr_fut"/>
<cat-item tags="v.*.gpr_fut.subst.*.*.*"/>
<cat-item tags="v.*.gpr_impf.subst.*.*.subst.*"/>
<cat-item tags="v.*.gpr_impf.subst.*.*.*"/>
<cat-item tags="v.*.gpr_pot"/>
<cat-item tags="v.*.gpr_pot.*"/>
<cat-item tags="v.*.gpr_pot.*.*"/>
<cat-item tags="v.*.gpr_pot.*.*"/>
<cat-item tags="v.*.gpr_pot.*.*.*"/>
<cat-item tags="v.*.gpr_pot.*.*.*.*"/>
<cat-item tags="v.*.gpr_ppot"/>
<cat-item tags="v.*.gpr_ppot.*"/>
<cat-item tags="v.*.gpr_ppot.*.*"/>
<cat-item tags="v.*.gpr_ppot.*.*"/>
<cat-item tags="v.*.gpr_ppot.*.*.*"/>
<cat-item tags="v.*.gpr_ppot.*.*.*.*"/>

<cat-item tags="v.*.ger_fut"/>
<cat-item tags="v.*.ger_fut.*"/>
<cat-item tags="v.*.ger_fut.*.*"/>
<cat-item tags="v.*.ger_fut.*.*.*"/>
<cat-item tags="v.*.ger_fut.*.*.*.*"/>
<cat-item tags="v.*.ger_fut.*.*.*.*.*"/>
<cat-item tags="v.*.ger_perf"/>
<cat-item tags="v.*.ger_perf.*"/>
<cat-item tags="v.*.ger_perf.*.*"/>
<cat-item tags="v.*.ger_perf.*.*.*"/>
<cat-item tags="v.*.ger_perf.*.*.*.*"/>
<cat-item tags="v.*.ger_perf.*.*.*.*.*"/>
<cat-item tags="v.*.ger_impf"/>
<cat-item tags="v.*.ger_impf.*"/>
<cat-item tags="v.*.ger_impf.*.*"/>
<cat-item tags="v.*.ger_impf.*.*.*"/>
<cat-item tags="v.*.ger_impf.*.*.*.*"/>
<cat-item tags="v.*.ger_impf.*.*.*.*.*"/>
<cat-item tags="v.*.coop"/>
<cat-item tags="v.*.coop.*"/>
<cat-item tags="v.*.coop.*.*"/>
<cat-item tags="v.*.coop.*.*.*"/>
<cat-item tags="v.*.coop.*.*.*.*"/>
<cat-item tags="v.*.coop.*.*.*.*.*"/>
<cat-item tags="v.*.gpr_past.*"/>
<cat-item tags="v.*.gpr_past"/>
<cat-item tags="v.*.gpr_past.*.*"/>
<cat-item tags="v.*.gpr_past.*.*.*"/>
<cat-item tags="v.*.gpr_past.*.*.*.*"/>
<cat-item tags="v.*.gpr_past.*.*.*.*.*"/>
<cat-item tags="v.*.gpr_impf"/>
<cat-item tags="v.*.gpr_impf.*"/>
<cat-item tags="v.*.gpr_impf.*.*"/>
<cat-item tags="v.*.gpr_impf.*.*.*"/>
<cat-item tags="v.*.gpr_impf.*.*.*.*"/>
<cat-item tags="v.*.gpr_impf.*.*.*.*.*"/>
<cat-item tags="v.*.ger_abs"/>
<cat-item tags="v.*.ger_abs.*"/>
<cat-item tags="v.*.ger_abs.*.*"/>
<cat-item tags="v.*.ger_abs.*.*.*"/>
<cat-item tags="v.*.ger_abs.*.*.*.*"/>
<cat-item tags="v.*.ger_abs.*.*.*.*.*"/>
<cat-item tags="v.*.ger_ppot"/>
<cat-item tags="v.*.ger_ppot.*"/>
<cat-item tags="v.*.ger_ppot.*.*"/>
<cat-item tags="v.*.ger_ppot.*.*.*"/>
<cat-item tags="v.*.ger_ppot.*.*.*.*"/>
<cat-item tags="v.*.ger_ppot.*.*.*.*.*"/>
<cat-item tags="v.*.ger_pot"/>
<cat-item tags="v.*.ger_pot.*"/>
<cat-item tags="v.*.ger_pot.*.*"/>
<cat-item tags="v.*.ger_pot.*.*.*"/>
<cat-item tags="v.*.ger_pot.*.*.*.*"/>
<cat-item tags="v.*.ger_pot.*.*.*.*.*"/>
<cat-item tags="v.*.gna_perf"/>
<cat-item tags="v.*.gna_perf.*"/>
<cat-item tags="v.*.gna_after"/>
<cat-item tags="v.*.prc_plan"/>
<cat-item tags="v.*.prc_perf"/>
<cat-item tags="v.*.pih.*.*"/>
<cat-item tags="v.*.gna_until"/>
<cat-item tags="v.*.ger.sim"/>



         </def-cat>


<def-cat n="be-verb">
      <cat-item lemma="бол" tags="v.iv.gpr_past.subst.px3sp.ins"/>
  </def-cat>

<def-cat n="subst-adj">
      <cat-item tags="adj.comp.subst.*"/>
 <cat-item tags="adj.comp.subst.*.*"/>
 <cat-item tags="adj.comp.subst.*.*.*"/>
<cat-item tags="adj.comp.subst.*.*.*.*"/>
<cat-item tags="adj.comp.subst.*.*.*.*.*"/>
<cat-item tags="adj.subst"/>
<cat-item tags="adj.subst.*"/>
<cat-item tags="adj.subst.*.*"/>
<cat-item tags="adj.subst.*.*.*"/>	
<cat-item tags="adj.adv"/>
</def-cat>

<def-cat n="comp_adj">
      <cat-item tags="adj.comp"/>
</def-cat>


<def-cat n="verb-subst-neg">
      <cat-item tags="v.*.neg.ger_past.*"/>
<cat-item tags="v.*.neg.ger_perf"/>
<cat-item tags="v.*.neg.prc_perf"/>
<cat-item tags="v.*.neg.ger_perf.*"/>
<cat-item tags="v.*.neg.prc_perf.*"/>
<cat-item tags="v.*.neg.pih.*.*"/>
<cat-item tags="v.*.neg.gpr_fut.subst"/>
<cat-item tags="v.*.neg.gpr_ppot"/>
<cat-item tags="v.*.neg.ger_abs"/>
<cat-item tags="v.*.neg.gpr_pot"/>
<cat-item tags="v.*.neg.gpr_impf"/>
<cat-item tags="v.*.neg.ger"/>
 </def-cat>

<def-cat n="n-syz">
<cat-item  tags="n"/>
      <cat-item lemma="сіз" tags="post"/>
   </def-cat>
<def-cat n="postadv">
      <cat-item tags="postadv"/>
      <cat-item tags="postadv.*"/>
         </def-cat>
<def-cat n="ger_perf">
      <cat-item tags="v.*.neg.ger_perf*.*.frm.*"/>
	<cat-item tags="v.*.neg.ger_perf*.*.*.*"/>
      <cat-item tags="v.tv.neg.ger_perf.*.px2sg.frm.*"/>
         </def-cat>

<def-cat n="thousand-etc">
      <cat-item lemma="мың" tags="n.nom"/>
<cat-item lemma="мың" tags="n.*"/>
<cat-item lemma="мың" tags="num"/>
      <cat-item lemma="миллион" tags="num"/>
      <cat-item lemma="миллиард" tags="num"/>
    </def-cat>

 <def-cat n="vaux-neg-past">
            <cat-item tags="vaux.neg.ifi.*"/>
         </def-cat>
 <def-cat n="quest">
      <cat-item tags="sent" lemma="?"/>
    </def-cat>

<def-cat n="np-ant"> 
      <cat-item tags="np.ant"/>
      <cat-item tags="np.ant.*"/>
<cat-item tags="np.ant.*.*"/>
   </def-cat> 

 <def-cat n="np-cog"> 
      <cat-item tags="np.cog"/>
      <cat-item tags="np.cog.*"/>
<cat-item tags="np.cog.*.*"/>
<cat-item tags="np.cog.mf.*"/>
   </def-cat>

<def-cat n="itg"> 
      <cat-item tags="det.itg"/>
      <cat-item tags="det.itg.*"/>
   </def-cat>

<def-cat n="qnt"> 
      <cat-item tags="det.qnt"/>
      
   </def-cat>

<def-cat n="nom-sim"> 
      <cat-item tags="n.*.*.*.sim.*"/>
      <cat-item tags="n.*.*.*.sim"/>
      <cat-item tags="n.sim.*"/>
      <cat-item tags="n.sim"/>
      <cat-item tags="n.*.*.sim.*"/>
      <cat-item tags="n.*.*.sim"/>
      <cat-item tags="n.*.sim.*"/>
      <cat-item tags="n.*.sim"/>
   </def-cat>

<def-cat n="nom">
       <cat-item tags="n.*"/>
 <cat-item tags="n.sg.*"/>
<cat-item tags="n.pl.*"/>
 <cat-item tags="n.*.attr"/>
 <cat-item tags="n.*.*.subst.*"/>
      <cat-item tags="np.al"/>
      <cat-item tags="np.al.*"/>
<cat-item tags="n.acr.*"/>
      <cat-item tags="np.org"/>
      <cat-item tags="np.org.*"/>
   <!--   <cat-item tags="np.cog"/>
      <cat-item tags="np.cog.*"/>-->
      <cat-item tags="np.unk"/>
      <!--<cat-item tags="np.ant.*"/>-->
   <!--   <cat-item tags="np.top"/>
<cat-item tags="np.top.*"/>-->
      <!--<cat-item tags="np.loc.*"/>-->
    </def-cat>


<def-cat n="top">    
   <cat-item tags="np.top"/>
<cat-item tags="np.top.*"/>
      <!--<cat-item tags="np.loc.*"/>-->
    </def-cat>

    <def-cat n="vaux">
      <cat-item tags="vaux.*"/>
 <cat-item tags="vaux.*.*.*"/>
    </def-cat>



<def-cat n="vaux-neg">
      <cat-item tags="vaux.neg.*.*.*"/>
    </def-cat>
<def-cat n="infger">
      <cat-item tags="vblex.ger*"/>
    </def-cat>

<def-cat n="unknown">
      <cat-item tags=""/>
    </def-cat>

    <def-cat n="v-ger-past">
      <cat-item tags="v.*.ger_past.*"/>
    </def-cat>
<def-cat n="v-ger-past-neg">
      <cat-item tags="v.*.neg.ger_past.*.*"/>
    </def-cat>
<def-cat n="v-past-neg">
      <cat-item tags="v.*.neg.past.*"/>
    </def-cat>
 <def-cat n="v-past">
      <cat-item tags="v.*.past.*"/>
<cat-item tags="v.*.past.evid.*"/>
<cat-item tags="v.*.past.evid.*.*"/>
    </def-cat>
<def-cat n="v-passive">
      <cat-item tags="v.*.pass.*.*.*"/>
    </def-cat>
<def-cat n="v-being_passive">
      <cat-item tags="v.*.pass.*"/>
    </def-cat>
<def-cat n="v-passive-neg">
      <cat-item tags="v.*.pass.neg.*.*.*"/>
    </def-cat>
<def-cat n="v-past_passive">
      <cat-item tags="v.*.ifi.*.*.*"/>
    </def-cat>
<def-cat n="v-past_passive-neg">
      <cat-item tags="v.*.neg.ifi.*.*.*"/>
    </def-cat>
<def-cat n="v-future_passive">
      <cat-item tags="v.*.fut.*.*"/>
    </def-cat>
<def-cat n="vblex">
      <cat-item tags="vblex.past.*"/>
<cat-item tags="vblex.pres.*"/>
    </def-cat>

<def-cat n="n-adv">
      <cat-item lemma="дала" tags="n.loc"/>

    </def-cat>

<def-cat n="v-gerund">
    <cat-item tags="v.tv.ger.*.*"/>
<cat-item tags="v.*.ger.*.*"/>
<cat-item tags="v.*.ger.*"/>
<cat-item tags="v.*.ger.*.*.*"/>
<cat-item tags="v.*.ger.*.*.*"/>
<cat-item tags="v.tv.ger.px1sg.nom"/>
    </def-cat>

<def-cat n="v-gerund-neg">
    <cat-item tags="v.tv.neg.ger.*.*"/>
<cat-item tags="v.*.neg.ger.*.*"/>
<cat-item tags="v.*.neg.ger.*"/>
    </def-cat>
    <def-cat n="v-ing">
      <cat-item tags="v.*.gna9"/>
      <cat-item tags="v.*.prc_impf"/>
 <cat-item tags="v.*.prc_perf"/>
    </def-cat>
    <def-cat n="v-adv">
      <cat-item tags="v.*.gna9"/>
    </def-cat>
    <def-cat n="v-neg-fin">
      <cat-item tags="v.*.neg.aor.*"/>
      <cat-item tags="v.*.neg.ifi.*"/>

    </def-cat>
    <def-cat n="v-fin">
      <cat-item tags="v.*.aor.*"/>
      <cat-item tags="v.*.ifi.*"/>

<cat-item tags="v.*.ifi.*.*"/>
      <cat-item tags="vaux.*.aor.*"/> <!-- include auxiliaries for now -->
      <cat-item tags="vaux.*.ifi.*"/>
    </def-cat>


<def-cat n="v-wouldLike">
<cat-item tags="v.*.fut_plan.*.*"/>
<cat-item tags="v.*.prc_fplan"/>
         </def-cat>
<def-cat n="v-wouldLike-neg">
<cat-item tags="v.*.neg.fut_plan.*.*"/>
<cat-item tags="v.*.neg.prc_fplan"/>
<cat-item tags="v.*.neg.fut_plan.*.*"/>
         </def-cat>

<def-cat n="v-cond">
<cat-item tags="v.*.prc_cond.*.*"/>
<cat-item tags="v.*.prc_cond.*.*.*"/>
	<cat-item tags="v.*.gna_cond.*.*"/>
<cat-item tags="v.*.gna_cond.*.*.*"/>
<!--<cat-item tags="v.*.coop.*.*.*"/>
<cat-item tags="v.tv.coop.prc_impf"/>-->
         </def-cat>
<def-cat n="v-fut">
      <cat-item tags="v.*.fut.*"/>
         </def-cat>
<def-cat n="v-fut-neg">
      <cat-item tags="v.*.neg.fut.*.*"/>
         </def-cat>
<def-cat n="vp-be">
      <cat-item tags="vbser.*.*"/>
         </def-cat>

<def-cat n="v-futCon">
      <cat-item tags="vaux.fut.*"/> <!-- because all жатыр/отыр is vaux verbs-->
     
    </def-cat>
<def-cat n="v-futCon-neg">
      <cat-item tags="vaux.neg.aor.*"/> 
         </def-cat>
<def-cat n="v-perfcon">
      <cat-item tags="vaux.past.*"/> 
      </def-cat>
<def-cat n="v-perfcon-neg">
      <cat-item tags="vaux.neg.past.*"/> 
      </def-cat>

    <def-cat n="v-neg-pot">
      <cat-item lemma="ал" tags="v.tv.neg.aor.*"/>
      <cat-item lemma="ал" tags="v.tv.neg.ifi.*"/>
    </def-cat>

    <def-cat n="verb-al">
      <cat-item lemma="ал" tags="vaux.aor.*.*"/>
    </def-cat>

<def-cat n="verb-al-ifi">
      <cat-item lemma="ал" tags="vaux.ifi.*.*"/>
    </def-cat>

<def-cat n="verb-al-neg">
    <cat-item lemma="ал" tags="vaux.neg.aor.*."/>
	<cat-item lemma="ал" tags="vaux.neg.ifi.*."/>
    </def-cat>

    <def-cat n="v-imp">
      <cat-item tags="v.*.imp.*"/>
    </def-cat>
<def-cat n="neg-ger">
      <cat-item tags="v.*.neg.ger.*"/>
    </def-cat>
    <def-cat n="det">
      <cat-item tags="det.ind"/>
      <cat-item tags="det.itg"/>
      <cat-item lemma="бір" tags="num"/>
    </def-cat>

    <def-cat n="adj">
     <cat-item tags="adj"/>
      <cat-item tags="adj.sint"/>
<cat-item tags="adj.subst.*"/>
<cat-item tags="adj.advl"/>
    <!--  <cat-item tags="adj.*"/>-->
       
  </def-cat>

<def-cat n="comp-adjec">
      <cat-item tags="adj.comp"/>
      <cat-item tags="adj.comp.*"/>
    </def-cat>

 <def-cat n="prn">
      <cat-item tags="prn"/>
    <cat-item tags="prn.dem"/>
<cat-item tags="prn.dem.*"/>
<cat-item tags="prn.ind.*"/>
<cat-item tags="prn.neg.*"/>
<cat-item tags="prn.qnt.*.*"/>
         </def-cat>

 <def-cat n="prn-ref">
      <cat-item tags="prn.ref.*"/>
<cat-item tags="prn.ref.*.*"/>
         </def-cat>

<def-cat n="prn-itg">
      <cat-item tags="prn.itg.*"/>
<cat-item tags="prn.itg.*.*"/>
         </def-cat>

<def-cat n="determ">
      <cat-item tags="det.dem"/>

         </def-cat>
<def-cat n="num-cas">
      <cat-item tags="num.subst.abl"/>
<cat-item tags="num.*.*"/>
</def-cat>

<def-cat n="myn_mil">
      
<cat-item lemma="мың" tags="num.subst.*"/>
   </def-cat>

      <def-cat n="num">
      <cat-item tags="num"/>

      <cat-item tags="num.*"/>
<cat-item tags="num.subst.loc"/>
<cat-item tags="num.*.*"/>
<cat-item tags="num.*.px3sp.*"/>
<cat-item tags="num.coll.*.px3sp.*"/>
</def-cat>



<def-cat n="num-ord">
<cat-item tags="num.ord.subst"/>
<cat-item tags="num.ord.subst.*"/>
</def-cat>
 <def-cat n="cop">
      <cat-item tags="cop.*"/>
<cat-item tags="cop.*.*.*"/>
    </def-cat>
<def-cat n="cop-neg">
<cat-item lemma="е" tags="cop.neg.*.*.*"/>
      <cat-item tags="cop.neg.*"/>
  <cat-item tags="vaux.pres.*"/>
   <cat-item tags="cop.neg"/>
  <cat-item tags="vaux.pres"/>
    </def-cat>
<def-cat n="dett">
<cat-item tags="det.dem"/>
</def-cat>

<def-cat n="gen">
      <cat-item tags="prn.pers.*.*.gen"/> 
<cat-item tags="prn.pers.*.*.*.*.gen"/> 
    </def-cat>
      <def-cat n="gen_nom">
      <cat-item tags="prn.pers.*.*.gen"/> 
<cat-item tags="n.*"/>
    </def-cat>

<def-cat n="zhok-ij">
      <cat-item lemma="жоқ" tags="ij"/> 
    </def-cat>
     
<def-cat n="v-ger">
      <cat-item tags="v.iv.ger.nom"/> 
 <cat-item tags="v.tv.ger.nom"/>
  <cat-item tags="v.*.ger.dat"/>
<cat-item tags="v.*.ger.*"/>
<cat-item tags="v.*.ger.*.*"/>
<cat-item tags="v.*.ger.*.*.*"/>
   <cat-item tags="v.*.ger.loc"/>
   <cat-item tags="v.*.ger.*.attr"/>
  <cat-item tags="v.*.ger.*.acc"/>
<cat-item tags="v.*.ger.gen.subst.nom"/>
    </def-cat>

<def-cat n="v-gerund-ing">
      <cat-item tags="v.*.ger.*"/> 
<cat-item tags="v.*.ger.loc.attr"/>
   <cat-item tags="v.*.ger.abl"/>
   <cat-item tags="v.*.ger.acc"/>
<cat-item tags="v.*.ger.*.*"/>
    </def-cat>


<def-cat n="p-ins">
      <cat-item tags="prn.pers.*.*.ins"/> 
    </def-cat>
<def-cat n="adv">
 
    <cat-item tags="adv"/>
   <cat-item tags="adv.itg"/>
    <cat-item tags="cnjadv"/>
</def-cat>

    
<def-cat n="bol-neg">
      <cat-item lemma="бол" tags="v.*.neg.ifi.*"/>
<cat-item lemma="бол" tags="v.*.neg.ifi.*.*"/>
    </def-cat>
<def-cat n="ma">
      <cat-item lemma="ма" tags="qst"/>
<cat-item lemma="мe" tags="qst"/>
<cat-item lemma="ба" tags="qst"/>
<cat-item lemma="бе" tags="qst"/>
         </def-cat>
<def-cat n="bol">
      <cat-item lemma="бол" tags="v.*.ifi.*"/>
 <cat-item lemma="бол" tags="v.*.ifi.*.*"/>
<cat-item lemma="е" tags="cop.ifi.*.*"/>
<cat-item lemma="бол" tags="v.*.gna_perf"/>
    </def-cat>
<def-cat n="v-bol">
      <cat-item lemma="бол" tags="vaux.*.*.*"/>
<cat-item lemma="бол" tags="vaux.aor.*.*"/>
    </def-cat>
<def-cat n="v-bol-neg">
      <cat-item lemma="бол" tags="vaux.neg.*.*.*"/>
<cat-item lemma="бол" tags="vaux.neg.past.*.*"/>
    </def-cat>
<def-cat n="kel">
      <cat-item lemma="кел" tags="v.*.aor.*.*"/>
    </def-cat>
<def-cat n="kel-ifi">
      <cat-item lemma="кел" tags="v.*.ifi.*.*"/>
    </def-cat>
<def-cat n="bar">
 <cat-item lemma="бар" tags="adj"/>
      <cat-item lemma="бар" tags="adj.*"/>
    </def-cat>
<def-cat n="mumkin">
 <cat-item lemma="мүмкін" tags="adj"/>
      <cat-item lemma="мүмкін" tags="adj.*"/>
    </def-cat>

<def-cat n="jon">
 <cat-item lemma="жөн" tags="adj"/>
      <cat-item lemma="жөн" tags="adj.*"/>
    </def-cat>
<def-cat n="zhok">
 <cat-item lemma="жоқ" tags="adj"/>
      <cat-item lemma="жоқ" tags="adj.*"/>
    </def-cat>

<def-cat n="v-opt">
 <cat-item tags="v.*.opt.*.*"/>
    </def-cat>
<def-cat n="v-impf">
 <cat-item tags="v.*.prc_impf"/>
    </def-cat>

<def-cat n="degen">
 <cat-item lemma="де" tags="v.tv.gpr_past.*"/>
 <cat-item lemma="де" tags="v.tv.gpr_past"/>
 <cat-item lemma="де" tags="v.tv.ger_past.*"/>
<cat-item lemma="де" tags="v.tv.gna_perf"/>
<cat-item lemma="де" tags="v.tv.gna_perf.*"/>
  <cat-item lemma="де" tags="v.tv.ger_past"/>
      <cat-item lemma="де" tags="v.tv.*.*.*"/>
    </def-cat>

<def-cat n="v-prc_perf">
<cat-item tags="v.*.prc_perf"/>
 <cat-item tags="v.*.prc_perf.*"/> 
  
    </def-cat>

<def-cat n="tarau">
      <cat-item lemma="тарау" tags="n.*"/>
    </def-cat>

<def-cat n="prn-pers-adv">
      <cat-item tags="prn.pers.p1.sg.adv"/>
    </def-cat>


<def-cat n="kerek">
 <cat-item lemma="керек" tags="n"/>
      <cat-item lemma="керек" tags="n.*"/>
  <cat-item lemma="керек" tags="adj"/>
   <cat-item lemma="керек" tags="adj.*"/>
<cat-item lemma="керек" tags="vaux"/>
<cat-item lemma="керек" tags="vaux.*"/>
    </def-cat>

<def-cat n="emes">
<cat-item lemma="е" tags="adv"/>
      <cat-item lemma="е" tags="adv.*"/>
 <cat-item lemma="е" tags="vaux"/>
      <cat-item lemma="е" tags="vaux.*"/>
<cat-item lemma="е" tags="cop.neg"/>
<cat-item lemma="е" tags="cop.neg.*"/>

    </def-cat>
<def-cat n="years_old">
 <cat-item lemma="жас" tags="n.loc"/>
      <cat-item lemma="жас" tags="adj.subst.*.*"/>
    </def-cat>

<def-cat n="astam">
 
      <cat-item lemma="астам" tags="adj.subst.*"/>
    </def-cat>
<def-cat n="edi">
 <cat-item lemma="е" tags="cop.ifi.p3.*"/>
      <cat-item lemma="е" tags="cop.ifi.*.*"/>
    </def-cat>

<def-cat n="loc-prep">
      <cat-item lemma="арт" tags="n.px3sp.abl"/>
    </def-cat>
    <def-cat n="post">
      <cat-item lemma="лы" tags="post"/>
    <cat-item  tags="post"/>
      <cat-item tags="post.*"/>
      <cat-item tags="post.Rnom"/>
      <cat-item tags="post.Rnom.*"/>
         </def-cat>

 <def-cat n="nom-pr">
<cat-item tags="pr"/>
<cat-item tags="pr.*"/>
 </def-cat>

 <def-cat n="n-pr1">
  <cat-item tags="adv.*"/>
 </def-cat>
    
    <def-cat n="nom-gen">
      <cat-item tags="n.gen"/>
    </def-cat>


<def-cat n="nom1">
<cat-item tags="n.px1sg.nom"/>
 <cat-item tags="n.px1sg.*"/>
 <cat-item tags="n.px2sg.frm.*"/>
   <cat-item tags="n.px3sg.*"/>
 <cat-item tags="n.px1pl.*"/>
<cat-item tags="n.pl.px1зд.*"/>
 <cat-item tags="n.pl.px2sg.frm.*"/>
      

      <cat-item tags="n.px3sp.loc.attr"/>
    <cat-item tags="n.pl.px1sg.*"/>
 <cat-item tags="n.pl.px3sg.*"/>
 <cat-item tags="n.pl.px1pl.*"/>
          </def-cat>

<def-cat n="nom-px3sp">
       <cat-item tags="n.px3sp.nom"/>
 <cat-item tags="n.px3sp.*"/>
  <cat-item tags="n.pl.px3sp.*"/>
           </def-cat>

<def-cat n="ger2">
 <cat-item tags="v.tv.ger.*.nom"/>
           </def-cat>


<def-cat n="n">
       
     
      <cat-item tags="adv.subst"/>
      <cat-item tags="adv.subst.*"/>
    </def-cat>


<def-cat n="n-gen">
     <cat-item tags="n.gen"/>
     <cat-item tags="n.*.gen"/>
    </def-cat>

 <def-cat n="want">
      <cat-item tags="v.*.prc_vol.*.*"/>
     
    </def-cat>


    <def-cat n="ant">
          <cat-item tags="np.ant.*.*"/>

	<!--<cat-item tags="np.loc.*.*"/>
<cat-item tags="np.loc.sg.*"/>-->

    </def-cat>

    <def-cat n="cog">
      <cat-item tags="np.cog.*"/>
      </def-cat>

 <def-cat n="pers-pron">
<cat-item tags="prn.pers.*.*.dat"/>
<cat-item tags="prn.pers.*.*.ins"/>
<cat-item tags="prn.pers.*.*.acc"/>
<cat-item tags="prn.pers.*.*.abl"/>
<cat-item tags="prn.pers.*.*.loc"/>
<cat-item tags="prn.pers.*.*.loc.*"/>
<cat-item tags="prn.pers.*.*.loc.*"/>
    </def-cat>

 <def-cat n="pers-pron-sim">
       <cat-item tags="prn.pers.*.*.sim"/>


    </def-cat>

 <def-cat n="pers-pron1">
      <cat-item tags="prn.pers.*.*.nom"/>
     <!-- <cat-item tags="prn.pers.*.*.loc"/>-->
    </def-cat>

<def-cat n="pers-pron-gen">
      <cat-item tags="prn.pers.*.*.gen.subst.*"/>
     <!-- <cat-item tags="prn.pers.*.*.loc"/>-->
    </def-cat>



    <def-cat n="cop-fin">
      <cat-item tags="cop.ifi.*"/>
      <cat-item tags="cop.pres.*"/>

    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
<cat-item tags="RESsent.sent"/>
<cat-item tags="cm"/>
    </def-cat>
<def-cat n="qst">
      <cat-item tags="qst"/>
    </def-cat>
 <def-cat n="cnjcoo">
       <cat-item tags="cnjcoo"/>
    </def-cat>
 
<!--<def-cat n="CAT__adj_">

   
 <cat-item lemma="советтік" tags="adj.*"/>
    <cat-item lemma="советтік" tags="adj"/>
<cat-item lemma="басқа" tags="adj.*"/>
    <cat-item lemma="басқа" tags="adj"/>
<cat-item lemma="барлық" tags="adj.*"/>
    <cat-item lemma="барлық" tags="adj"/>
  </def-cat>-->
  <def-cat n="CAT__adv_">
    <cat-item lemma="үстінде" tags="adv.*"/>
    <cat-item lemma="үстінде" tags="adv"/>
<cat-item lemma="өте" tags="adv.*"/>
    <cat-item lemma="өте" tags="adv"/>
<cat-item lemma="анда" tags="adv.*"/>
    <cat-item lemma="анда" tags="adv"/>
<cat-item lemma="көбірек" tags="adv.*"/>
    <cat-item lemma="көбірек" tags="adv"/>
  </def-cat>
  <def-cat n="CAT__n_">
   <!-- <cat-item tags="n.*"/>
    <cat-item tags="n"/>-->
<cat-item lemma="жыл" tags="n.*"/>
    <cat-item lemma="жыл" tags="n"/>
<!--<cat-item lemma="сырт" tags="n.*"/>
    <cat-item lemma="сырт" tags="n"/>
<cat-item lemma="рет" tags="n.*"/>
    <cat-item lemma="рет" tags="n"/>-->
  </def-cat>
  <def-cat n="CAT__num_">
    <cat-item tags="num.*"/>

    <cat-item tags="num"/>

  </def-cat>
  <def-cat n="CAT__post_">
    <cat-item lemma="арқылы" tags="post.*"/>
    <cat-item lemma="Арқылы" tags="post"/>
  </def-cat>
  <def-cat n="CAT__v_">
    <cat-item tags="v.*"/>
    <cat-item tags="v"/>
  </def-cat>
  <def-cat n="CAT__vaux_">
    <cat-item lemma="ал" tags="vaux.*"/>
    <cat-item lemma="Ал" tags="vaux"/>
  </def-cat>
<def-cat n="CAT__HASGENDER_NUMBER"><cat-item tags="*.m.*"/><cat-item tags="*.f.*"/><cat-item tags="*.sg.*"/><cat-item tags="*.pl.*"/></def-cat>  <def-cat n="CAT__ND_GD">
    <cat-item tags="*.mf.*"/>
    <cat-item tags="*.sp.*"/>
    <cat-item tags="*.mf.sp.*"/>
    <cat-item tags="*.sp.mf.*"/>
    <cat-item tags="*.mf.*.sp.*"/>
    <cat-item tags="*.sp.*.mf.*"/>
  </def-cat>
<!--  <def-cat n="sent">
    <cat-item tags="sent"/>
    
  </def-cat>-->
  <def-cat n="any">
    <cat-item tags="*"/>
  </def-cat>


  </section-def-cats>
  <section-def-attrs>
    <def-attr n="a_verb">
      <attr-item tags="v"/>
      <attr-item tags="vblex"/>
<attr-item tags="vbser"/>
    </def-attr>

 <def-attr n="a_sint">
     
      <attr-item tags="sint"/>

    </def-attr>
 <def-attr n="a_sim">
     
      <attr-item tags="sim"/>

    </def-attr>

<def-attr n="a_det">
     
      <attr-item tags="det"/>

    </def-attr>

<def-attr n="a_SYNLABEL">
      <attr-item tags="@ADVL→"/>
    </def-attr>

<def-attr n="a_prn">
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.dem.adv"/>
<attr-item tags="prn.itg.*"/>

        </def-attr>  

 <def-attr n="a_num">
      <attr-item tags="num"/>
        </def-attr>  
    <def-attr n="a_nom">
      <attr-item tags="n"/>
            <attr-item tags="n.acr"/>
      
      <attr-item tags="np.top"/>
      <attr-item tags="np.al"/>
      <attr-item tags="pr"/>
<!--<attr-item tags="prn.pers.p1"/>
      <attr-item tags="prn.pers.p2"/>
      <attr-item tags="prn.pers.p3"/>
      <attr-item tags="prn.dem"/>
      <attr-item tags="prn.def"/>
      <attr-item tags="prn.itg"/>
      <attr-item tags="prn.neg"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.ref"/>

      <attr-item tags="adj"/>
      <attr-item tags="adj.sint"/>
      <attr-item tags="det.pos"/>
      <attr-item tags="det.def"/>
      <attr-item tags="det.ref"/>
      <attr-item tags="num"/>-->
    
    </def-attr>


<def-attr n="a_abbr">

           
      <attr-item tags="abbr"/>
<attr-item tags="abbr.*"/>
    
    </def-attr>

 <def-attr n="a_pron">

           
      <attr-item tags="prn.ref"/>

    
    </def-attr>



 <def-attr n="a_syntag">
      <attr-item tags="advl"/>
      <attr-item tags="attr"/>
      <attr-item tags="subst"/>
    </def-attr>
    <def-attr n="a_adjec">
      <attr-item tags="adj"/>
      <attr-item tags="adj.sint"/>
    
    </def-attr>
    <def-attr n="a_nbr">
      <attr-item tags="sg"/>
      <attr-item tags="sp"/>
      <attr-item tags="pl"/>
      <attr-item tags="ND"/>
    </def-attr>
    <def-attr n="a_case">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="gen"/>
      <attr-item tags="loc"/>
      <attr-item tags="ins"/>
      <attr-item tags="abl"/>
    </def-attr>
    <def-attr n="a_tns">
      <attr-item tags="ifi"/>
      <attr-item tags="pres"/>
      <attr-item tags="aor"/>
      <attr-item tags="past"/>
      <attr-item tags="pri"/>
       <attr-item tags="prc_pers"/>
      <attr-item tags="imp"/>
      <attr-item tags="inf"/>
      <attr-item tags="ger"/>
      <attr-item tags="pprs"/>
      <attr-item tags="gna_perf"/>
      <attr-item tags="ger_perf"/>
      <attr-item tags="gna9"/>
      <attr-item tags="prc_impf"/>
      <attr-item tags="ger_past"/>
    </def-attr>
    <def-attr n="a_pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
      <attr-item tags="PD"/>
    </def-attr>
<def-attr n="a_pos">
      <attr-item tags="px1sg"/>
      <attr-item tags="px2sg.frm"/>
      <attr-item tags="px3sg"/>
<attr-item tags="px3sp"/>
<attr-item tags="px3pl"/>
<attr-item tags="px2pl"/>
<attr-item tags="px2sg"/>
<attr-item tags="px1pl"/>
<attr-item tags="PD"/>
    </def-attr>

<def-attr n="a_eng_verb"> 
      <attr-item tags="v.tv"/>
      <attr-item tags="v.iv"/>
    </def-attr>

<def-attr n="a_adv">
      <attr-item tags="adv"/>
      <attr-item tags="pr"/>
     
    </def-attr>

<def-attr n="a_num_sp"> 
      <attr-item tags="sp"/>

    </def-attr>

<def-attr n="a_eng_perspron">
       <attr-item tags="prn.subj"/>
    </def-attr>
<def-attr n="a_mf">
      <attr-item tags="mf"/>
      <attr-item tags="m"/>
      <attr-item tags="f"/>
    </def-attr>
<def-attr n="a_np">
      <attr-item tags="np"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.cog"/>
    </def-attr>

<def-attr n="a_transitivity">
      <attr-item tags="iv"/>
      <attr-item tags="tv"/>
    </def-attr>

<def-attr n="a_cnjsub">
       <attr-item tags="cnjsub"/>
       <attr-item tags="adv"/>
    </def-attr>
 <def-attr n="a_cnjcoo">
       <attr-item tags="post"/>
       <attr-item tags="cnjcoo"/>
    </def-attr>
 <def-attr n="a_postposition">
       <attr-item tags="post"/>
    </def-attr>

 <def-attr n="learned_advtype">
    <attr-item tags="itg"/>
  </def-attr>
  <def-attr n="learned_attruse">
    <attr-item tags="advl"/>
    <attr-item tags="attr"/>
    <attr-item tags="subst"/>
  </def-attr>
  <def-attr n="learned_case">
    <attr-item tags="abe"/>
    <attr-item tags="abl"/>
    <attr-item tags="acc"/>
    <attr-item tags="dat"/>
    <attr-item tags="gen"/>
    <attr-item tags="ins"/>
    <attr-item tags="loc"/>
    <attr-item tags="nom"/>
    <attr-item tags="reas"/>
    <attr-item tags="sim"/>
  </def-attr>
  <def-attr n="learned_derivation">
    <attr-item tags="caus"/>
    <attr-item tags="coop"/>
    <attr-item tags="pass"/>
  </def-attr>
  <def-attr n="learned_determinertype">
    <attr-item tags="def"/>
    <attr-item tags="dem"/>
    <attr-item tags="ind"/>
    <attr-item tags="itg"/>
    <attr-item tags="neg"/>
    <attr-item tags="ord"/>
    <attr-item tags="pos"/>
    <attr-item tags="qnt"/>
    <attr-item tags="ref"/>
  </def-attr>
  <def-attr n="learned_form">
    <attr-item tags="frm"/>
  </def-attr>
  <def-attr n="learned_gender">
    <attr-item tags="GD"/>
    <attr-item tags="f"/>
    <attr-item tags="m"/>
    <attr-item tags="mf"/>
    <attr-item tags="nt"/>
  </def-attr>
  <def-attr n="learned_isacr">
    <attr-item tags="acr"/>
  </def-attr>
  <def-attr n="learned_isadjsint">
    <attr-item tags="sint"/>
  </def-attr>
  <def-attr n="learned_isadv">
    <attr-item tags="adv"/>
  </def-attr>
  <def-attr n="learned_iscomp">
    <attr-item tags="comp"/>
    <attr-item tags="sup"/>
  </def-attr>
  <def-attr n="learned_issepverb">
    <attr-item tags="sep"/>
  </def-attr>
  <def-attr n="learned_modalpat">
    <attr-item tags="emph"/>
    <attr-item tags="mod"/>
    <attr-item tags="mod_ass"/>
    <attr-item tags="qst"/>
  </def-attr>
  <def-attr n="learned_mood">
    <attr-item tags="evid"/>
    <attr-item tags="imp"/>
    <attr-item tags="opt"/>
  </def-attr>
  <def-attr n="learned_negative">
    <attr-item tags="neg"/>
  </def-attr>
  <def-attr n="learned_nptype">
    <attr-item tags="al"/>
    <attr-item tags="ant"/>
    <attr-item tags="cog"/>
    <attr-item tags="org"/>
    <attr-item tags="top"/>
    <attr-item tags="unk"/>
  </def-attr>
  <def-attr n="learned_numberat">
    <attr-item tags="ND"/>
    <attr-item tags="pl"/>
    <attr-item tags="sg"/>
    <attr-item tags="sp"/>
  </def-attr>
  <def-attr n="learned_numtype">
    <attr-item tags="coll"/>
    <attr-item tags="mon"/>
    <attr-item tags="ord"/>
    <attr-item tags="percent"/>
    <attr-item tags="year"/>
  </def-attr>
  <def-attr n="learned_person">
    <attr-item tags="PD"/>
    <attr-item tags="p1"/>
    <attr-item tags="p2"/>
    <attr-item tags="p3"/>
  </def-attr>
  <def-attr n="learned_possessive">
    <attr-item tags="PXD"/>
    <attr-item tags="px"/>
    <attr-item tags="px1pl"/>
    <attr-item tags="px1sg"/>
    <attr-item tags="px2pl"/>
    <attr-item tags="px2sg"/>
    <attr-item tags="px3pl"/>
    <attr-item tags="px3sp"/>
  </def-attr>
  <def-attr n="learned_posttransfer">
    <attr-item tags="Rabl"/>
    <attr-item tags="Racc"/>
    <attr-item tags="Rdat"/>
    <attr-item tags="Rgen"/>
    <attr-item tags="Rins"/>
    <attr-item tags="Rloc"/>
    <attr-item tags="Rnom"/>
  </def-attr>
  <def-attr n="learned_prntype">
    <attr-item tags="dem"/>
    <attr-item tags="ind"/>
    <attr-item tags="itg"/>
    <attr-item tags="neg"/>
    <attr-item tags="obj"/>
    <attr-item tags="pers"/>
    <attr-item tags="pos"/>
    <attr-item tags="qnt"/>
    <attr-item tags="recip"/>
    <attr-item tags="ref"/>
    <attr-item tags="subj"/>
    <attr-item tags="tn"/>
  </def-attr>
  <def-attr n="learned_reltype">
    <attr-item tags="aa"/>
    <attr-item tags="adv"/>
    <attr-item tags="an"/>
    <attr-item tags="nn"/>
  </def-attr>
  <def-attr n="learned_verbtime">
    <attr-item tags="aor"/>
    <attr-item tags="cni"/>
    <attr-item tags="fti"/>
    <attr-item tags="fts"/>
    <attr-item tags="fut"/>
    <attr-item tags="fut_plan"/>
    <attr-item tags="ger"/>
    <attr-item tags="ger_abs"/>
    <attr-item tags="ger_fut"/>
    <attr-item tags="ger_impf"/>
    <attr-item tags="ger_past"/>
    <attr-item tags="ger_perf"/>
    <attr-item tags="ger_ppot"/>
    <attr-item tags="gna_after"/>
    <attr-item tags="gna_cond"/>
    <attr-item tags="gna_perf"/>
    <attr-item tags="gna_until"/>
    <attr-item tags="gpr_fut"/>
    <attr-item tags="gpr_impf"/>
    <attr-item tags="gpr_past"/>
    <attr-item tags="gpr_pot"/>
    <attr-item tags="gpr_ppot"/>
    <attr-item tags="ifi"/>
    <attr-item tags="ifi_evid"/>
    <attr-item tags="inf"/>
    <attr-item tags="past"/>
    <attr-item tags="pih"/>
    <attr-item tags="pii"/>
    <attr-item tags="pis"/>
    <attr-item tags="pp"/>
    <attr-item tags="pprs"/>
    <attr-item tags="prc_cond"/>
    <attr-item tags="prc_fplan"/>
    <attr-item tags="prc_impf"/>
    <attr-item tags="prc_perf"/>
    <attr-item tags="prc_plan"/>
    <attr-item tags="prc_vol"/>
    <attr-item tags="pres"/>
    <attr-item tags="prs"/>
    <attr-item tags="subs"/>
  </def-attr>
  <def-attr n="learned_verbtype">
    <attr-item tags="iv"/>
    <attr-item tags="tv"/>
  </def-attr>
  <def-attr n="learned_gen">
    <attr-item tags="m"/>
    <attr-item tags="f"/>
    <attr-item tags="mf"/>
    <attr-item tags="GD"/>
  </def-attr>
  <def-attr n="learned_num">
    <attr-item tags="sg"/>
    <attr-item tags="pl"/>
    <attr-item tags="sp"/>
    <attr-item tags="ND"/>
  </def-attr>

  </section-def-attrs>
  <section-def-vars>
    <def-var n="number"/>
<def-var n="var-pos"/>
<def-var n="pos"/>
<def-var n="NEW-noun_lu"/>
<def-var n="num1"/>
<def-var n="num_lu"/>
<def-var n="nbr"/>
<def-var n="pers"/>
<def-var n="var-np"/>
<def-var n="genre"/>
<def-var n="sp-nbr"/>
<def-var n="preposition"/>
    <def-var n="possessive"/>

    <def-var n="sntype"/>
    <def-var n="current_verb"/>
   <def-var n="adjec_lu"/>
<def-var n="comp_lu"/>
<def-var n="noun_lu"/>
<def-var n="verb-pers"/> <!-- State variable -->
    <def-var n="verb-nbr"/> <!-- State variable -->
 <def-var n="formality"/> 
 <def-var n="case"/>
 <def-var n="number1"/>
 <def-var n="mf"/>
 <def-var n="cnjcoo_lu"/> <!-- for THAN --> 

 <def-var n="pptag"/> <!-- Will contain the tag of the next postpositional phrase generated (AdvP, GenP, etc.) -->

    <def-var n="genpp"/> <!-- yes: will generate postposition; no= won't -->
   <def-var n="postposition_lu"/> 
  </section-def-vars>

<section-def-lists>
    <def-list n="pseudo_modal_verbs">  
      <list-item v="жатыр"/>
      <list-item v="отыр"/>
      <list-item v="тұр"/>
      <list-item v="жүр"/>
     <list-item v="ал"/>
    </def-list>
<def-list n="nouns-with-loc-case">
      <list-item v="year"/>
      <list-item v="garden"/>
      
    </def-list>



</section-def-lists>
  <section-def-macros>

<def-macro n="f_bcond" npar="2">
<!--To test whether a blank contains format information.
If no format information is present it is removed. -->
  <choose>
    <when>
      <test>
        <not>
	 <equal>
	   <b pos="1"/>
	   <lit v=" "/>
	 </equal>
	 </not>
      </test>
      <out>
        <b pos="1"/>
      </out>
    </when>
  </choose>
</def-macro>
<def-macro n="f_genre_num" npar="1">
<!--To set the global value storing the TL genre of the last seen word. -->
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="learned_gen"/>
          <lit-tag v="m"/>
        </equal>
      </test>
      <let><var n="genre"/><lit-tag v="m"/></let>
    </when>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="learned_gen"/>
          <lit-tag v="f"/>
        </equal>
      </test>
      <let><var n="genre"/><lit-tag v="f"/></let>
    </when>
  </choose>
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="learned_num"/>
          <lit-tag v="sg"/>
        </equal>
      </test>
      <let><var n="number"/><lit-tag v="sg"/></let>
    </when>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="learned_num"/>
          <lit-tag v="pl"/>
        </equal>
      </test>
      <let><var n="number"/><lit-tag v="pl"/></let>
    </when>
  </choose>
</def-macro>
<def-macro n="f_set_genre_num" npar="1">
<!--To set the genre of those words with GD, and the number of those words with ND. -->
<!--This is only used in no alignment template at all is applied. -->
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="learned_gen"/>
          <lit-tag v="GD"/>
        </equal>
      </test>
      <choose>
        <when>
          <test>
            <equal>
              <var n="genre"/>
              <lit-tag v="f"/>
            </equal>
          </test>
          <let><clip pos="1" side="tl" part="learned_gen"/><lit-tag v="f"/></let>
        </when>
        <otherwise>
          <let><clip pos="1" side="tl" part="learned_gen"/><lit-tag v="m"/></let>
        </otherwise>
      </choose>
    </when>
  </choose>
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="learned_num"/>
          <lit-tag v="ND"/>
        </equal>
      </test>
      <choose>
        <when>
          <test>
            <equal>
              <var n="number"/>
              <lit-tag v="pl"/>
            </equal>
          </test>
          <let><clip pos="1" side="tl" part="learned_num"/><lit-tag v="pl"/></let>
        </when>
        <otherwise>
          <let><clip pos="1" side="tl" part="learned_num"/><lit-tag v="sg"/></let>
        </otherwise>
      </choose>
    </when>
  </choose>
</def-macro>
<def-macro n="return-number-of-sl-word" npar="1">
      
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/>
            </equal>
          </test>
          <let><var n="number"/><lit-tag v="pl"/></let>
        </when>
        <otherwise>
          <let><var n="number"/><lit-tag v="sg"/></let>
        </otherwise>   
      </choose>
    </def-macro>


<def-macro n="convert-poss-affix-to-poss-determiner" npar="1">
      
      <let><var n="possessive"/><lit v=""/></let>
      
      <choose>
        <when>
          <test><and>
            <equal><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></equal>
            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px1sg"/></equal>
          </and></test>
          <let><var n="possessive"/>
          <concat>
            <lit v="my"/>
            <lit-tag v="det"/><lit-tag v="pos"/>
             <lit-tag v="sg"/>
                       

          </concat>
          </let>  
        </when>
        <when>
	  <test><and>
	    <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
	    <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px1pl"/></equal>
          </and></test>
          <let><var n="possessive"/>
          <concat>
            <lit v="our"/>
            <lit-tag v="det"/><lit-tag v="pos"/>
            <lit-tag v="pl"/>
                       

          </concat>
          </let>  
        </when>
        <when>
          <test><and>
            <equal><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></equal>
<or>
            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2sg"/></equal>
 <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2sg.frm"/></equal>
</or>
          </and></test>
          <let><var n="possessive"/>
          <concat>
            <lit v="your"/>
            <lit-tag v="det"/><lit-tag v="pos"/>
             <lit-tag v="sg"/>         
           

          </concat>
          </let>  
        </when>
        <when>
          <test><and>
            <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3sp"/></equal>
          </and></test>
          <let><var n="possessive"/>
          <concat>
            <lit v="their"/>
            <lit-tag v="det"/><lit-tag v="pos"/>
            <lit-tag v="pl"/>
            

          </concat>
          </let>  
        </when>
<when>
          <test><and>
            <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
           <or>
            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2sg"/></equal>
 <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2sg.frm"/></equal>
</or>
          </and></test>
          <let><var n="possessive"/>
          <concat>
            <lit v="your"/>
            <lit-tag v="det"/><lit-tag v="pos"/>
            <lit-tag v="sg"/>
            

          </concat>
          </let>  
</when>
<when>
          <test>
            <and>
            <equal><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></equal>
            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3sp"/></equal>
</and>
          </test>
          <let><var n="possessive"/>
          <concat>
            <lit v="his"/>
            <lit-tag v="prn"/><lit-tag v="pos"/>
            <lit-tag v="m"/>
            <lit-tag v="sg"/>

          </concat>
          </let>  
        </when>
      </choose>
    </def-macro>



<def-macro n="convert-poss-to-pers" npar="1">
      

      
      <choose>
        <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px1sg"/></equal>
          </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p1"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="myself"/></let>
         
        </when>
        <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2sg.frm"/></equal>
         </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p2"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="yourself"/></let>

         
        </when>
 <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2sg"/></equal>
         </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p2"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="yourself"/></let>

         
        </when>
        <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3sg"/></equal>
         </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p3"/></let>
                  <let><var n="mf"/><lit-tag v="m"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="himself"/></let>
         
        </when>
       <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3sp"/></equal>
         </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p3"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="themselves"/></let>
         
        </when>
  <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3pl"/></equal>
         </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p3"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="themselves"/></let>
         
        </when>
 <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px1pl"/></equal>
         </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p1"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="ourselves"/></let>
         
        </when>
        <when>
          <test>

            <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px2pl"/></equal>
          </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
          <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p2"/></let>
                  <let><var n="mf"/><lit-tag v="mf"/></let>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="yourselves"/></let>
         
        </when>
      </choose>
    </def-macro>


 <def-macro n="translate-noun" npar="1">
     
      <call-macro n="return-number-of-sl-word">
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when>
          <test>
            <or>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/></equal>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/></equal>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="dat"/></equal>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="acc"/></equal>
            </or>
          </test>
          <let><var n="preposition"/><lit v=""/></let>
          <let><var n="case"/><clip pos="1" side="tl" part="a_case"/></let>
        </when>
        <when>
          <test><equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="abl"/></equal></test>
          <let><var n="preposition"/><concat><lit v="^from"/><lit-tag v="pr"/><lit v="$ "/></concat></let>
          <let><var n="case"/><lit-tag v="gen"/></let>
        </when>
        <when>
          <test><equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="loc"/></equal></test>
	  <let><var n="preposition"/><concat><lit v="^in"/><lit-tag v="pr"/><lit v="$ "/></concat></let>
	  <choose>
	    <when>
	      <test><in caseless="yes"><clip pos="1" side="tl" part="lem"/><list n="nouns-with-loc-case"/></in></test>
              <let><var n="case"/><lit-tag v="loc"/></let>
            </when>
	    <otherwise>
              <let><var n="case"/><lit-tag v="prp"/></let>
	    </otherwise>
	  </choose>
	</when>
        <when>
          <test><equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="sim"/></equal></test>
          <let><var n="preposition"/><concat><lit v="^like"/><lit-tag v="adv"/><lit-tag v="rel"/><lit v="$ "/></concat></let>
          <let><var n="case"/><lit-tag v="nom"/></let>
        </when>
        <when>
          <test><equal><clip pos="1" side="sl" part="a_case"/><lit v=""/></equal></test>
          <let><var n="case"/><lit-tag v="nom"/></let>
        </when>
        <when>
          <test><equal><clip pos="1" side="sl" part="learned_possessive"/><lit-tag v="px"/></equal></test>
          <let><var n="case"/><lit-tag v="gen"/></let>
        </when>
      </choose>
      <choose>
        <when>
          <test>
	    <and>
              <equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="adj"/></equal>
	      <equal><var n="number"/><lit-tag v="pl"/></equal>
	    </and>
	  </test>
	  <let><clip pos="1" side="tl" part="a_mf"/><lit-tag v="mf"/></let>
	</when>
      </choose>
      <choose>
        <when>
          <test>
	    <and>
	      <or>
		<equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="adj"/></equal>
		<equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="det"/></equal>
	      </or>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="acc"/></equal>
	      <or>
		<equal><clip pos="1" side="tl" part="a_mf"/><lit-tag v="m"/></equal>
		<equal><clip pos="1" side="tl" part="a_mf"/><lit-tag v="mf"/></equal>
	      </or>
	    </and>
	  </test>
	 
	</when>
      </choose>
      <choose>
        <when>
          <test>
	    <and>
              <equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="np.cog"/></equal>
	      <equal><var n="number"/><lit-tag v="pl"/></equal>
	    </and>
	  </test>
	  <let><clip pos="1" side="tl" part="a_mf"/><lit-tag v="mf"/></let>
	</when>
      </choose>
      <let>
        <clip pos="1" side="tl" part="whole"/>
        <concat>
          <clip pos="1" side="tl" part="lemh"/>
          <clip pos="1" side="tl" part="a_nom"/>
          <clip pos="1" side="tl" part="a_mf"/>
          
          <var n="number"/>
          <var n="case"/>
          <clip pos="1" side="tl" part="lemq"/>
        </concat>
      </let>
      <call-macro n="convert-poss-affix-to-poss-determiner">
        <with-param pos="1"/>
      </call-macro>
    </def-macro>

    <def-macro n="reset-vars1" npar="1">
          <let><var n="sntype"/><lit v=""/></let>
          <let><var n="number"/><lit v=""/></let>
          <let><var n="postposition_lu"/><lit v=""/></let>
    </def-macro>


<def-macro n="NEW-build-np" npar="1"> 
     <let>
           <var n="NEW-noun_lu"/>
           <concat>
               <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_np"/>
              <!-- <lit-tag v="2"/> 
		<lit-tag v="3"/> -->
               <lit-tag v="4"/> 
              <lit-tag v="sg"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="NEW-build-noun-lu-3-4-5" npar="1"> 
     <let>
           <var n="NEW-noun_lu"/>
           <concat>
               <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_nom"/>
              <!-- <lit-tag v="2"/> 
		<lit-tag v="3"/> -->
               <lit-tag v="4"/> <!-- for possessive -->
              <lit-tag v="5"/>
           </concat>  
        </let>
</def-macro>


<def-macro n="build-num-lu" npar="1"> 
     <let>
           <var n="num_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_num"/>
               <clip pos="1" side="tl" part="a_mf"/>
               <clip pos="1" side="tl" part="a_nbr"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="build-cnjcoo-lu" npar="1"> 
     <let>
           <var n="cnjcoo_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
             <clip pos="1" side="tl" part="a_cnjcoo"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="NEW-modal-verb" npar="1">  <!--жатыр,тұр,отыр,жүр -->
<choose>
<when>
<test>
   <in caseless="yes">
      <clip pos="1" side="sl" part="lem"/>
      <list n="pseudo_modal_verbs"/>
   </in>
</test>
<out>
      <chunk name="modal-verb">
      <tags>
        <tag><lit-tag v="SV_psmod"/></tag> 
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><clip pos="1" side="tl" part="a_tns"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="PXD"/></tag> 
        <tag><lit-tag v="NXD"/></tag> <!-- negative -->
      </tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_eng_verb"/>
          <lit-tag v="6"/>
          <lit-tag v="4"/>

          <lit-tag v="3"/>
          <lit-tag v="2"/>
        </lu>
      </chunk>
</out>
</when>

<otherwise>
<out>
      <chunk name="modal-verb">
      <tags>
        <tag><lit-tag v="SV"/></tag>
        <tag><lit-tag v="ND"/></tag> <!-- number -->
        <tag><lit-tag v="PD"/></tag> <!-- person -->
        <tag><clip pos="1" side="tl" part="a_tns"/></tag>  <!-- tense/conditionality -->
        <tag><lit-tag v="a_pos"/></tag> <!-- possessives for verbs??? maybe we need them -->
        <tag><lit-tag v="NXD"/></tag><!-- negative -->
        <tag><lit-tag v="CD"/></tag> 
      </tags>
        <lu>
          <clip pos="3" side="tl" part="lem"/>
	  <clip pos="3" side="tl" part="a_eng_verb"/>
          <lit-tag v="1"/>
          <lit-tag v="2"/>
         
        </lu>
      </chunk>
        </out>
</otherwise>
</choose>
</def-macro>



<def-macro n="choose_case_and_postposition1" npar="1">  
    <let><var n="pptag"/><lit-tag v="PP"/></let> 
    <let><var n="genpp"/><lit v="no"/></let> 
    
    <choose>
      <when>
        <test>
          <equal><var n="genpp"/><lit v="no"/></equal>
        </test>
        <choose> <!-- no postpositions -->
          <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="loc"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="in"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 

<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="abl"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="from"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="dat"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="to"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="gen"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="of"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 

     
  <when>   
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="a_case"/>
            <lit-tag v="ins"/>
          </equal>
        </test>
       <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="with"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
    </when> 
                  <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="dat"/>
              </equal>
            </test>
            <let>
              <var n="case"/>
              <lit v="to"/>
            </let>
      </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="a_case"/>
                  <lit-tag v="ins"/>
                </equal>
             </test>
             <let>
               <var n="case"/>
               <lit v="with"/>
             </let>
              </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="a_case"/>
                  <lit-tag v="gen"/>
                 </equal>
              </test>
              <let>
                <var n="case"/>
                <lit-tag v="of"/>
              </let>
              <let>
                 <var n="pptag"/>
                 <lit v="GenP"/>   
              </let>
       </when>    

           <otherwise>
              <let>
                <var n="case"/>
                <lit-tag v="ins"/> 
              </let>
              <let>
                <var n="pptag"/>
                <lit-tag v="PP"/>  
              </let>
<let><var n="postposition_lu"/> <!-- ready for lu -->

                       <lit v=""/>
                        
             </let>
            </otherwise>
    </choose>
      </when> 

      <when>  <!--- Now, with postpositions -->
        <test>
          <equal>
             <var n="genpp"/>
             <lit v="yes"/>
          </equal>
        </test>
        <choose> <!-- Generate postposition --> 
          <when> <!-- noun-based postpositions -->
             <test>
               <equal>
                 <clip side="tl" part="a_postposition" pos="1"/>
                 <lit-tag v="n"/>
           </equal>
             </test>
             <let><var n="case"/><lit-tag v="gen"/></let>
             <let><var n="pptag"/><lit-tag v="PP"/></let>
             <!-- we need to compute "possessive"  --> 
 
<let><var n="var-pos"/><lit-tag v="px3sp"/></let> <!-- default value -->

<choose> 
<when>
   <test>
      <and>
          <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag  v="p1"/></equal>
          <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
       </and>
    </test>      
          <let><var  n="var-pos"/><lit-tag v="px1sg"/></let>
</when>


<when>
   <test>
      <and>
          <equal><clip  pos="1" side="sl" part="a_pers"/><lit-tag  v="p1"/></equal>
          <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
       </and>
    </test>      
          <let><var  n="var-pos"/><lit-tag v="px1pl"/></let>
</when>
               
             </choose>
             <let><var n="pptag"/><lit-tag v="PP"/></let>
             <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                        <clip pos="1" side="tl" part="lem"/>
                        <lit-tag v="post"/>
                      </concat>
             </let>
      </when>
    </choose>
       </when>
     </choose>
    </def-macro>


<def-macro n="choose_case_and_postposition2" npar="2">  
    <let><var n="pptag"/><lit-tag v="PP"/></let> 
    <let><var n="genpp"/><lit v="no"/></let> 
    <choose>
      <when> <!-- make genpp="yes" when a postposition is detected -->
        <test>
          <or>
            <equal>
               <clip pos="1" side="tl" part="a_postposition"/>
               <lit-tag v="n"/>
            </equal>
     
            <equal>
               <clip pos="1" side="tl" part="a_postposition"/>
               <lit-tag v="post"/>
            </equal>

          </or>  
        </test>
        <let><var n="genpp"/><lit v="yes"/></let> <!-- for simple cases -->
      </when>
    </choose>

    <choose>
      <when>
        <test>
          <equal><var n="genpp"/><lit v="no"/></equal>
        </test>
        <choose> <!-- no postpositions -->
          <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="loc"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="in"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 

<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="abl"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="from"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="dat"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="to"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 
<when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="gen"/>
              </equal>
            </test>
            <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="of"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
       </when> 

     
  <when>   
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="a_case"/>
            <lit-tag v="ins"/>
          </equal>
        </test>
       <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                       <lit v="with"/>
                        <lit-tag v="pr"/>          
                      </concat>
             </let>
    </when> 
                  <when> 
            <test>
              <equal caseless="yes">
                <clip pos="1" side="sl" part="a_case"/>
                <lit-tag v="dat"/>
              </equal>
            </test>
            <let>
              <var n="case"/>
              <lit v="to"/>
            </let>
      </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="a_case"/>
                  <lit-tag v="ins"/>
                </equal>
             </test>
             <let>
               <var n="case"/>
               <lit v="with"/>
             </let>
              </when>    

           <when> 
             <test>
                <equal caseless="yes">
                  <clip pos="1" side="sl" part="a_case"/>
                  <lit-tag v="gen"/>
                 </equal>
              </test>
              <let>
                <var n="case"/>
                <lit-tag v="of"/>
              </let>
              <let>
                 <var n="pptag"/>
                 <lit v="GenP"/>   
              </let>
       </when>    

           <otherwise>
              <let>
                <var n="case"/>
                <lit-tag v="ins"/> 
              </let>
              <let>
                <var n="pptag"/>
                <lit-tag v="PP"/>  
              </let>
<let><var n="postposition_lu"/> <!-- ready for lu -->

                       <lit v=""/>
                        
             </let>
            </otherwise>
    </choose>
      </when> 

      <when>  <!--- Now, with postpositions -->
        <test>
          <equal>
             <var n="genpp"/>
             <lit v="yes"/>
          </equal>
        </test>
        <choose> <!-- Generate postposition --> 
          <when> <!-- noun-based postpositions -->
             <test>
               <equal>
                 <clip side="tl" part="a_postposition" pos="1"/>
                 <lit-tag v="n"/>
           </equal>
             </test>
             <let><var n="case"/><lit-tag v="gen"/></let>
             <let><var n="pptag"/><lit-tag v="PP"/></let>
             <!-- we need to compute "possessive"  --> 
 
<let><var n="var-pos"/><lit-tag v="px3sp"/></let> <!-- default value -->

<choose> 
<when>
   <test>
      <and>
          <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag  v="p1"/></equal>
          <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
       </and>
    </test>      
          <let><var  n="var-pos"/><lit-tag v="px1sg"/></let>
</when>


<when>
   <test>
      <and>
          <equal><clip  pos="2" side="sl" part="a_pers"/><lit-tag  v="p1"/></equal>
          <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
       </and>
    </test>      
          <let><var  n="var-pos"/><lit-tag v="px1pl"/></let>
</when>
               
             </choose>
             <let><var n="pptag"/><lit-tag v="PP"/></let>
             <let><var n="postposition_lu"/> <!-- ready for lu -->
                      <concat>
                        <clip pos="1" side="tl" part="lem"/>
                        <lit-tag v="post"/>
                      </concat>
             </let>
      </when>
    </choose>
       </when>
     </choose>
    </def-macro>


    <def-macro n="conv-temps1" npar="1">
          <choose> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="ifi"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="past"/></let>
              </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="aor"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
                </when>

               <when>
                   <test>
                   <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="imp"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>

                </when>
<when>
                   <test>
<or>
                   <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="gna_perf"/></equal>
                   <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="ger_perf"/></equal>
</or>
                      </test>
                 <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>

                </when>
<otherwise>
                 <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
</otherwise>
          </choose> 
              

    </def-macro>


  <def-macro n="conv-vpron" npar="1">

<choose>
                 <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      
                  </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
              </choose>
           <choose>
               <when>
                   <test>
                     <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>

                     </and>
                  </test>
                  <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                </when>
               
              </choose>
<choose>
               <when>
                   <test>
                    
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       
                    
                  </test>
                  <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                </when>
                <otherwise>
                  <let><clip pos="1" side="tl" part="a_pers"/><lit-tag v="p3"/></let>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>
               <when>
                   <test>
                     <and>
                       <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="ifi"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>

                     </and>
                  </test>
                  <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                </when>
               
              </choose>
     </def-macro>


    <def-macro n="conv-number1" npar="1">
      <choose>
            <when>
               <test>
                  <not><equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal></not>
               </test>
               <let><var n="number"/><lit-tag v="sg"/></let>
            </when> 
<when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
               </test>
               <let><var n="number"/><lit-tag v="pl"/></let>
            </when> 

</choose>
<choose>
<when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_nom"/><lit-tag v="np"/></equal>
               </test>
               <let><var n="number"/><lit v=""/></let>
            </when> 
      </choose>
    </def-macro>

    <def-macro n="conv-case1" npar="1">
          <choose> 
            <when>
               <test>
<or>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="nom"/></equal>
 <equal><clip pos="1" side="sl" part="a_syntag"/><lit-tag v="attr"/></equal>

</or>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.NOM"/></let>
            </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.ACC"/></let>
            </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.GEN"/></let>
            </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="loc"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.LOC"/></let>
 <let><var n="postposition_lu"/>
 <concat>
<lit v="in"/>
<lit-tag v="pr"/>
           </concat> 

</let>
            </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="abl"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.ABL"/></let>
            </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="dat"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.DAT"/></let>
            </when> 
            <when>
               <test>
                  <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="ins"/></equal>
               </test>
               <let><clip pos="1" side="tl" part="a_case"/><lit v=""/></let>
               <let><var n="sntype"/><lit-tag v="SN.INS"/></let>
            </when> 


          </choose>
    </def-macro>




<def-macro n="build-adjec-lu" npar="1"> 
     <let>
           <var n="adjec_lu"/>
           <concat>
             <clip pos="1" side="tl" part="lem"/> 
               <clip pos="1" side="tl" part="a_adjec"/>
           </concat>  
        </let>
</def-macro>

<def-macro n="remove-poss" npar="1"> 
     
                 <let><clip pos="1" side="tl" part="a_pos"/><lit v=""/></let>
            
</def-macro>



 <def-macro n="initialize_case_to_nominative" npar="0">
          <let>
            <var n="case"/>
            <lit-tag v="nom"/>
          </let>
    </def-macro>


 <def-macro n="conv-to-subj" npar="1">
      <choose>
 <when>
               <test>
                 <and>
<equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
<equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
<equal><clip pos="1" side="sl" part="learned_attruse"/><lit-tag v="subst"/></equal>
 </and>
</test>
               <let><var n="sntype"/><lit-tag v="prn.pos"/></let>
               <let><clip pos="1" side="sl" part="a_pers"/><lit v=""/></let>
            </when>
            <when>
               <test>
                 <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
</test>
               <let><var n="sntype"/><lit-tag v="prn.subj"/></let>
            </when>
<when>
               <test>
                 <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
</test>
               <let><var n="sntype"/><lit-tag v="prn.subj"/></let>
            </when>
<when>
               <test>
                 <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
</test>
               <let><var n="sntype"/><lit-tag v="prn.subj"/></let>
            </when>
      </choose>
    </def-macro>

<def-macro n="conv-mfpron" npar="1">
      <choose>
            <when>
               <test>
                 <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
               </test>
               <let><var n="mf"/><lit-tag v="mf"/></let>
            </when> 
<when>
               <test>
                 <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
               </test>
               <let><var n="mf"/><lit-tag v="mf"/></let>
            </when> 
<when>
               <test>
<and>
<equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
<equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
</and>
               </test>
               <let><var n="mf"/><lit-tag v="mf"/></let>
            </when> 
<when>
               <test>
<and>
<equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
<equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
               </test>
               <let><var n="mf"/><lit-tag v="m"/></let>
            </when> 
<otherwise>
               <let><var n="mf"/><lit-tag v="f"/></let>
</otherwise>     
 </choose>
    </def-macro>
  </section-def-macros>
  

<section-rules>


<rule comment="RULE: NUM myn  NOM"> <!--15 thousands -> thousands as noun-->
      <pattern>
<pattern-item n="num"/>
        <pattern-item n="myn_mil"/>
        <pattern-item n="nom"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="myn-nom-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
         <lu>

<clip pos="2" side="tl" part="lemh"/>
              <lit-tag v="n"/>
<var n="number"/>
              <clip pos="2" side="tl" part="lemq"/>

             
             
            </lu>
<b/>
<lu>
              <clip pos="3" side="tl" part="lem"/>
	<clip pos="3" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: NUM myn  NOM"> <!--15 thousands+cop -> thousands as noun-->
      <pattern>
<pattern-item n="num"/>
        <pattern-item n="myn_mil"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="myn-nom-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
         <lu>

<clip pos="2" side="tl" part="lemh"/>
              <lit-tag v="n"/>
<var n="number"/>
              <clip pos="2" side="tl" part="lemq"/>

             
             
            </lu>
<b/>
<lu>
              <clip pos="3" side="tl" part="lem"/>
	<clip pos="3" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: NUM NUM N"><!--100 мың/миллион/миллиард доллар-->
        
      <pattern>
        <pattern-item n="num-det"/>
        <pattern-item n="thousand-etc"/>
        <pattern-item n="nom"/>
      </pattern>

      <action>
       <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="3"/>
        </call-macro> 
        
               
        <let><clip pos="3" side="tl" part="a_nbr"/><lit-tag v="pl"/></let>
        
        <choose>
          <when>
            <test><equal><clip pos="1" side="tl" part="a_num"/><lit-tag v="num"/></equal></test>
	    
	  </when>
	</choose>
        <out>
          <chunk name="num_num_n">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <var n="preposition"/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b/>
            <lu>
              
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="a_num"/>
              <clip pos="2" side="tl" part="lemq"/>
              <clip pos="2" side="tl" part="a_nbr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
	<lit-tag v="pl"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RULE: V-ING VAUX-NEG-past"> <!-- negative past cont -->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux-neg-past"/>
      </pattern>
      <action>
   <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 
         <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                    </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit-tag v="p3"/></let>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>

                </when>
           </choose>
        
        <out>        
          <chunk name="verb-ing-not-past" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
             <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
               <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: NUM years  NOM"> <!--7  zhastamyn-->
      <pattern>
        <pattern-item n="num"/> 
<pattern-item n="years_old"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
  <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="num-nom-years" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-year"/></tag>
<tag><lit-tag v="PD"/></tag>
<tag><lit-tag v="ND"/></tag>
 <!--<tag><clip pos="1" side="tl" part="a_nbr"/></tag>-->

            </tags>
<!--<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
          
              
</lu>
<b/>-->
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
          <lu>
              
             <lit v="year"/>
		<lit-tag v="n"/>
              <lit-tag v="pl"/>
                            
            </lu>
<b/>
<lu>
              
             <lit v="old"/>
              <lit-tag v="adj"/>
              <lit-tag v="sint"/>
                            
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: verb-need"> <!--Magan kitap kerek edi-->
      <pattern>
<pattern-item n="pers-pron"/>
<pattern-item n="nom"/>
        <pattern-item n="kerek"/>
<pattern-item n="edi"/>
<!--<pattern-item n="cop"/>-->
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
<choose>
<when>
                   <test>
       <and>            
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
</and>
                      </test>
                  <let><var n="sp-nbr"/><lit-tag v="sp"/></let>


                </when>  
<otherwise>
                  <let><var n="sp-nbr"/><lit-tag v="5"/></let>
</otherwise>
 </choose>
<choose>
<when>
                   <test>
       <and>            
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
</and>
                      </test>
                  <let><var n="genre"/><lit-tag v="nt"/></let>


                </when>  
<otherwise>
                  <let><var n="genre"/><lit-tag v="mf"/></let>
</otherwise>
 </choose>
 <choose>
    
  <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="verb-need-past" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-kerek-past"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

<tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><clip pos="1" side="sl" part="a_nbr"/></tag>


</tags>
<lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="subj"/> 
      <lit-tag v="4"/> 
<var n="genre"/>
<var n="sp-nbr"/>
 
    </lu>
            <b pos="1"/>
            <b pos="2"/> 
           <b pos="3"/>
<lu>
              <lit v="need"/>
              <lit-tag v="vblex"/>
             
<lit-tag v="past"/>
            <!--  <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
            -->
</lu>
<b/>
 <lu>
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="lemq"/>
               <var n="number"/>
            </lu>
            

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: NUM years  NOM"> <!--7  zhasta boldym-->
      <pattern>
        <pattern-item n="num"/> 
<pattern-item n="years_old"/>
<pattern-item n="bol"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-years-past" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-year-past"/></tag>
<tag><lit-tag v="PD"/></tag>
<tag><lit-tag v="ND"/></tag>
 <!--<tag><clip pos="1" side="tl" part="a_nbr"/></tag>-->

            </tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="past"/>
             <!-- <lit-tag v="2"/>
              <lit-tag v="3"/>-->
              
</lu>
<b/>
         <!--   <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>-->
          <lu>
              
             <lit v="year"/>
		<lit-tag v="n"/>
              <lit-tag v="pl"/>
                            
            </lu>
<b/>
<lu>
              
             <lit v="old"/>
              <lit-tag v="adj"/>
              <lit-tag v="sint"/>
                            
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: verb-need"> 
      <pattern>
<pattern-item n="pers-pron"/>
<pattern-item n="nom"/>
        <pattern-item n="kerek"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
  <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sp"/></let>


                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="verb-need-cop" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-kerek"/></tag>


<tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>




</tags>
<lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="subj"/> 

      <lit-tag v="2"/> 
<lit-tag v="mf"/>
      <lit-tag v="3"/> 
     
 
    </lu>
<b/>

<lu>
              <lit v="need"/>
              <lit-tag v="vblex"/>
             
<lit-tag v="pres"/>
             
            
</lu>
<b/>
<lu>
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
            
              <clip pos="2" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<!-- Мен дәрігермін-->
<rule comment="RULE: VP-cop"> 
      <pattern>
 
 <pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<choose>
<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3sp"/></equal>
                      </test>
                 <let><var n="number"/><lit-tag v="sg"/></let>
           <let><var n="pos"/><lit-tag v="p3"/></let>

 <out>
          <chunk name="VP-cop" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-cop"/></tag>

 <tag><var n="pos"/></tag>
 <tag><var n="number"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              
</lu>
          </chunk>
        </out>
</when>
           <otherwise>

 <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

 <out>
          <chunk name="VP-n-cop" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-cop"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              
</lu>

          </chunk>
        </out>
</when><otherwise>
 <out>
          <chunk name="VP-cop" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-cop"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              
</lu>

          </chunk>
        </out>

</otherwise>
</choose>
</otherwise>
</choose>
       
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule>
  <pattern>
    <pattern-item n="adj"/>
    <pattern-item n="post"/>
  </pattern>
  <action>
    <choose>
      <when><!--1 | тура<adj><*isadjsint><*attruse><*numberat><*possessive><*case> лы<post><*posttransfer> | about<pr> | 0:0 1:0 | <adj> <post>-->
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="adj"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="тура"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Тура"/>
            </equal>
            </or>
            <begins-with>
              <clip pos="2" side="tl" part="tags" />
              <lit-tag v="post"/>
            </begins-with>
            <or>            <equal>
              <clip pos="2" side="sl" part="lem" />
              <lit v="лы"/>
            </equal>
            <equal>
              <clip pos="2" side="sl" part="lem" />
              <lit v="Лы"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__adj___post_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="about"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
          <b pos="1"/>
      </chunk>
      </out>
        <call-macro n="f_bcond">
          <with-param pos="1"/>
          <with-param pos="2"/>
        </call-macro>
<out><lu><lit v="*executedtule34"/></lu></out></when>
      <otherwise><!--Word-for-word translation-->
<call-macro n="build-adjec-lu"><with-param pos="1"/></call-macro> 
  <out>
       <chunk name="__adj___post2_" case="caseFirstWord">       <tags>             <tag><lit-tag v="AdjP"/></tag>       </tags>        
  <lu>
             <var n="adjec_lu"/>
          </lu>
          <b pos="1"/>
      </chunk>
      </out></otherwise>
    </choose>
  </action>
</rule>


<rule comment="RULE: abbr">
      <pattern>
 <pattern-item n="abbr"/>
              </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
         <out>
          <chunk name="abbr" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>


            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>

<b/>

            <lu>
              <clip pos="1" side="tl" part="whole"/>
        <!--      <clip pos="1" side="tl" part="a_nom"/>
<clip pos="1" side="tl" part="lemq"/>-->
             <!--  <var n="number"/> -->
              
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>







<rule comment="RULE: myNOM">
      <pattern>
 <pattern-item n="nom1"/>
 <pattern-item n="cop"/>
              </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="choose_case_and_postposition2">
          <with-param pos="1"/>
          <with-param pos="2"/>
        </call-macro>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>



<lit-tag v="px1sg"/></equal>
                  </test>
                  <let>

<var n="pos"/>
<lit v="my"/>

</let>
                </when>

	</choose>

	<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px2sg.frm"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="your"/></let>
                </when>

</choose>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px3sg"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="his"/></let>
                </when>

</choose>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px1pl"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="our"/></let>
                </when>

</choose>
    
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px3sp"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="their"/></let>
                </when>

</choose>
         <out>
          <chunk name="nommy-cop" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>


            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>

<lu>
          <var n="pos"/>  
 	<lit-tag v="det"/>
	<lit-tag v="pos"/>
	<lit-tag v="sg"/>
</lu>
<b/>

            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
               <var n="number"/> 
              
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>
 <rule comment="RULE: subst verb">   <!--шақырмағандықтарыңызбен -->
      <pattern>
        <pattern-item n="ger_perf"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="unk-translation_of_neg-verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
<tag><clip pos="1" side="tl" part="a_case"/></tag>
            </tags>
<lu>
<lit v="not"/>
<lit-tag v="adv"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="pres"/>
            
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: adv ADJ ADJ NOM">
      <pattern>
<pattern-item n="adv"/>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
              <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="adv-adj-adj-n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
<lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b/>
           
            <lu>
              <clip pos="4" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

   



<!--
    <rule comment="RULE: N">
      
      INPUT:  ^мәктәп<n><attr>/школьный<adj><m><an><sg><nom>$
      OUTPUT: ^adj<AdjP>{^школьный<adj><m><an><sg><nom>$}$
      INPUT:  ^мәктәп<n><nom>/школа<n><f><nn><nom>$
      OUTPUT: ^n<SN><nom>{^школа<n><f><nn><sg><2>$}$
      INPUT:  ^абый<n><px1sg><dat>/брат<n><m><aa><px1sg><dat>$
      OUTPUT: ^n<SN><dat>{^мой<det><pos><m><an><sg><dat>$ ^брат<n><m><aa><sg><2>$}$
      INPUT:  ^мәктәп<n><loc>/школа<n><f><nn><loc>$
      OUTPUT: ^pr_n<PP>{^в<pr>$ ^школа<n><f><nn><sg><prp>$}$
      INPUT:  ^яхшы<adj><subst><dat>/хороший<adj><m><an><dat>$
      OUTPUT: ^n<SN><dat>{^хороший<adj><m><an><sg><2>$}$
      INPUT:  ^ул<prn><dem><gen><@ADVL→>/он<prn><pers><p3><m><sg><gen><@ADVL→>$
      OUTPUT: ^n<SN><gen><@ADVL→>{^он<prn><pers><p3><m><sg><2>$}$
      
      <pattern>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
	      <and>
	        <equal><clip pos="1" side="sl" part="a_syntag"/><lit-tag v="attr"/></equal>
	        <equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="adj"/></equal>
	      </and>
	    </test>
            <out>
              <chunk name="n">
                <tags>
                  <tag><lit-tag v="AdjP"/></tag>
                </tags>
                <lu>
                  <clip pos="1" side="tl" part="whole"/>
                </lu>
              </chunk>
            </out>
	  </when>
          <when c="similative is translated with an adverb (happens in case of pronouns
		   шундый->так)">
	    <test>
	      <equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="adv"/></equal>
	    </test>
	    <out>
	      <chunk name="adv">
                <tags>
                  <tag><lit-tag v="AdvP"/></tag>
                </tags>
                <lu>
                  <clip pos="1" side="tl" part="whole"/>
                </lu>
	      </chunk>
	    </out>
          </when>
          <when>
	    <test>
	      <equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="det.pos"/></equal>
	    </test>
	    <out>
	      <chunk name="det">
                <tags>
                  <tag><lit-tag v="DET"/></tag>
                </tags>
                <lu>
                  <clip pos="1" side="tl" part="whole"/>
                </lu>
	      </chunk>
	    </out>
          </when>
          <when c="n.px3sp.{dat/abl/loc} is translated with a preposition">
            <test><equal><clip pos="1" side="tl" part="a_pos"/><lit-tag v="pr"/></equal></test>
            <out>
              <chunk name="pr">
                <tags>
                  <tag><lit-tag v="PREP"/></tag>
                </tags>
                <lu>
                  <clip pos="1" side="tl" part="lem"/>
                  <clip pos="1" side="tl" part="a_pr"/>
                </lu>
              </chunk>
            </out>
          </when>
          <otherwise>
            <call-macro n="translate-noun">
              <with-param pos="1"/>
            </call-macro>
            <choose>
              <when>
                <test><equal><var n="preposition"/><lit v=""/></equal></test>
                <out>
                  <chunk name="n">
                    <tags>
                      <tag><lit-tag v="SN"/></tag>
                      <tag><clip pos="1" side="tl" part="a_case"/></tag>
                      <tag><clip pos="1" side="sl" part="a_SYNLABEL"/></tag>
                    </tags>
                    <var n="possessive"/>
                    <lu>
		      <clip pos="1" side="tl" part="lem"/>
		      <clip pos="1" side="tl" part="a_nom"/>
		      <clip pos="1" side="tl" part="a_mf"/>
		       <clip pos="1" side="tl" part="a_nbr"/>
		      <clip pos="1" side="tl" part="a_case" link-to="2"/>
		      <clip pos="1" side="tl" part="lemq"/>
                    </lu>
                  </chunk>
                </out>
              </when>
              <otherwise>
                <out>
                  <chunk name="pr_n">
                    <tags>
                      <tag><lit-tag v="PP"/></tag>
                    </tags>
                    <var n="preposition"/>
                    <var n="possessive"/>
                    <lu>
		      <clip pos="1" side="tl" part="whole"/>
                    </lu>
                  </chunk>
                </out>
              </otherwise>
            </choose>
          </otherwise>
        </choose>
      </action>
    </rule>-->



<rule comment="RULE: Ozderine+cop"> <!--ozderine -->
      <pattern>
        <pattern-item n="prn-ref"/>
        <pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

  <call-macro n="convert-poss-to-pers">
          <with-param pos="1"/>
        </call-macro>

           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="himself"/></let>
                  <let><var n="mf"/><lit-tag v="m"/></let>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>

               
              </choose>
<out>
          <chunk name="prn-ref-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>

              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><var n="mf"/></tag>
              <tag> <var n="number"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="a_pron"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
<lit-tag v="4"/>

            </lu>
          
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

  <rule comment="RULE:  VAUX">
      <pattern>
        
        <pattern-item n="vaux"/>
      </pattern>
      <action>
        
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="single-vaux" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-vaux"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
	
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
<lit-tag v="vblex"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
              <clip pos="1" side="tl" part="lemq"/>


            </lu>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: noun+cop"> <!--to noun with cop -->
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
       <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

<out>
          <chunk name="noun-cop" case="caseFirstWord">
<tags>
<tag><lit-tag v="SN-to-cop"/></tag>
<tag><clip pos="1" side="sl" part="a_case"/></tag>       
<tag>  <var n="number"/></tag>
            </tags>

           <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="lemq"/>
                <lit-tag v="3"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: noun+cop+postadv"> <!--to noun with cop -->
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="cop"/>
        <pattern-item n="postadv"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
       <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

<out>
          <chunk name="noun-cop-postadv" case="caseFirstWord">
<tags>
<tag><lit-tag v="SN-cop"/></tag>
<tag><clip pos="1" side="sl" part="a_case"/></tag>       
<tag>  <var n="number"/></tag>
            </tags>

           <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="lemq"/>
 <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<!--

<rule comment="RULE: n-sim+postadv"> 
      <pattern>
        <pattern-item n="n-sim"/>
        <pattern-item n="postadv"/>
      </pattern>
            <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="choose_case_and_postposition2">
          <with-param pos="1"/>
        </call-macro>

<choose>
                <when>
                <test>
                <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px1sg"/></equal>
                  </test>
                  <let>

<var n="pos"/>
<lit v="my"/>

</let>
                </when>
<when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px2sg"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="your"/></let>
                </when>
	
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px2sg.frm"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="your"/></let>
                </when>


                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px3sg"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="his"/></let>
                </when>


                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px1pl"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="our"/></let>
                </when>

<when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px2pl"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="your"/></let>
                </when>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px3sp"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="their"/></let>
                </when>

</choose>
<choose>
                <when>
                   <test>
                   <equal><clip pos="1" side="sl" part="a_sim"/>
<lit-tag v="sim"/></equal>
                  </test>
                  <let>
<var n="number1"/><concat><lit v="like"/><lit-tag v="pr"/></concat></let>
                </when>
<otherwise>
<let>

<var n="number1"/><lit v=""/></let>
</otherwise>
</choose>
         <out>
          <chunk name="n-sim-postadv" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>


            </tags>
<lu>
<var n="number1"/>
</lu>
<b/>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>

<lu>
          <var n="pos"/>  
 	<lit-tag v="det"/>
	<lit-tag v="pos"/>
	<lit-tag v="sg"/>
</lu>
<b/>

            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
               <var n="number"/>        
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>

    </rule>

-->
<rule comment="RULE: noun+cop+postadv"> <!--to noun with cop -->
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="postadv"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
       <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

<out>
          <chunk name="noun-postadv" case="caseFirstWord">
<tags>
<tag><lit-tag v="SN-cop"/></tag>
<tag><clip pos="1" side="sl" part="a_case"/></tag>       
<tag>  <var n="number"/></tag>
            </tags>

           <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="lemq"/>
               <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="NEW RULE: adjec noun1 noun2">   <!-- for "good football players"-->
  <pattern>
    <pattern-item n="adj"/>
    <pattern-item n="nom"/>
 <pattern-item n="nom-px3sp"/>
  </pattern>
  <action>
<call-macro n="NEW-build-noun-lu-3-4-5">
       <with-param pos="3"/>
  </call-macro> 
<call-macro n="build-adjec-lu"><with-param pos="1"/></call-macro> 
<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
<choose>
                 <when>
                   <test>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
    <out>
    <chunk name="adjective-noun">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
<tag><var n="number"/></tag>
    </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
    <lu>
      <var n="adjec_lu"/>
     </lu>
	<b pos="1"/>
 <lu>
     <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_nom"/>
     <lit-tag v="2"/>
    
     </lu>
<b pos="2"/>
	<lu>
     <clip pos="3" side="tl" part="lem"/> 
     <clip pos="3" side="tl" part="a_nom"/>
     
     <var n="number"/>
     </lu>

    </chunk>
    </out>
      </action>
</rule>


<rule comment="RULE: Verb:шақырмақ емес"> <!--translation: I would not like to+verb(invite)-->
      <pattern>
        <pattern-item n="v-wouldLike-neg"/>
 
      </pattern>
      <action>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-would-neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="would"/>
             <lit-tag v="vaux"/>
             <lit-tag v="past"/>
 </lu>
  <b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
              
            </lu>
            <b/>
<lu>
              <lit v="like"/>
              <lit-tag v="vblex"/>
              <lit-tag v="inf"/>
            </lu>
            <b/>
            
 <lu>
              <lit v="to"/>
             <lit-tag v="pr"/>
         
 </lu>
  <b/>
<lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pres"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
<b/>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<!--must be corrected, have wrong "inf"-->
<rule comment="RULE: VP-may"> <!--Men koruim mumkin-->
      <pattern>
<pattern-item n="v-gerund"/>
        <pattern-item n="mumkin"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="may/mumkin" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>

 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

</tags>
<lu>
              <lit v="may"/>
              <lit-tag v="vaux"/>
              <lit-tag v="inf"/>
     
</lu>
<b/>
 <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
	
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
                 </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: ger">   
      <pattern>
        <pattern-item n="v-ger"/>
      </pattern>
      <action>
        <choose>
<when>
                   <test>
                  
  <equal><clip pos="1" side="sl" part="lem"/><lit v="бол"/></equal>

                      </test>
                 <out>
           <chunk name="v-ger" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-ger"/></tag>
            </tags>

             <lu>
              <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vbser"/>
            <lit-tag v="pres"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
                </when>
<otherwise>
        <out>
          <chunk name="v-ger" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-ger"/></tag>
            </tags>
<!--<lu>
              <lit v="to"/>
             <lit-tag v="pr"/>
         
 </lu>
  <b/>-->
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
            <lit-tag v="pres"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
</otherwise>
</choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: ger+acc">   <!--Мен жүгіруді жақсы көремін I like running-->
      <pattern>
        <pattern-item n="v-gerund-ing"/>
<pattern-item n="v-fin"/>
      </pattern>
      <action>
        <choose>
<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="бол"/></equal>
                      </test>

        <out>
          <chunk name="v-ger2-be" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>

  <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
            <lit-tag v="pres"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
<b/>
<lu>
              <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vbser"/>
            <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
</when>
<otherwise>
   <out>
          <chunk name="v-ger2" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>

  <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
            <lit-tag v="pres"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
<b/>
<lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
            <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
</otherwise>
</choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: what is + noun"> <!--Атыңыз кім? -->
      <pattern>

<pattern-item n="itg"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<let>    
<clip pos="1" side="tl" part="a_pos"/><lit v=""/>   
</let> 

 <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
          
<out>
          <chunk name="quest" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Qst"/></tag>
<!--<tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>-->

              
            </tags>

            <lu>
              <clip pos="1" side="tl" part="lem"/>

<lit-tag v="adv"/>
<lit-tag v="itg"/>        
              
            </lu>
<b/>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="p3"/>
              <lit-tag v="sg"/>
              
</lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: what is + noun"> <!--Атыңыз кім? -->
      <pattern>

<pattern-item n="qnt"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<let>    
<clip pos="1" side="tl" part="a_pos"/><lit v=""/>   
</let> 

 <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>
           <choose>
<when>
                   <test>

                       <equal><clip pos="1" side="sl" part="lem"/><lit v="қанша"/></equal>

                      </test>
                 <let><var n="number"/><lit-tag v="itg"/></let>
                 <let><var n="nbr"/><lit-tag v="sg"/></let>
                </when>
<when>
                   <test>

                       <equal><clip pos="1" side="sl" part="lem"/><lit v="әр"/></equal>

                      </test>

                 <let><var n="nbr"/><lit-tag v="sg"/></let>
                 <let><var n="number"/><lit-tag v="ind"/></let>
                </when>
<otherwise>
                 <let><var n="number"/><lit-tag v="ind"/></let>
                 <let><var n="nbr"/><clip pos="1" side="tl" part="a_nbr"/></let>
</otherwise>
           </choose>
          
<out>
          <chunk name="det-qnt" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-det"/></tag>
<tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><var n="nbr"/></tag>

              
            </tags>

            <lu>
              <clip pos="1" side="tl" part="lem"/>

<lit-tag v="det"/>
<var n="number"/>
             <lit-tag v="2"/> 
            </lu>
<b/>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM-ord "> <!--бірінші -->
      <pattern>
        <pattern-item n="num-ord"/>

      </pattern>
      <action>
      
<!-- <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>-->
        <out>
          <chunk name="ordnum" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>

             <lit-tag v="det"/>
<lit-tag v="ord"/>
<lit-tag v="sg"/>
            </lu>
          
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: NUM-ord "> <!--бірінші -->
      <pattern>
        <pattern-item n="num-ord"/>
        <pattern-item n="cop"/>
      </pattern>
      <action>
      
<!-- <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>-->
        <out>
          <chunk name="ordnum-cop" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>

             <lit-tag v="det"/>
<lit-tag v="ord"/>
<lit-tag v="sp"/>
            </lu>
          
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="NEW RULE: num">  
  <pattern>
    <pattern-item n="num"/>
  </pattern>
  <action>
 

   <call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
<choose>
<when>
<test>

                       <equal><clip pos="1" side="tl" part="a_num_sp"/><lit-tag v="sp"/></equal>
                      
                   </test>
                <out>
    <chunk name="num_lu">
    <tags>
    <tag><lit-tag v="SN-NUM"/></tag>
    </tags>
    <lu>
<clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="a_num"/>

              <clip pos="1" side="tl" part="a_nbr"/>
     
     </lu>
    </chunk>
    </out>
</when>
<otherwise>
<out>
    <chunk name="num_sp">
    <tags>
    <tag><lit-tag v="SN-NUM"/></tag>
    </tags>
    <lu>

      <var n="num_lu"/>

              </lu>
    </chunk>
    </out>
</otherwise>
</choose>
    
  </action>
</rule>

<rule comment="NEW RULE: num+cop">  
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="cop"/>
  </pattern>
  <action>
 

   <call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
   <choose>
<when>
<test>

                       <equal><clip pos="1" side="tl" part="a_num_sp"/><lit-tag v="sp"/></equal>
                      
                   </test>
                <out>
    <chunk name="num_lu">
    <tags>
    <tag><lit-tag v="SN-NUM"/></tag>
    </tags>
    <lu>
<clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="a_num"/>
<clip pos="1" side="tl" part="a_nbr"/>
     
     </lu>
    </chunk>
    </out>
</when>
<otherwise>
<out>
    <chunk name="num_sp">
    <tags>
    <tag><lit-tag v="SN-NUM"/></tag>
    </tags>
    <lu>

      <var n="num_lu"/>

              </lu>
    </chunk>
    </out>
</otherwise>
</choose>

  </action>
</rule>


<rule comment="NEW RULE: chapter num">  
  <pattern>
    <pattern-item n="num"/>
	<pattern-item n="tarau"/>
  </pattern>
  <action>
   <call-macro n="build-num-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="num-chapter">
    <tags>
    <tag><lit-tag v="SN"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
    <tag><lit-tag v="sg"/></tag>
    </tags>
<lu>
	<clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              
             <lit-tag v="sg"/>

            </lu>
<b/>
    <lu>
      <var n="num_lu"/>
      <lit-tag v="num"/>
	<lit-tag v="2"/> 
      <lit-tag v="3"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="RULE: Verb:мақсатты келер шақ"> <!--translation: I would like to+verb(play)-->
      <pattern>
        <pattern-item n="v-wouldLike"/>
      </pattern>
      <action>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-would" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="would"/>
             <lit-tag v="vaux"/>
             <lit-tag v="past"/>
 </lu>
  <b/>
<lu>
              <lit v="like"/>
              <lit-tag v="vblex"/>
              <lit-tag v="inf"/>
            </lu>
            <b/>
            
 <lu>
              <lit v="to"/>
             <lit-tag v="pr"/>
         
 </lu>
  <b/>
<lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pres"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
<b/>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="NEW RULE: adjec+comp nom">   <!-- bigger, for adj comp -->
  <pattern>
    <pattern-item n="comp-adjec"/>
 <pattern-item n="nom"/>
<pattern-item n="cop"/>
  </pattern>
  <action>
<choose>
   
<when>
      <test>
<not>
       <equal>
         <clip pos="1" side="tl" part="a_sint"/>
         <lit-tag v="sint"/>
       </equal>
</not>
      </test>
<out>
    <chunk name="comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
    <lu>
            <lit v="more"/>
            <lit-tag v="preadv"/>

          </lu>
<b/>
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_adjec"/>
    </lu>
<b/>
 <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_nom"/>
    </lu>
    </chunk>
    </out>
    </when> 
<when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_syntag"/>
         <lit-tag v="subst"/>
       </equal>
      </test>
<out>
    <chunk name="comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
   
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_adjec"/>
    </lu>
    </chunk>
    </out>
    </when>
       <otherwise>
         <let>
           <var n="comp_lu"/>       <lit-tag v="comp"/>
         </let>
<out>
    <chunk name="comp-adjec">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
   
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_adjec"/>

	<var n="comp_lu"/>
         
     </lu>
    </chunk>
    </out>
       </otherwise>
  </choose>
    
  </action>
</rule>


<rule comment="NEW RULE: adjec+comp">   <!-- bigger, for adj comp -->
  <pattern>
    <pattern-item n="comp-adjec"/>
  </pattern>
  <action>
<choose>
   
<when>
      <test>
<not>
       <equal>
         <clip pos="1" side="tl" part="a_sint"/>
         <lit-tag v="sint"/>
       </equal>
</not>
      </test>
<out>
    <chunk name="comp-adjec1">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
    <lu>
            <lit v="more"/>
            <lit-tag v="preadv"/>

          </lu>
<b/>
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_adjec"/>
    </lu>
    </chunk>
    </out>
    </when> 
<when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_syntag"/>
         <lit-tag v="subst"/>
       </equal>
      </test>
<out>
    <chunk name="comp-adjec2">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
   
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_adjec"/>
    </lu>
    </chunk>
    </out>
    </when>
       <otherwise>
         <let>
           <var n="comp_lu"/>       <lit-tag v="comp"/>
         </let>
<out>
    <chunk name="comp-adjec3">
    <tags>
    <tag><lit-tag v="AdjP"/></tag> <!-- no tags, regular AdjP -->
    </tags>
   
    <lu>
       <clip pos="1" part="lem" side="tl"/>
       <clip pos="1" side="tl" part="a_adjec"/>

	<var n="comp_lu"/>
         
     </lu>
    </chunk>
    </out>
       </otherwise>
  </choose>
    
  </action>
</rule>









<rule comment="RULE: must not+inf"> <!--Men barmauym kerek-->
      <pattern>
	<pattern-item n="v-gerund-neg"/>
        <pattern-item n="kerek"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="must-neg-inf" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

</tags>
<lu>
          <lit v="must"/>  
        <lit-tag v="vaux"/>
	<lit-tag v="inf"/>
          

</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
</lu>
<b/>

            <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
                 </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: have to go"> <!--Men baruym kerek-->
      <pattern>
	<pattern-item n="v-gerund"/>
        <pattern-item n="kerek"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
<choose>
<when>
                   <test>
                  
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="бол"/></equal>

                      </test>
                 <out>
          <chunk name="have-to-inf-be" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

</tags>
<lu>
          <lit v="have"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="inf"/>
<lit v="#"/> 

<b/>
          <lit v="to"/> 


</lu>
<b/>

            <lu>
             <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="vbser"/>
              <lit-tag v="inf"/>
           <!--   <clip pos="1" side="tl" part="lemq"/>-->
                 </lu>
          </chunk>
        </out>
                </when>
<otherwise>
        <out>
          <chunk name="have-to-inf" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

</tags>
<lu>
          <lit v="have"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="inf"/>
<lit v="#"/> 

<b/>
          <lit v="to"/> 


</lu>
<b/>

            <lu>
             <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="vblex"/>
              <lit-tag v="inf"/>
           <!--   <clip pos="1" side="tl" part="lemq"/>-->
                 </lu>
          </chunk>
        </out>
</otherwise>
           </choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: have to go"> <!--Men baruym kerek-->
      <pattern>
	<pattern-item n="v-gerund"/>
        <pattern-item n="kerek"/>
        <pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
   <choose>
<when>
                   <test>
                  
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="бол"/></equal>

                      </test>
                 <out>
          <chunk name="have-to-inf-be" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

</tags>
<lu>
          <lit v="have"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="inf"/>
<lit v="#"/> 

<b/>
          <lit v="to"/> 


</lu>
<b/>

            <lu>
             <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="vbser"/>
              <lit-tag v="inf"/>
           <!--   <clip pos="1" side="tl" part="lemq"/>-->
                 </lu>
          </chunk>
        </out>
                </when>
<otherwise>
        <out>
          <chunk name="have-to-inf" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>

</tags>
<lu>
          <lit v="have"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="inf"/>
<lit v="#"/> 

<b/>
          <lit v="to"/> 


</lu>
<b/>

            <lu>
             <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="vblex"/>
              <lit-tag v="inf"/>
           <!--   <clip pos="1" side="tl" part="lemq"/>-->
                 </lu>
          </chunk>
        </out>
</otherwise>
           </choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: VP-cop-past"> <!--Mende kitap bar-->
      <pattern>
 <pattern-item n="pers-pron"/>
<pattern-item n="nom"/>
        <pattern-item n="bar"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-have" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-kerek"/></tag>

<tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

</tags>
 <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="subj"/> 

      <lit-tag v="2"/> 
<lit-tag v="mf"/>
      <lit-tag v="3"/> 
     
 
    </lu>
<b/>
<lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="pres"/>
             
              
</lu>
<b/>
<lu>
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
            
              <clip pos="2" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>


          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: V-CAN"> <!--Мен ойнай аламын -I can play-->
      <pattern>
        <pattern-item n="v-ing"/>
     <pattern-item n="verb-al"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

        <out>
          <chunk name="verb-can" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
		
            </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <lit-tag v="2"/>
                            
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
          <lit-tag v="inf"/> <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: V-could"> <!--Мен ойнай алдым -I could play-->
      <pattern>
        <pattern-item n="v-ing"/>
     <pattern-item n="verb-al-ifi"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

        <out>
          <chunk name="verb-could" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
		
            </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <lit-tag v="past"/>
                            
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
          <lit-tag v="inf"/> <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: V-CAN+not+infinitive"> <!--Мен ойнай алмаймын -I can not play-->
      <pattern>
        <pattern-item n="v-ing"/>
     <pattern-item n="verb-al-neg"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

        <out>
          <chunk name="verb-can-not" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
		
            </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <lit-tag v="2"/>
                            
            </lu>
            <b/>
              <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>                          
            </lu>
            <b/>

            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
          <lit-tag v="inf"/> <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: V-CAN+adv+infinitive"> <!--Мен тағы ойнай аламын -I can also/anew play-->
      <pattern>
	<pattern-item n="adv"/>
        <pattern-item n="v-ing"/>
     <pattern-item n="verb-al"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

        <out>
          <chunk name="can-adv-inf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="3" side="tl" part="a_tns"/></tag>
              <tag><clip pos="3" side="tl" part="a_pers"/></tag>
              <tag><clip pos="3" side="tl" part="a_nbr"/></tag>
           </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <lit-tag v="pres"/>              
            </lu>
            <b/>
		<lu>
              <clip pos="1" side="tl" part="lemh"/>

          <lit-tag v="adv"/> 
              <clip pos="1" side="tl" part="learned_advtype"/>
<clip pos="1" side="tl" part="lemq"/>
            </lu>
	<b/>
        <lu>
        <clip pos="2" side="tl" part="lemh"/>
	<clip pos="2" side="tl" part="a_verb"/>
	<lit-tag v="inf"/> <clip pos="2" side="tl" part="lemq"/>
            </lu>
        </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: V-Could+adv+infinitive"> <!--Мен тағы ойнай алдым -I could also/anew play-->
      <pattern>
	<pattern-item n="adv"/>
        <pattern-item n="v-ing"/>
     <pattern-item n="verb-al-ifi"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

        <out>
          <chunk name="could-adv-inf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="3" side="tl" part="a_tns"/></tag>
              <tag><clip pos="3" side="tl" part="a_pers"/></tag>
              <tag><clip pos="3" side="tl" part="a_nbr"/></tag>
           </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <lit-tag v="past"/>              
            </lu>
            <b/>
		<lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
          <lit-tag v="adv"/> <clip pos="1" side="tl" part="lemq"/>
            </lu>
	<b/>
        <lu>
        <clip pos="2" side="tl" part="lemh"/>
	<clip pos="2" side="tl" part="a_verb"/>
	<lit-tag v="inf"/> <clip pos="2" side="tl" part="lemq"/>
            </lu>
        </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: VP-cop-had"> <!--Mende kitap bar edi-->
      <pattern>
<pattern-item n="pers-pron"/>
<pattern-item n="nom"/>
        <pattern-item n="bar"/>
 <pattern-item n="edi"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><var n="number"/><lit-tag v="sp"/></let>


                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>

        <out>
          <chunk name="VP-cop-had" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SN/SV-kerek-past"/></tag>

<!-- <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>-->

<tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

</tags>
 <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="subj"/> 

      <lit-tag v="2"/> 
<lit-tag v="mf"/>
      <lit-tag v="3"/> 
     
 
    </lu>
<b/>
<lu>
              <lit v="have"/>
              <lit-tag v="vblex"/>
              <lit-tag v="past"/>
             
              
</lu>
<b/>
<lu>
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
            
              <clip pos="2" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<!-- Мен дәрігер емеспін-->
<rule comment="RULE: VP-cop-neg"> 
      <pattern>
        <pattern-item n="cop-neg"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-neg" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-cop"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>

<tag><lit-tag v="PD"/></tag>
<tag><lit-tag v="ND"/></tag>
 <!--<tag><clip pos="1" side="tl" part="a_nbr"/></tag>-->

            </tags>


<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              
</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
</lu>
<b/>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<!--
<action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-presperfcon" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
            </lu>
            <b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
             
            </lu>
            <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pp"/>
              
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule> -->




<rule comment="RULE: verb-need-neg"> <!--Magan kitap kerek emes-->
      <pattern>
         <pattern-item n="kerek"/>
        <pattern-item n="emes"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 


 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="verb-need-neg" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-kerek"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>



</tags>
<lu>
              <lit v="do"/>
              <lit-tag v="vbdo"/>
             
<lit-tag v="pres"/>
 <lit-tag v="2"/>
 <lit-tag v="3"/>
<lit-tag v="4"/>

         


                         
</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            
</lu>
<b/>
<lu>
              <lit v="need"/>
              <lit-tag v="vblex"/>
             
<lit-tag v="pres"/>


            
</lu>
<b/>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: VP-zhok"> <!--Mende kitap zhok-->
      <pattern>
        <pattern-item n="pers-pron"/>
<pattern-item n="nom"/>
 <pattern-item n="zhok"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><var n="number"/><lit-tag v="sp"/></let>


                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-have-neg" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-kerek"/></tag>
<!--
  <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>-->

 <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

</tags>
 <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="subj"/> 

      <lit-tag v="2"/> 
<lit-tag v="mf"/>
      <lit-tag v="3"/> 
     
 
    </lu>
<b/>
<lu>
              <lit v="do"/>
              <lit-tag v="vbdo"/>
              <lit-tag v="pres"/>                         
</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>                      
</lu>
<b/>

<lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
             <lit-tag v="inf"/>
              <!--<lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>-->
              
</lu>
<b/>
<lu>
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
            
              <clip pos="2" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>







<rule comment="RULE: VP-cop-had-not"> <!--Mende kitap zhok-->
      <pattern>
 <pattern-item n="bol"/>
        <pattern-item n="emes"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-had-not" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-cop"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="past"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
              
</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
</lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="NEW RULE: name noun-cog">  <!--must be corrected to "f". rule works to m-->
  <pattern>
    <pattern-item n="np-ant"/>
    <pattern-item n="np-cog"/>
  </pattern>
  <action>

  <!--<call-macro n="NEW-build-np">
       <with-param pos="1"/>-->
 <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
  </call-macro> 
<choose>
<when>
    <test>
<equal><clip pos="1" side="sl" part="a_pos"/><lit-tag v="px3sp"/></equal>
</test>
<let> <var n="var-pos"/><lit-tag v="px3sp"/></let>
</when>
<otherwise>
<let> <var n="var-pos"/><lit-tag v="PXD"/></let>
</otherwise>
</choose>
    <out>
    <chunk name="np-ant-cog">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><clip pos="2" side="sl" part="a_np"/></tag>
<tag><clip pos="2" side="sl" part="a_mf"/></tag>
<tag><clip pos="2" side="sl" part="a_case"/></tag>
  <tag><clip pos="2" side="sl" part="a_nbr"/></tag> 
    
    </tags>
   <lu>
      <var n="NEW-noun_lu"/>
    </lu>
<b/> 
   <lu>
     <clip pos="2" side="tl" part="lem"/> 
     <clip pos="2" side="tl" part="a_np"/>
	
     <clip pos="2" side="tl" part="a_nbr"/>
     <lit-tag v="3"/>
    <lit-tag v="4"/>
	<lit-tag v="5"/>
    </lu>
<b/>

    </chunk>
    </out>
  </action>
</rule>


<rule comment="NEW RULE: name noun-cog">
  <pattern>
    <pattern-item n="np-ant"/>
    <pattern-item n="np-cog"/>
<pattern-item n="cop"/>
  </pattern>
  <action>

 <call-macro n="NEW-build-np">
       <with-param pos="1"/>

  </call-macro> 
<choose>

<when>
    <test>
<equal><clip pos="1" side="sl" part="a_np"/><lit-tag v="np"/></equal>
</test>
<let> <var n="var-np"/><lit-tag v="ant"/></let>
</when>

</choose>
    <out>
    <chunk name="name-surname">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><clip pos="2" side="sl" part="a_np"/></tag>
<tag><clip pos="2" side="sl" part="a_mf"/></tag>
  <tag><clip pos="2" side="sl" part="a_nbr"/></tag>
<tag><var n="number"/></tag>
    <!--<tag><clip pos="2" side="sl" part="a_case"/></tag>-->
    </tags>
   <lu>
      <var n="NEW-noun_lu"/>

    </lu>
<b/> 
   <lu>

     <clip pos="2" side="tl" part="lemh"/> 
     <clip pos="2" side="tl" part="a_np"/>
	<clip pos="2" side="tl" part="a_mf"/>
     <clip pos="2" side="tl" part="a_nbr"/>
    <!-- <lit-tag v="3"/>-->
    
<lit-tag v="sg"/>
<clip pos="2" side="tl" part="lemq"/> 
	
    </lu>
<b/>

    </chunk>
    </out>
  </action>
</rule>

<rule comment="RULE: ADv with cop">
      <pattern>
        <pattern-item n="adv"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
      <!--  <choose>
 
          <when>
             <test>
                <equal><clip pos="1" side="sl" part="a_adj"/>
<lit-tag v="n.attr"/>
</equal>
             </test>
             <let><clip pos="1" side="tl" part="a_adj"/><lit-tag v="n"/></let>
             <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
          </when> 
        </choose>-->
 <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
        <out>
          <chunk name="adv-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-ADVP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

<rule comment="RULE: VP-cop-past-neg"> <!--болмады-->
      <pattern>
        <pattern-item n="bol-neg"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-past-neg" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="past"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
              
</lu>
<b/>
<lu>
<lit v="not"/>
<lit-tag v="adv"/>
</lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>






<rule comment="RULE: N-loc - ADVP">
      <pattern>
        <pattern-item n="n-adv"/>
      </pattern>
      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
      <!--  <choose>
 
          <when>
             <test>
                <equal><clip pos="1" side="sl" part="a_adjec"/>
<lit-tag v="n.attr"/>
</equal>
             </test>
             <let><clip pos="1" side="tl" part="a_adj"/><lit-tag v="n"/></let>
            
          </when> 
        </choose>-->
 <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
        <out>
          <chunk name="n-adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-ADVP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

<rule comment="RULE: ADv">
      <pattern>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
      <!--  <choose>
 
          <when>
             <test>
                <equal><clip pos="1" side="sl" part="a_adj"/>
<lit-tag v="n.attr"/>
</equal>
             </test>
             <let><clip pos="1" side="tl" part="a_adj"/><lit-tag v="n"/></let>
             <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
          </when> 
        </choose>-->
 <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
        <out>
          <chunk name="adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-ADVP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            
            </lu>
          </chunk>
        </out>
      </action>
    </rule>





<rule comment="RULE: postADv">
      <pattern>
        <pattern-item n="postadv"/>
      </pattern>
      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
       <!-- <choose>
 
          <when>
             <test>
                <equal><clip pos="1" side="sl" part="a_adj"/><lit-tag v="n.attr"/></equal>
             </test>
             <let><clip pos="1" side="tl" part="a_adj"/><lit-tag v="n"/></let>
             <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
          </when> 
        </choose>-->
 <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
        <out>
          <chunk name="postadv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-ADVP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            
            </lu>
          </chunk>
        </out>
      </action>
    </rule>








<rule comment="RULE: NOM adv">
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="adv"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit v=""/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="n-adv2" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
               <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
	          
	<!--<lit-tag v="pr"/>-->

            </lu>
            <b pos="1"/>
<!--
<lu>
<var n="postposition_lu"/>
</lu>
<b/>-->
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nom"/>
             <lit-tag v="2"/>

            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM NOM post"> <!--1 million years ago-->
      <pattern>
 <pattern-item n="num"/>
        <pattern-item n="nom"/>
        <pattern-item n="adv"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-pr" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
               <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
            
            
              <lu>
              <clip pos="1" side="tl" part="lem"/>
<lit-tag v="n"/>
             <lit-tag v="sg"/>
              </lu>
<b/>

            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <lit-tag v="2"/>

            </lu>
<b/>
<lu>
              <clip pos="3" side="tl" part="lem"/>
             <lit-tag v="adv"/>

            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: osydan kein">
      <pattern>
 <pattern-item n="osydan"/>
        <pattern-item n="kein"/>


      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="osydan-kein" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
               <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
            <lu>
            <lit v="after"/>
             <lit-tag v="pr"/>

            </lu>
            <b pos="1"/>
              <lu>
              <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="det"/>
              <lit-tag v="dem"/>
              <lit-tag v="2"/>

              </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

 

  <rule comment="RULE: ADJ">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
        <!--<choose>
 
          <when>
             <test>
                <equal><clip pos="1" side="sl" part="a_adj"/><lit-tag v="n.attr"/></equal>
             </test>
             <let><clip pos="1" side="tl" part="a_adj"/><lit-tag v="n"/></let>
             <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>

          </when> 
        </choose>-->
 <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>
        <out>
          <chunk name="adj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>

<b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>
           <!-- <clip pos="1" side="tl" part="a_sint"/>-->

            </lu>
          </chunk>
        </out>
      </action>
    </rule>



  <rule comment="RULE: ADJ+cop">
      <pattern>
        <pattern-item n="adj"/>
<pattern-item n="cop"/>
      </pattern>
      <action>

 <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>

<choose>
 
          <when>
             <test>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="жоқ"/></equal>
             </test>
        <out>
          <chunk name="adj-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>

            <lu>
<lit v="not"/>
<lit-tag v="adv"/>
           <!-- <clip pos="1" side="tl" part="a_sint"/>-->

            </lu>
          </chunk>
        </out>
</when>
          <otherwise>
        <out>
          <chunk name="adj-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>

            <lu>
              <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>
           <!-- <clip pos="1" side="tl" part="a_sint"/>-->

            </lu>
          </chunk>
        </out>
 </otherwise>
</choose>
      </action>
    </rule>

<rule comment="RULE: VP-cop-past"> 
      <pattern>
        <pattern-item n="bol"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-past" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-to-cop"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="past"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
              
</lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: VP-cop-past"> 
      <pattern>
        <pattern-item n="bol"/>
<pattern-item n="kel"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-past" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-to-cop"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="past"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
              
</lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



 <rule comment="RULE: subst_adj">
      <pattern>
        <pattern-item n="subst-adj"/>
      </pattern>

      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
             <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>

        <out>
          <chunk name="adj-subst" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>
	
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



<rule comment="RULE: subst_adj">
      <pattern>
        <pattern-item n="subst-adj"/>
 <pattern-item n="post"/>
<pattern-item n="postadv"/>
      </pattern>

      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->
             <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>

        <out>
          <chunk name="adj_subst-post-postadv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>
	
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

 <rule comment="RULE: ADJ mod_ass">
      <pattern>
        <pattern-item n="adj"/>
	<pattern-item n="mod_ass"/>
      </pattern>
      <action>
        <!--<let><var n="number"/><lit v=""/></let>-->

  <call-macro n="conv-number1">
               <with-param pos="1"/>
             </call-macro>       <out>
          <chunk name="adj-mod_ass" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>
	
<lit-tag v="comp"/>           
 </lu>
          </chunk>
        </out>
      </action>
    </rule>


<rule comment="RULE: Adv comp_adj">
      <pattern>
        <pattern-item n="adv"/>
 <pattern-item n="comp-adjec"/>
      </pattern>
      <action>
        
        <out>
          <chunk name="Adv+comp_adj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-ADVP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            
            </lu>
          
<b/>
 <lu>
              <clip pos="2" side="tl" part="lem"/>
            <clip pos="2" side="tl" part="a_adjec"/>
 	 
	<lit-tag v="comp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


<rule comment="RULE: Adv sint.adj">
      <pattern>
        <pattern-item n="adv"/>
 <pattern-item n="adj"/>
      </pattern>
      <action>
        
        <out>
          <chunk name="Adv_sint-adj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-ADVP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            
            </lu>
          
<b/>
 <lu>
              <clip pos="2" side="tl" part="lem"/>
            <clip pos="2" side="tl" part="a_adjec"/>
 	<!-- <lit-tag v="sint"/>-->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>







<rule comment="RULE: VP-cop-past"> 
      <pattern>
        <pattern-item n="bol-neg"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="VP-cop-past-neg" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV"/></tag>

 <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>



</tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="past"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
              
</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
</lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>








<rule comment="RULE: NOM post"><!-- ozen arkyly-->
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="post"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
<call-macro n="choose_case_and_postposition2">
          <with-param pos="1"/>
          <with-param pos="2"/>
        </call-macro>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit v=""/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
<when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/><lit-tag v="np.top"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
<choose>
                <when>
                   <test>
<or>
                       <equal><clip pos="2" side="sl" part="lem"/><lit v="сыз"/></equal>
 <equal><clip pos="2" side="sl" part="lem"/><lit v="сіз"/></equal>
</or>
                  </test>
                  <let><var n="number1"/><lit v="without"/></let>
                </when>
                <otherwise>
                  <let><var n="number1"/> <clip pos="2" side="tl" part="lem"/></let>
                </otherwise>
              </choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="lem"/><lit v="лы"/></equal>
                  </test>
                  <out>
          <chunk name="nom-pron-ly" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
               <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>   
         
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nom"/>
<var n="number"/>
            </lu>
          </chunk>
        </out>
                </when>
                <otherwise>
  <out>
          <chunk name="nom-pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
               <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
  
         <lu>
<var n="number1"/>
             <lit-tag v="pr"/>
             

            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nom"/>
<var n="number"/>
            </lu>
          </chunk>
        </out>
                </otherwise>
              </choose>
        
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: Adj NOM post"><!-- ademi baksha astynda-->
      <pattern>
<pattern-item n="adj"/>
        <pattern-item n="nom"/>
        <pattern-item n="post"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit v=""/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="adj-nom-pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
              <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
             <lit-tag v="pr"/>

            </lu>
            <b pos="1"/>
<lu>
	<clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_adjec"/>
          

            </lu>
<b/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <lit-tag v="2"/>

            </lu>

 
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: Adj NOM post"><!-- ademi baksha ustinde-->
      <pattern>
<pattern-item n="adj"/>
        <pattern-item n="nom"/>
        <pattern-item n="nom-pr"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit v=""/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="adj-nom-adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
              <tag><var n="number"/></tag>
             
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>

<lit-tag v="pr"/>

            </lu>
            <b pos="1"/>
<lu>
              <clip pos="1" side="tl" part="whole"/>
          

            </lu>
<b/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <lit-tag v="2"/>

            </lu>

 
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="RULE: шартты рай:V-cond">   <!-- If I play-->
      <pattern>
        <pattern-item n="v-cond"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="conditional" case="caseFirstWord">
                       <tags>  <tag><lit-tag v="SV-COND"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
    

            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="pres"/>
             
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<!--
<rule comment="RULE: Adj NOM adv"> 
      <pattern>

       <pattern-item n="adj"/>
<pattern-item n="nom"/>
        <pattern-item n="n-pr1"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit v=""/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="adj-n-adv1" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
              <tag><var n="number"/></tag>
             
            </tags>
            <lu>
              <clip pos="3" side="tl" part="whole"/>


            </lu>
            <b pos="1"/>
<lu>
              <clip pos="1" side="tl" part="whole"/>
          <lit-tag v="2"/>

            </lu>
<b/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <lit-tag v="2"/>

            </lu>

 
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>-->

<!--
<rule comment="RULE: Pro-ins"> 
      <pattern>

        <pattern-item n="p-ins"/>
        
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
     <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>

<choose>
                 <when>
                   <test>

                    <and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p2"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                    
                  </test>
                  <let><var n="number"/><lit-tag v="sp"/></let>
                </when>
<when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="pl"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit-tag v="him"/></let>
                </when>
               
              </choose> 
 
           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="he"/></let>
                </when>
               
              </choose> 
<choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p1"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="I"/></let>
                </when>
               
              </choose> 
<out>
          <chunk name="pr-ins" case="caseFirstWord">
            <tags>
     <tag><var n="sntype"/></tag> 
            </tags>

            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="prn"/>
              <lit-tag v="obj"/>
              <clip pos="1" side="sl" part="a_pers"/>
              <var n="mf"/> 
             <var n="number"/>
            
            
 </lu>
  <b/>            
          </chunk>
        </out>
        
      </action>
    </rule> -->

<rule comment="RULE: Pronoun-GenP NOM">
      <pattern>
        <pattern-item n="gen"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
<let>    
<clip pos="2" side="tl" part="a_pos"/><lit v=""/>   
</let> 
           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="his"/></let>
                  <let>              <var n="number1"/><lit-tag v="sg"/></let>
                </when>
<otherwise>
                  <let>              <var n="number1"/><lit-tag v="sp"/></let>
</otherwise>
               
              </choose>
<out>
          <chunk name="prn-genp-nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>

           <tag><lit-tag v="det"/></tag>
              <tag><lit-tag v="pos"/></tag>
             <tag><var n="number"/> </tag>             

            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
<lit-tag v="2"/>
 <lit-tag v="3"/>
<lit-tag v="4"/>

             <!-- <var n="number"/>-->
<clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: Pronoun-GenP NOM">
      <pattern>
        <pattern-item n="gen"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
<let>    
<clip pos="2" side="tl" part="a_pos"/><lit v=""/>   
</let> 
           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="his"/></let>
                  <let>              <var n="number1"/><lit-tag v="sg"/></let>
                </when>
<otherwise>
                  <let>              <var n="number1"/><lit-tag v="sp"/></let>
</otherwise>
               
              </choose>
<out>
          <chunk name="prn-genp-nom-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>

           <tag><lit-tag v="det"/></tag>
              <tag><lit-tag v="pos"/></tag>
             <tag><var n="number"/> </tag>             

            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
<lit-tag v="2"/>
 <lit-tag v="3"/>
<lit-tag v="4"/>

             <!-- <var n="number"/>-->
<clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<!--
<rule comment="RULE: nom Pronoun NOM">
      <pattern>
	<pattern-item n="nom"/>
        <pattern-item n="gen"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>
<let>    
<clip pos="3" side="tl" part="a_pos"/><lit v=""/>   
</let> 
           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="2" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="2" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="2" side="tl" part="lem"/><lit v="his"/></let>
                </when>
               
              </choose>
<out>
          <chunk name="n-prn-nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><lit-tag v="det"/></tag>
              <tag><lit-tag v="pos"/></tag>
              <tag><lit-tag v="sg"/></tag>
            </tags>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>
<b/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
<lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
	<clip pos="3" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>
-->





<rule comment="RULE: Meninwe"> <!--prn-pers-adv -->
      <pattern>
        <pattern-item n="prn-pers-adv"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

  <call-macro n="convert-poss-to-pers">
          <with-param pos="1"/>
        </call-macro>

           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="himself"/></let>
                  <let><var n="mf"/><lit-tag v="m"/></let>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>

               
              </choose>
<out>
          <chunk name="prn-pers-adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
<lu>
<lit v="by"/>
<lit-tag v="pr"/>
            </lu>
<b/>
            <lu>
<lit v="myself"/>
<lit-tag v="prn"/>
<lit-tag v="ref"/>
<lit-tag v="p1"/>
<lit-tag v="mf"/>
<lit-tag v="sg"/>

            </lu>
          
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: Ozderine"> <!--ozderine -->
      <pattern>
        <pattern-item n="prn-ref"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

  <call-macro n="convert-poss-to-pers">
          <with-param pos="1"/>
        </call-macro>

           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="himself"/></let>
                  <let><var n="mf"/><lit-tag v="m"/></let>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>

               
              </choose>
<out>
          <chunk name="prn-ref" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>

              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><var n="mf"/></tag>
              <tag> <var n="number"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="a_pron"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
<lit-tag v="4"/>

            </lu>
          
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: kim"> <!-- -->
      <pattern>
        <pattern-item n="prn-itg"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

  <call-macro n="convert-poss-to-pers">
          <with-param pos="1"/>
        </call-macro>

          
<out>
          <chunk name="prn-itg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>

              <tag><clip pos="1" side="tl" part="a_prn"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
             <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>


      

    </tags>
 
    


            <lu>
              <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="a_prn"/>
<lit-tag v="prn"/> 
      <lit-tag v="itg"/> 
     <lit-tag v="mf"/> 
      <lit-tag v="sp"/> 
     

            </lu>

          
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>









<!--
<rule comment="RULE: Pr-GenP">
      <pattern>
        <pattern-item n="p-gen"/>
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
<let>    
<clip pos="2" side="tl" part="a_pos"/><lit v=""/>   
</let> 
           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="his"/></let>
                </when>
               
              </choose>
<out>
          <chunk name="pr-gen" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="pr"/></tag>
              
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
<lit-tag v="prn"/>
<lit-tag v="obj"/>
<lit-tag v="a_pers"/>
<lit-tag v="sp"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>
-->
  

  




<rule comment="RULE: NUM  NOM"> <!--бірінші үй-->
      <pattern>
        <pattern-item n="num-ord"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
<!-- <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>-->
        <out>
          <chunk name="ordnum-nom" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>

             <lit-tag v="det"/>
<lit-tag v="ord"/>
<lit-tag v="sp"/>
            </lu>
            <b pos="1"/>
           
<lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
             <lit-tag v="sg"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


  

  <rule comment="RULE: NOM-POST">
      <pattern>
        <pattern-item n="post"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="n-post" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-post"/></tag>
            </tags>
            <lu>

              <clip pos="1" side="tl" part="lemh"/>
             <!--<lit-tag v="pr"/>-->

              <clip pos="1" side="tl" part="a_nom"/>
<clip pos="1" side="tl" part="a_pos"/>
             
              <clip pos="1" side="tl" part="lemq"/>

            </lu>
            <b/>
                     </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: қалау рай I want to + verb">
      <pattern>
<pattern-item n="want"/>
 <pattern-item n="kel"/>
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>


 <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>
         <out>
          <chunk name="wantto" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="sl" part="a_tns"/></tag>
              <tag><clip pos="2" side="sl" part="a_pers"/></tag>
              <tag><clip pos="2" side="sl" part="a_nbr"/></tag>
            </tags>

            
            
<lu>
          <lit v="want"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="inf"/>
        <lit v="#"/>  
<b/>
          <lit v="to"/>  
	
	
</lu>
<b/>

            <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: шақыр+ғы+сы I want to + verb">
      <pattern>
<pattern-item n="want"/>
 
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>


 <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>
         <out>
          <chunk name="kalau-rai" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="sl" part="a_tns"/></tag>
              <tag><clip pos="1" side="sl" part="a_pers"/></tag>
              <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
            </tags>

            
            
<lu>
          <lit v="want"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="inf"/>
        <lit v="#"/>  
<b/>
          <lit v="to"/>  
	
	
</lu>
<b/>

            <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: қалау рай I want+ed to + verb">
      <pattern>
<pattern-item n="want"/>
 <pattern-item n="kel-ifi"/>
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>


 <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>
         <out>
          <chunk name="wantedto" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="sl" part="a_tns"/></tag>
              <tag><clip pos="2" side="sl" part="a_pers"/></tag>
              <tag><clip pos="2" side="sl" part="a_nbr"/></tag>
            </tags>

            
            
<lu>
          <lit v="want"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="past"/>
        <lit v="#"/>  
<b/>
          <lit v="to"/>  
	
	
</lu>
<b/>

            <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: I want+ed to be+ nom">
      <pattern>
<pattern-item n="nom"/>
<pattern-item n="want"/>
 <pattern-item n="kel-ifi"/>
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>


 <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>
         <out>
          <chunk name="wantedto" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="3" side="sl" part="a_tns"/></tag>
              <tag><clip pos="3" side="sl" part="a_pers"/></tag>
              <tag><clip pos="3" side="sl" part="a_nbr"/></tag>
            </tags>

            
            
<lu>
          <lit v="want"/>  
        <lit-tag v="vbmod"/>
	<lit-tag v="past"/>
        <lit v="#"/>  
<b/>
          <lit v="to"/>  
	
	
</lu>
<b/>

            <lu>
<lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="inf"/>
              
             
            </lu>
<b/>
 <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: degen + NOM">
      <pattern>
        <pattern-item n="degen"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="degen-nom" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            
            <lu>
              <clip pos="2" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: degen + NOM">
      <pattern>
        <pattern-item n="degen"/>
        
      </pattern>
      <action>

        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="dep" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            
            <lu>
              <lit v="speak"/>
              <lit-tag v="vblex"/>
              <lit-tag v="pres"/>


                    </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>







<rule comment="RULE: PRN">
      <pattern>
        <pattern-item n="prn"/>
      </pattern>
<action>
             
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>

 <choose>
                 <when>
                   <test>

                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>

                 <when>
                   <test>
<and>
                       <equal><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.dem.adv"/></equal>
   <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
</and>
                  </test>

               

        <out>
          <chunk name="pron-bylai" case="caseFirstWord">
            <tags>
              <tag>	<lit-tag v="AdvP"/></tag>
	 </tags>
            <lu>

            <lit v="like that"/>
	<lit-tag v="adv"/>

             
	
            </lu>
          </chunk>
        </out>
 </when>


 <when>
                   <test>
<and>
                    <equal><clip pos="1" side="sl" part="learned_determinertype"/><lit-tag v="dem"/></equal>
<or>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="мына"/></equal>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="Мына"/></equal>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="Осы"/></equal>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="осы"/></equal>
</or>
</and>
                  </test>

               
        <out>
          <chunk name="pronoun-myna" case="caseFirstWord">
            <tags>
              <tag>            <lit-tag v="SN.NOM"/></tag>
	<tag><clip pos="1" side="tl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="tn"/>
	<lit-tag v="mf"/>
<lit-tag v="3"/>
<lit-tag v="4"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
          </chunk>
        </out>
 </when>
<when>
                   <test>
               <and>
<or>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="Бұл"/></equal>
</or>
 <not><equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal></not>
 <not><equal><clip pos="1" side="sl" part="learned_determinertype"/><lit-tag v="dem"/></equal></not>
</and>
                  </test>

               
        <out>
          <chunk name="it-pronoun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
               <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="obj"/>
<lit-tag v="p3"/>
<lit-tag v="nt"/>
<lit-tag v="sg"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
          </chunk>
        </out>
 </when>
<when>
                   <test>
               <and>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
 <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="abl"/></equal>

</and>
                  </test>

               
        <out>
          <chunk name="this-pronoun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
               <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="obj"/>
<lit-tag v="p3"/>
<lit-tag v="nt"/>
<lit-tag v="sg"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
          </chunk>
        </out>
 </when>
<when>
                   <test>
               <and>
<or>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="Бұл"/></equal>
</or>
<or>
 <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal>
 <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="nom"/></equal>
</or>



</and>
                  </test>

               
        <out>
          <chunk name="it-pronoun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
               <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="obj"/>
<lit-tag v="p3"/>
<lit-tag v="nt"/>
<lit-tag v="sg"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
          </chunk>
        </out>
 </when>
                 <when>
                   <test>
<and>
                    <not>   <equal><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.ind"/></equal></not>
<or>
<not>   <equal><clip pos="1" side="sl" part="lemh"/><lit v="Мына"/></equal></not>
<not>   <equal><clip pos="1" side="sl" part="lemh"/><lit v="мына"/></equal></not>
</or>
<not>   <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="loc"/></equal></not>
</and>
                  </test>

               
        <out>
          <chunk name="pronoun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="tl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="tn"/>

<lit-tag v="3"/>
<lit-tag v="4"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
          </chunk>
        </out>
 </when>
  
                <otherwise>
      
        <out>
          <chunk name="pronoun-loc" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	    <tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
            <lit v="where"/>
            <lit-tag v="adv"/>
	<lit-tag v="itg"/>

	
            </lu>
          </chunk>
        </out>
                </otherwise>
              </choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

  


<rule comment="RULE: PRN">
      <pattern>
        <pattern-item n="prn"/>
<pattern-item n="nom"/>
      </pattern>
<action>
             
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
<call-macro n="choose_case_and_postposition1">
          <with-param pos="2"/>

        </call-macro>

 <choose>
                 <when>
                   <test>

                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>

                 <when>
                   <test>
<and>
                       <equal><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.dem.adv"/></equal>
   <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
</and>
                  </test>
              


 </when>


 <when>
                   <test>
<and>
                    <equal><clip pos="1" side="sl" part="learned_determinertype"/><lit-tag v="dem"/></equal>
<or>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="мына"/></equal>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="Мына"/></equal>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="Осы"/></equal>
  <equal><clip pos="1" side="sl" part="lemh"/><lit v="осы"/></equal>
</or>
</and>
                  </test>

               
        <out>
          <chunk name="pronoun-myna_noun" case="caseFirstWord">
            <tags>
              <tag>            <var n="sntype"/></tag>
	<tag><clip pos="1" side="tl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="tn"/>
	<lit-tag v="mf"/>
<lit-tag v="3"/>
<lit-tag v="4"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
<b/>
 <lu>
	<clip pos="2" side="tl" part="lem"/>
<clip pos="2" side="tl" part="a_nom"/>
<lit-tag v="3"/>
    </lu>  
          </chunk>
        </out>
 </when>
<when>
                   <test>
               <and>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
 <not><equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal></not>
 <not><equal><clip pos="1" side="sl" part="learned_determinertype"/><lit-tag v="dem"/></equal></not>
</and>
                  </test>

               
        <out>
          <chunk name="it-pronoun_noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
               <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="obj"/>
<lit-tag v="p3"/>
<lit-tag v="nt"/>
<lit-tag v="sg"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
<b/>
 <lu>
	<clip pos="2" side="tl" part="lem"/>
<clip pos="2" side="tl" part="a_nom"/>
    </lu>  
          </chunk>
        </out>
 </when>
<when>
                   <test>
               <and>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
 <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="abl"/></equal>

</and>
                  </test>

               
        <out>
          <chunk name="this-pronoun_noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
               <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="obj"/>
<lit-tag v="p3"/>
<lit-tag v="nt"/>
<lit-tag v="sg"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
<b/>
 <lu>
	<clip pos="2" side="tl" part="lem"/>
<clip pos="2" side="tl" part="a_nom"/>
    </lu>  
          </chunk>
        </out>
 </when>
<when>
                   <test>
               <and>
<or>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="бұл"/></equal>
 <equal><clip pos="1" side="sl" part="lemh"/><lit v="Бұл"/></equal>
</or>
<or>
 <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal>
 <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="nom"/></equal>
</or>
</and>
                  </test>

               
        <out>
          <chunk name="it-pronoun_noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
               <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="obj"/>
<lit-tag v="p3"/>
<lit-tag v="nt"/>
<lit-tag v="sg"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>

<b/>
 <lu>
	<clip pos="2" side="tl" part="lem"/>
<clip pos="2" side="tl" part="a_nom"/>
<lit-tag v="sg"/>
    </lu>  
          </chunk>
        </out>
 </when>
                 <when>
                   <test>
<and>
                    <not>   <equal><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.ind"/></equal></not>
<or>
<not>   <equal><clip pos="1" side="sl" part="lemh"/><lit v="Мына"/></equal></not>
<not>   <equal><clip pos="1" side="sl" part="lemh"/><lit v="мына"/></equal></not>
</or>
<not>   <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="loc"/></equal></not>
</and>
                  </test>

               
        <out>
          <chunk name="pronoun-noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	<tag><clip pos="1" side="tl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>

            <lu>
	<clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn"/>
	<lit-tag v="tn"/>

<lit-tag v="3"/>
<lit-tag v="4"/>
               <clip pos="1" side="tl" part="lemq"/>
  	
             
	
            </lu>
<b/>
 <lu>
	<clip pos="2" side="tl" part="lem"/>
<clip pos="2" side="tl" part="a_nom"/>
<var n="number"/>
    </lu>        
          </chunk>
        </out>
 </when>
  
                <otherwise>
      
        <out>
          <chunk name="pronoun-loc_noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
	    <tag><clip pos="1" side="sl" part="a_mf"/></tag>
	              <tag><var n="number"/></tag>
              
            </tags>
            <lu>
            <lit v="where"/>
            <lit-tag v="adv"/>
	<lit-tag v="itg"/>

	
            </lu>
          </chunk>
        </out>
                </otherwise>
              </choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: NOM-ant"> <!--for ant,loc-->
      <pattern>
        <pattern-item n="ant"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
	<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
 
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>
<lit-tag v="ant"/></equal>
                  </test>
                             </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>


<lit-tag v="top"/></equal>
                  </test>
                 


                </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_case"/>


<lit-tag v="gen"/></equal>
                  </test>
                 <let><var n="postposition_lu"/><lit v=""/></let>


                </when>

	</choose>

        <out>
          <chunk name="np_ant" case="caseFirstWord">
            <tags>
              
		<tag><var n="sntype"/></tag> 

		
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
	
 	<!--<lit-tag v="ant"/>-->
             <clip pos="1" side="tl" part="a_mf"/>
	<lit-tag v="sg"/>
              <clip pos="1" side="tl" part="lemq"/>          
	

            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NOM-ant"> <!--for ant,loc with cop-->
      <pattern>
        <pattern-item n="ant"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
	<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
 
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>
<lit-tag v="ant"/></equal>
                  </test>
                             </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>


<lit-tag v="top"/></equal>
                  </test>
                 


                </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_case"/>


<lit-tag v="gen"/></equal>
                  </test>
                 <let><var n="postposition_lu"/><lit v=""/></let>


                </when>

	</choose>

        <out>
          <chunk name="np_ant-cop" case="caseFirstWord">
            <tags>
              
		<tag><var n="sntype"/></tag> 

		
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
	
 	<!--<lit-tag v="ant"/>-->
             <clip pos="1" side="tl" part="a_mf"/>
	<lit-tag v="sg"/>
              <clip pos="1" side="tl" part="lemq"/>          
	

            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: NOM-ant"> <!--for Мэридің күшігі жоқ-->
      <pattern>
        <pattern-item n="ant"/>
        <pattern-item n="nom"/>
        <pattern-item n="zhok-ij"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
	<call-macro n="choose_case_and_postposition1">
          <with-param pos="2"/>

        </call-macro>
 
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>
<lit-tag v="ant"/></equal>
                  </test>
                             </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>


<lit-tag v="top"/></equal>
                  </test>
                 


                </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_case"/>


<lit-tag v="gen"/></equal>
                  </test>
                 <let><var n="postposition_lu"/><lit v=""/></let>


                </when>

	</choose>

        <out>
          <chunk name="ant-noun-zhok" case="caseFirstWord">
            <tags>
              
		<tag><var n="sntype"/></tag> 
		<tag><var n="number"/></tag>
		
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
	
 	<!--<lit-tag v="ant"/>-->
             <clip pos="1" side="tl" part="a_mf"/>
	<lit-tag v="3"/>
              <clip pos="1" side="tl" part="lemq"/>          
	

            </lu>
<b pos="1"/>
<lu>
              <lit v="do"/>
              <lit-tag v="vbdo"/>
              <lit-tag v="pres"/>  
<lit-tag v="p3"/>
              <lit-tag v="sg"/>                       
</lu>
<b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>                      
</lu>
<b/>

<lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="pres"/>
              
<lit-tag v="4"/>
              
</lu>
<b pos="2"/>

<lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NOM-cog"> <!--for cog with cop-->
      <pattern>
        <pattern-item n="cog"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>
<lit-tag v="cog"/></equal>
                  </test>
                             </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>

<lit-tag v="top"/></equal>
                  </test>
 
                </when>

	</choose>


        <out>
          <chunk name="cog-cop" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
		
    <tag><lit-tag v="sg"/></tag>
            </tags>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
	<clip pos="1" side="tl" part="a_mf"/>
 	
	
              <clip pos="1" side="tl" part="lemq"/>          
	
        <lit-tag v="3"/> 
	<!--<lit-tag v="3"/> -->
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NOM-cog"> <!--for cog -->
      <pattern>
        <pattern-item n="cog"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
 
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>
<lit-tag v="cog"/></equal>
                  </test>
                             </when>

	</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nom"/>

<lit-tag v="top"/></equal>
                  </test>
 
                </when>

	</choose>


        <out>
          <chunk name="cog" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
		
    <tag><lit-tag v="sg"/></tag>
            </tags>
            <lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
	<clip pos="1" side="tl" part="a_mf"/>
 	
	
              <clip pos="1" side="tl" part="lemq"/>          
	
        <lit-tag v="3"/> 
	<!--<lit-tag v="3"/> -->
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


   <rule comment="RULE: ADJ NOM-GEN LOC-ATTR"> 
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom-gen"/>
        <pattern-item n="nom1"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="adj-nomgen-locattr" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag><lit-tag v="ATTR"/></tag>
            </tags>
            <lu>
              <lit v="in"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <lit-tag v="sg"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b/>
            <lu>
              <lit v="of"/>
              <lit-tag v="pr"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM  NOM"> <!--in 1920 year-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="zhyl"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
<!-- <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>-->
        <out>
          <chunk name="num-zhyl" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-NUM"/></tag>
            </tags>
<lu>
              <lit v="in"/>
              <lit-tag v="pr"/>
             
            </lu>
            

<b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
           
<lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
             <lit-tag v="sg"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>
 


  <rule comment="RULE: ADJ ADJ DET-IND NOM">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="det"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="d-j-j-n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="NEW RULE: unknown">  
  <pattern>
    <pattern-item n="unknown"/>
  </pattern>
  <action>
 
    <out>
    <chunk name="unk-noun">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><lit-tag v="a_nbr"/></tag> 
    <tag><lit-tag v="p3"/></tag> 
    <tag><lit-tag v="a_pos"/></tag> 
    <tag><lit-tag v="a_case"/></tag> 
    </tags>
    <lu>
       <clip pos="1" side="tl" part="whole"/>
    </lu>
    </chunk>
    </out>
  </action>
</rule>






  <rule comment="RULE: ADJ DET-IND NOM">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="det"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="d-j-n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
           <lu>
              <clip pos="3" side="tl" part="lem"/>
	<clip pos="3" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: NUM  NOM"> <!--7  kyz-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-NUM"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
          <!--   <lit-tag v="num"/>-->
            </lu>
            <b pos="1"/>
           
<lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM  NOM+more than"> <!--10 millionnan actam-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
<pattern-item n="astam"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-more_than" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-NUM"/></tag>
            </tags>
 <lu>
              <clip pos="3" side="tl" part="lem"/>
            <lit-tag v="preadv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
             <lit-tag v="num"/>
            </lu>
            <b pos="1"/>
           
<lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM  NOM"> <!--7  kyz.-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-NUM"/></tag>
            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            <!-- <lit-tag v="num"/>-->

            </lu>
            <b pos="1"/>
           
<lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: NUM  NOM NOM"> <!--7 okushy kyz-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
	<pattern-item n="nom-px3sp"/>
      </pattern>
      <action>
<call-macro n="choose_case_and_postposition2">
          <with-param pos="2"/>
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="3"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-nom" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
             <lit-tag v="num"/>
            </lu>
            <b pos="1"/>
           
<lu>
             <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
             <lit-tag v="sg"/>
            </lu>
<b/>
<lu>
	<clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM ADJ NOM NOM"> <!--7 ademi okushy kyz-->
      <pattern>
        <pattern-item n="num"/>
	<pattern-item n="adj"/>
        <pattern-item n="nom"/>
	<pattern-item n="nom-px3sp"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-nom" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
<lu>
              <clip pos="2" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
           
<lu>
             <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nom"/>
             <lit-tag v="sg"/>
            </lu>
<b/>
<lu>
	<clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_nom"/>
             <var n="number"/>
            </lu>
<b/>
            
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

  <rule comment="RULE: DET-IND NOM">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="d-n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="2"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: DET NOM">
      <pattern>
        <pattern-item n="dett"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let> <var n="num1"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="num1"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

        <out>
          <chunk name="det-nom" case="caseFirstWord">
            <tags>
              
 <tag><lit-tag v="SN"/></tag>
              <tag><lit-tag v="det"/></tag>
              <tag><lit-tag v="dem"/></tag>
              <tag><var n="num1"/></tag>

            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
<lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: DET NOM">
      <pattern>
        <pattern-item n="dett"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let> <var n="num1"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="num1"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

        <out>
          <chunk name="det-nom-cop" case="caseFirstWord">
            <tags>
              
 <tag><lit-tag v="SN"/></tag>
              <tag><lit-tag v="det"/></tag>
              <tag><lit-tag v="dem"/></tag>
              <tag><var n="num1"/></tag>

            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
<lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
<clip pos="2" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: DET ADJ NOM">
      <pattern>
        <pattern-item n="dett"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let> <var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

        <out>
          <chunk name="det-adj-nom" case="caseFirstWord">
            <tags>

              <tag><var n="sntype"/></tag>
            
           
            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
  <lit-tag v="det"/>
              <lit-tag v="dem"/>
              <var n="number"/>

            </lu>
            <b pos="1"/>
<lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
       <b/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: DET ADJ NOM COP">
      <pattern>
        <pattern-item n="dett"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let> <var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

        <out>
          <chunk name="det-adj-nom-cop" case="caseFirstWord">
            <tags>

              <tag><var n="sntype"/></tag>
            
           
            </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
  <lit-tag v="det"/>
              <lit-tag v="dem"/>
              <var n="number"/>

            </lu>
            <b pos="1"/>
<lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
       <b/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: cnjcoo">  
  <pattern>
    <pattern-item n="cnjcoo"/>
  </pattern>
  <action>
   <call-macro n="build-cnjcoo-lu"><with-param pos="1"/></call-macro> 
    <out>
    <chunk name="than">
    <tags>
  <tag><lit-tag v="THAN"/></tag>
    <tag><lit-tag v="post"/></tag>
    </tags>
    <lu>
      <var n="cnjcoo_lu"/>
     </lu>
    </chunk>
    </out>
  </action>
</rule>



  <rule comment="RULE: ADJ NOM">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="adj-nom" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
             <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>

            
            </lu>
            <b pos="1"/>
            <lu>
 <clip pos="2" side="tl" part="lem"/>
            <clip pos="2" side="tl" part="a_nom"/>

              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


  <rule comment="RULE: ADJ NOM">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="adj-nom-cop" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
 <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
             <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_adjec"/>

            
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
	<clip pos="2" side="tl" part="a_nom"/>
<var n="number"/>             
 <!--<lit-tag v="3"/>-->
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: NUM ADJ NOM"> <!--7 ademi kyz-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="3"/>
        </call-macro>
       <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-adj-nom" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b pos="1"/>
            <b pos="2"/>
<lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
<b/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
<clip pos="3" side="tl" part="a_nom"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NUM ADJ NOM"> <!--7 ademi kyz-->
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
<pattern-item n="cop"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="3"/>
        </call-macro>
       <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-adj-n-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN-det"/></tag>
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
             
            </lu>
            <b/>
            
<lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
<b/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
              <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: V-verb+"> <!--passive Present Perfect  in Negative-->
      <pattern>
 <pattern-item n="v-ing"/>
        <pattern-item n="v-bol-neg"/>
 <pattern-item n="emes"/>
      </pattern>
      <action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-presperf-pp" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
            </lu>
            <b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
             
            </lu>
            <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pp"/>
              
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule> 

<rule comment="RULE: NUM Adj NOM NOM-post"><!-- under seven beautiful gardens-->
      <pattern>
        
<pattern-item n="num"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
 <pattern-item n="nom-pr"/>
      </pattern>
     <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="3"/>
        </call-macro>
       <choose>
                 <when>
                   <test>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit v=""/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-adj-nom-nom-pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
              <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
<tag><var n="sntype"/></tag>
            </tags>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
             <lit-tag v="pr"/>

            </lu>
            <b pos="1"/>

<lu>
              <clip pos="1" side="tl" part="whole"/>

            </lu>
<b/>

            <lu>
              <clip pos="2" side="tl" part="whole"/>
              
            </lu>
<b/>

            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <var n="number"/>

            </lu>




          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



  <rule comment="RULE: ADJ ADJ NOM">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>
        <out>

          <chunk name="j-j-n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
            </tags>
<lu>
<var n="postposition_lu"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_adjec"/>
		<clip pos="1" side="tl" part="lemq"/>            
</lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            
 
<b/>
<lu>
	<clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
            
              <clip pos="3" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>
              
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




    <rule comment="RULE: COP-FIN">
      <pattern>
        <pattern-item n="cop-fin"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                     <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>

                     </and>
                  </test>
                  <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                </when>
                <otherwise>
                  <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V.COP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="RULE: V-ING V-NEG-POT">
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="v-neg-pot"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
          <lit-tag v="inf"/>
        </let>
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v-neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="sl" part="a_tns"/></tag>
              <tag><clip pos="2" side="sl" part="a_pers"/></tag>
              <tag><clip pos="2" side="sl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <clip pos="2" side="tl" part="a_tns"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: V-PrPerCon"> <!--Present Perfect Continuous in Negative-->
      <pattern>
 <pattern-item n="v-ing"/>
        <pattern-item n="v-perfcon-neg"/>
      </pattern>
      <action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-presperf-neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="pres"/>
            <!--  <lit-tag v="2"/>
              <lit-tag v="3"/>-->
            </lu>
            <b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
             
            </lu>
            <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pp"/>
              
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule> 





<rule comment="RULE: V-futureCon"> <!--future negative continuous I will not be playing-->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="v-futCon-neg"/>
      </pattern>
      <action>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-futcont" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><lit-tag v="subs"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="will"/>
             <lit-tag v="vaux"/>
             <lit-tag v="inf"/>
 </lu>
  <b/>

 <lu>
              <lit v="not"/>
             <lit-tag v="adv"/>
            
 </lu>
  <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="inf"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="2"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: V-future perfect"> <!--Future perfect Cont I will have been playing - Мен ойнап боламын-->
      <pattern>
 <pattern-item n="v-prc_perf"/>
        <pattern-item n="v-bol"/>
      </pattern>
      <action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-fut_perf_cont" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
              <lit v="will"/>
              <lit-tag v="vaux"/>
              <lit-tag v="inf"/>
             </lu>
            <b/>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="inf"/>
              
            </lu>
            <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pp"/>
              
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule> 
  
<rule comment="RULE: V-GER-PAST in negative"><!--Мен бармағаным жөн I should not go-->
      <pattern>
        <pattern-item n="v-ger-past-neg"/>
	<pattern-item n="jon"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
          <lit-tag v="inf"/>
        </let>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v-zhon_neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
	<lu>
	<lit v="should"/>
              <lit-tag v="vaux"/> 
		<lit-tag v="inf"/>

	</lu>
	<b/>
	<lu>
	<lit v="not"/>
              <lit-tag v="adv"/> 
	</lu>
	<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>
<rule comment="RULE: V-be+not+ pp"> 
<!--is not written-->
      <pattern>
	
        <pattern-item n="v-passive-neg"/>
      </pattern>
            <action>
      
  
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
<choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                    
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
<let><var n="number"/><lit-tag v="pl"/></let>
<let><var n="nbr"/><lit v=""/></let>
<let><var n="pers"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
          
                 <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>

<let><var n="nbr"/><lit-tag v="4"/></let>
<let><var n="pers"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>
     
          
        <out>
          <chunk name="neg-pres-pass" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive"/></tag>
            <!--  <tag><clip pos="1" side="tl" part="a_tns"/></tag>-->
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>

              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
            </lu>
            <b/>
<lu>
                <lit v="not"/>
              <lit-tag v="adv"/>
                         </lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: V-is/are+not+being pp"> <!--is not being written-->
      <pattern>

        <pattern-item n="v-being_passive"/>
<pattern-item n="vaux-neg"/>
      </pattern>
      <action>
         <let><clip pos="2" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
<choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="2" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
          
 
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

          
        <out>
          <chunk name="being-pass-neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
            </lu>
            <b/>
   <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="ger"/>
           </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: V-ING VAUX-NEG-pres"> <!-- negative present contin -->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux-neg-pres"/>
      </pattern>
      <action>
   <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

         <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>


           </choose>
                        <out>        
          <chunk name="verb-ing-not-pres" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><lit-tag v="pres"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
             <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
               <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<!--ALL PASSIVE must be corrected in genereating correct to be and some of genereating 's' in noun-->

<rule comment="RULE: V-be+ pp"> <!--is written-->
      <pattern>
	
        <pattern-item n="v-passive"/>
      </pattern>
      <action>
  
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
<choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                    
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
<let><var n="number"/><lit-tag v="pl"/></let>
<let><var n="nbr"/><lit v=""/></let>
<let><var n="pers"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
          
 <!--
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>-->
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>

<let><var n="nbr"/><lit-tag v="4"/></let>
<let><var n="pers"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>
     
          
        <out>
          <chunk name="pres-pass" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive"/></tag>
             <!-- <tag><clip pos="1" side="tl" part="a_tns"/></tag>-->
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>

            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: V-is/are+being pp"> <!--кітап жазылып жатыр - book is being written-->
      <pattern>
	
        <pattern-item n="v-being_passive"/>
<pattern-item n="vaux"/>
      </pattern>
      <action>
         <let><clip pos="2" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
<choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                    <!-- </and>-->
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
<let><var n="number"/><lit-tag v="pl"/></let>
<let><var n="nbr"/><lit v=""/></let>
<let><var n="pers"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="2" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
          
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>

<let><var n="nbr"/><lit-tag v="4"/></let>
<let><var n="pers"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>

          
        <out>
          <chunk name="cont-pass" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><var n="number"/></tag>
            </tags>
<!--
<lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nom"/>
             
<var n="number"/>

            </lu>
<b/>-->
           <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>

              <lit-tag v="pres"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b/>
 <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>

              <lit-tag v="ger"/>
             <!-- <lit-tag v="3"/>
              <lit-tag v="4"/>-->
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




 <rule comment="RULE: V-ING VAUX-NEG-pres"> <!-- negative present contin -->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux-neg-pres"/>
      </pattern>
      <action>
   <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
 

         <choose><!-- choosing correct to be-->
               <when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>


           </choose>
                        <out>        
          <chunk name="verb-ing-not-pres" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><lit-tag v="pres"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
             <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
               <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


    <rule comment="RULE: V-ADV V-ING VAUX">
      <pattern>
        <pattern-item n="v-adv"/>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
          <lit-tag v="ger"/>
        </let>
        <let>
          <clip pos="2" side="tl" part="a_tns"/>
          <lit-tag v="ger"/>
        </let>
        <call-macro n="conv-temps1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="v2" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="3" side="tl" part="a_tns"/></tag>
	
              <tag><clip pos="3" side="tl" part="a_pers"/></tag>
              <tag><clip pos="3" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <clip pos="3" side="tl" part="a_tns"/>

            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="a_tns"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="RULE: V-GER-PAST">
      <pattern>
        <pattern-item n="v-ger-past"/>
	<pattern-item n="jon"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
          <lit-tag v="inf"/>
        </let>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v3" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
	<lu>
	<lit v="should"/>
              <lit-tag v="vaux"/> 
		<lit-tag v="inf"/>

</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




    <rule comment="RULE: V-ADV">
      <pattern>
        <pattern-item n="v-adv"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
          <lit-tag v="ger"/>
        </let>
        <out>
          <chunk name="v-adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: V-PrPerCon"> <!--Present Perfect Continuous-->
      <pattern>
 <pattern-item n="v-ing"/>
        <pattern-item n="v-perfcon"/>
      </pattern>
      <action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-presperfcon" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
            </lu>
            <b/>

<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="pp"/>
              
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule> 


<rule comment="RULE: V-futureCon"> <!--future continuous I will be playing-->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="v-futCon"/>
      </pattern>
      <action>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-futcont" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><lit-tag v="subs"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="will"/>
             <lit-tag v="vaux"/>
             <lit-tag v="inf"/>
 </lu>
  <b/>
<lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="inf"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="2"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: V-ING VAUX"> <!--for present and past continuous-->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux-can"/>
        <pattern-item n="vaux"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>

        <choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="2" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
           </choose>
           <choose>
<when>
                   <test>
                  
                       <equal><clip pos="2" side="sl" part="learned_negative"/><lit-tag v="neg"/></equal>
                       
                    
                      </test>
           <let>    <var n="current_verb"/>
<concat>
            <lit v="not"/>
            <lit-tag v="adv"/>
          </concat>
          </let>  
                </when>
<otherwise>
<let>    <var n="current_verb"/>

            <lit v=""/>


          </let> 
</otherwise>
           </choose>

        <out>
          <chunk name="can-neg-жатыр" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="3" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="can"/>
              <lit-tag v="vaux"/>
              <lit-tag v="2"/>
              
            </lu>
            <b pos = "1"/>
            <b pos = "2"/>
<lu>
<var n="current_verb"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pres"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



 <rule comment="RULE: V-ING VAUX"> <!--for present and past continuous-->
      <pattern>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>

        <choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
<let><var n="number"/><lit v=""/></let>
<let><var n="nbr"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
<let><var n="number"/><lit v=""/></let>
<let><var n="nbr"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
<let><var n="number"/><lit v=""/></let>
<let><var n="nbr"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="2" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
<let><var n="number"/><lit-tag v="sg"/></let>
<let><var n="nbr"/><lit-tag v="p3"/></let>
       
                </when>
<otherwise>
<let><var n="number"/><lit-tag v="sg"/></let>
<let><var n="nbr"/><lit-tag v="p3"/></let>
</otherwise>
           </choose>
<choose>
<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="бол"/></equal>
                      </test>
                <out>
          <chunk name="verb-ing-be" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><var n="nbr"/></tag>
              <tag><var n="number"/></tag>
            </tags>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b/>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="ger"/>

            </lu>
          </chunk>
        </out>
                </when>
<otherwise>
        <out>
          <chunk name="verb-ing" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><var n="nbr"/></tag>
              <tag><var n="number"/></tag>
            </tags>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
</otherwise>
</choose>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



 <rule comment="RULE: degen+V-ING VAUX"> <!--for present and past continuous-->
      <pattern>
<pattern-item n="degen"/>
        <pattern-item n="v-ing"/>
        <pattern-item n="vaux"/>
      </pattern>
      <action>
       
        <call-macro n="conv-temps1">
          <with-param pos="3"/>
        </call-macro>

        <choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="3" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="3" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="3" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="3" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="3" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="3" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
           </choose>

        <out>
          <chunk name="verb-ing1" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="3" side="tl" part="a_tns"/></tag>
              <tag><clip pos="3" side="tl" part="a_pers"/></tag>
              <tag><clip pos="3" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


    <rule comment="RULE: V-NEG-FIN"> <!-- negative present/past simple-->
      <pattern>
        <pattern-item n="v-neg-fin"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>

        <out>
          <chunk name="v-neg-fin" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="do"/>
              <lit-tag v="vbdo"/>
              <lit-tag v="2"/>
             <lit-tag v="3"/>
             <lit-tag v="4"/>
            </lu>
            <b/>
            <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


   

<!--
<rule comment="RULE: V-was+not+ pp">Book was not written Кітап жазылмады
      <pattern>

        <pattern-item n="v-past_passive-neg"/>
      </pattern>
<action>
          <let><clip pos="2" side="tl" part="a_tns"/><lit-tag v="past"/></let>
<choose> 

<when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                    
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
<let><var n="number"/><lit-tag v="pl"/></let>
<let><var n="nbr"/><lit v=""/></let>
<let><var n="pers"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="2" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="3" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="3" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
          
 
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>

<let><var n="nbr"/><lit-tag v="4"/></let>
<let><var n="pers"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>


        <out>
          <chunk name="past-pass-neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive-neg"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <var n="number"/>

            </lu>
<b/>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>

              <lit-tag v="2"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
              </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>-->


<!--
<rule comment="RULE: V-was+ pp"> Book was written Кітап жазылды
      <pattern>

        <pattern-item n="v-past_passive"/>
      </pattern>
      <action>
         
           <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="past"/></let>
<choose> 

<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                    
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
<let><var n="number"/><lit-tag v="pl"/></let>
<let><var n="nbr"/><lit v=""/></let>
<let><var n="pers"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="1" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
                          
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>

<let><var n="nbr"/><lit-tag v="4"/></let>
<let><var n="pers"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>



        <out>
          <chunk name="past-pass" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>

            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>

              <lit-tag v="past"/>
              <lit-tag v="3"/>
              <lit-tag v="4"/>
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>-->


<rule comment="RULE: V-will+be+verb(pp)"> <!--will be written-->
      <pattern>
<pattern-item n="nom"/>
        <pattern-item n="v-future_passive"/>
      </pattern>
      <action>
         <let><clip pos="2" side="tl" part="a_tns"/><lit-tag v="future"/></let>
         <choose><!-- choosing correct to be--> 

<when>
                   <test>
                   
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="2" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="2" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                       <equal><clip pos="2" side="sl" part="a_tns"/><lit-tag v="past"/></equal>
                     </and>
                      </test>
           <let><clip pos="2" side="tl" part="a_pers"/><lit v="p3"/></let>
                 <let><clip pos="2" side="tl" part="a_nbr"/><lit v="sg"/></let>

                </when>
          
 
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>



        <out>
          <chunk name="future-pass" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV-passive"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <var n="number"/>

            </lu>
<b/>
<lu>
              <lit v="will"/>
              <lit-tag v="vaux"/>
              <lit-tag v="inf"/>
              
            </lu>
            <b/>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser"/>
              <lit-tag v="inf"/>
              
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>






<rule comment="RULE: V-have not pp"> <!--for negative present/past perfect-->
      <pattern>
        <pattern-item n="v-past-neg"/>
      </pattern>
      <action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>

                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-presperf-not" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="2"/>
              
            </lu>
            <b/>
 <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
                         </lu> 
<b/>
            <lu>

              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>






<rule comment="RULE: V-have pp"> <!--for present/past perfect-->
      <pattern>
        <pattern-item n="v-past"/>
      </pattern>
      <action>
         <let><clip pos="1" side="tl" part="a_tns"/><lit-tag v="pres"/></let>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>
<choose>
               <when>
                   <test>
                    
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="бол"/></equal>

                      
                   </test>
                 <let><var n="number"/><lit-tag v="vbser"/></let>

                </when>
<otherwise>
                 <let><var n="number"/>              <clip pos="1" side="tl" part="a_verb"/></let>
</otherwise>
           </choose>


        <out>
          <chunk name="verb-presperf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="2"/>
              <!--<lit-tag v="3"/>
              <lit-tag v="4"/>-->
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
<var n="number"/> 
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>







    <rule comment="RULE: V-IMP">
      <pattern>
        <pattern-item n="v-imp"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
	
          <lit-tag v="inf"/>
        </let>
        <out>
          <chunk name="v1" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
	
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
	      <!--<clip pos="1" side="tl" part="a_transitivity"/>-->
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

 <rule comment="RULE: for negative gerund">
      <pattern>
        <pattern-item n="v-gerund-neg"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="a_tns"/>
	
          <lit-tag v="inf"/>
        </let>
        <out>
          <chunk name="simpleV-neg" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
	
            </tags>
<lu>
 <lit v="not"/>
              <lit-tag v="adv"/> 
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="a_tns"/>
	      <!--<clip pos="1" side="tl" part="a_transitivity"/>-->
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: V-future-in-negative"> <!--negative future perfect I will not have played Мен ойнамаспын-->
      <pattern>
        <pattern-item n="v-fut-neg"/>
      </pattern>
      <action>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="neg-verb-futperf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><lit-tag v="pp"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="will"/>
             <lit-tag v="vaux"/>
             <lit-tag v="inf"/>
 </lu>
  <b/>
<lu>
              <lit v="not"/>
              <lit-tag v="adv"/>                      
</lu>
<b/>


<lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="inf"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="2"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>







<rule comment="RULE: pers-pron-gen">
  <pattern>
    <pattern-item n="pers-pron-gen"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="He"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 

 
  <out>
   <chunk name="pers-pron-gen">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><lit-tag v="prn"/></tag>
    <tag><lit-tag v="pos"/></tag>
    <tag><lit-tag v="mf"/></tag> 
    <tag><lit-tag v="sp"/></tag> 
    </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="2"/> 
      <lit-tag v="3"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>



<rule comment="RULE: pers-pron-gen">
  <pattern>
    <pattern-item n="pers-pron-gen"/>
    <pattern-item n="cop"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="He"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 

 
  <out>
   <chunk name="pers-pron-gen-cop">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><lit-tag v="prn"/></tag>
    <tag><lit-tag v="pos"/></tag>
    <tag><lit-tag v="mf"/></tag> 
    <tag><lit-tag v="sp"/></tag> 
    </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="2"/> 
      <lit-tag v="3"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>

<rule comment="RULE: N of n">
      <pattern>
        <pattern-item n="nom"/>
<pattern-item n="nom-px3sp"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="lemh"/><lit v="аст"/></equal>
                  </test>
                  <let><var n="number1"/><lit v=""/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
              <otherwise>
                  <let><var n="number1"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>



        <out>
          <chunk name="noun-of_noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
            
              <clip pos="2" side="tl" part="lemq"/>
<var n="number1"/>
            </lu>
<b/>
<lu>
<lit v="of"/>
<lit-tag v="pr"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <lit-tag v="3"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: N and n">
      <pattern>
        <pattern-item n="nom"/>
<pattern-item n="cnjcoo"/>
<pattern-item n="nom"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="lemh"/><lit v="аст"/></equal>
                  </test>
                  <let><var n="number1"/><lit v=""/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
              <otherwise>
                  <let><var n="number1"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>



        <out>
          <chunk name="noun-and_noun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
<var n="number"/>
            </lu>
<b/>
<lu>

	<clip pos="2" side="tl" part="whole"/>
              
            
</lu>
<b/>
<lu>
	<clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
            
              <clip pos="3" side="tl" part="lemq"/>
                <lit-tag v="2"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: prn Num  of n">
      <pattern>
<pattern-item n="gen"/>
<pattern-item n="num"/>
        
<pattern-item n="nom-px3sp"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition2">
          <with-param pos="2"/>
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="3"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="lemh"/><lit v="аст"/></equal>
                  </test>
                  <let><var n="number1"/><lit v=""/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
              <otherwise>
                  <let><var n="number1"/><lit-tag v="3"/></let>
                </otherwise>
              </choose>



        <out>
          <chunk name="num-of_noun" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
<tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    

            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="2" side="tl" part="whole"/>
              

            </lu>
<b/>

<lu>
	<clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
            
              <clip pos="3" side="tl" part="lemq"/>
                <lit-tag v="3"/>
            </lu>
<b/>
<lu>
<lit v="of"/>
<lit-tag v="pr"/>
</lu>
<b/>
<lu>
<clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



<rule comment="RULE: pers-pron+cop">
  <pattern>
    <pattern-item n="pers-pron1"/>
<pattern-item n="cop"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="He"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 
 <call-macro n="conv-to-subj">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>

 
  <out>
   <chunk name="subj-pron">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><var n="sntype"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

    </tags>
 
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="2"/> 
      <lit-tag v="3"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
<b/>
<!--<lu>
<clip pos="2" side="tl" part="lem"/>
</lu>  -->
</chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>





<rule comment="RULE: pers-pron1">
  <pattern>
    <pattern-item n="pers-pron1"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="He"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 
 <call-macro n="conv-to-subj">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>

 
  <out>
   <chunk name="subj-pron+cop">
    <tags>
    <tag><lit-tag v="SN-pron"/></tag>
    <tag><var n="sntype"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

    </tags>
 
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="2"/> 
      <lit-tag v="3"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>

<rule comment="RULE: pers-pron">
  <pattern>
    <pattern-item n="pers-pron"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     <equal caseless="yes">
            <clip pos="1" side="sl" part="a_case"/>
            <lit-tag v="loc"/>
          </equal>
      </test>
       <let><clip pos="1" side="sl" part="a_case"/><lit-tag v="ins"/></let> 
    </when>

    
  </choose>
 
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="he"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 
 <call-macro n="conv-to-subj">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
 
  <out>
   <chunk name="obj-pron">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><var n="sntype"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

    </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="obj"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>




<rule comment="RULE: pers-pron-sim"> <!--мендей -->
  <pattern>
    <pattern-item n="pers-pron-sim"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     <equal caseless="yes">
            <clip pos="1" side="sl" part="a_case"/>
            <lit-tag v="loc"/>
          </equal>
      </test>
       <let><clip pos="1" side="sl" part="a_case"/><lit-tag v="ins"/></let> 
    </when>

    
  </choose>
  <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="it"/>
        </let>
<let>
          <var n="mf"/>
          <lit-tag v="nt"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 
 <call-macro n="conv-to-subj">
          <with-param pos="1"/>
        </call-macro>


 
  <out>
   <chunk name="obj-pron-sim">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><var n="sntype"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

    </tags>
 <lu>

      <lit v="like"/> 
      <lit-tag v="pr"/> 
   
</lu>
<b/>
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="obj"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>


<rule comment="RULE: pers-pron + cop">
  <pattern>
    <pattern-item n="pers-pron"/>
    <pattern-item n="cop"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     <equal caseless="yes">
            <clip pos="1" side="sl" part="a_case"/>
            <lit-tag v="loc"/>
          </equal>
      </test>
       <let><clip pos="1" side="sl" part="a_case"/><lit-tag v="ins"/></let> 
    </when>

    
  </choose>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="He"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 
 <call-macro n="conv-to-subj">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
 
  <out>
   <chunk name="obj-pron-cop">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><var n="sntype"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

    </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="prn"/> 
      <lit-tag v="obj"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>


<rule comment="RULE: pers-pron">
  <pattern>
    <pattern-item n="pers-pron1"/>
<pattern-item n="mod_ass"/>
  </pattern>
  <action>
  <choose>
    <when>
      <test>
       <equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p2"/>
       </equal>
      </test>
       <let><var n="number"/><lit-tag v="sp"/></let> 
    </when>

       <otherwise>
         <let>
           <var n="number"/><clip pos="1" side="sl" part="a_nbr"/>
         </let>
       </otherwise>
  </choose>
  <choose>
    <when>
      <test>
     
<and>
<equal>
         <clip pos="1" side="sl" part="a_pers"/>
         <lit-tag v="p3"/>
</equal>
<equal>
<clip pos="1" side="sl" part="a_nbr"/>
         <lit-tag v="sg"/>
</equal>

<not><equal><clip pos="1" side="sl" part="a_mf"/><lit-tag v="f"/></equal></not>
</and>
      
      </test>
      <let>
          <clip pos="1" side="tl" part="lem"/>
          <lit v="He"/>
        </let>
<let>
          <clip pos="1" side="tl" part="a_nbr"/>
          <lit-tag v="p3"/>
        </let>
    </when>
       
  </choose> 
 <call-macro n="conv-to-subj">
          <with-param pos="1"/>
        </call-macro>
 <call-macro n="conv-mfpron">
          <with-param pos="1"/>
        </call-macro>

 
  <out>
   <chunk name="pron-mod_ass">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    <tag><var n="sntype"/></tag>
    <tag><clip pos="1" side="sl" part="a_pers"/></tag>
    <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>

    </tags>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>
    <lu>
<clip pos="1" side="tl" part="lem"/>

     <lit-tag v="2"/> 
      <lit-tag v="3"/> 
      <lit-tag v="4"/> 
      <lit-tag v="5"/> 
      <lit-tag v="6"/> 
 
    </lu>
  </chunk>
  </out>
<call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
 </action>
</rule>

<rule comment="RULE: Quest">
      <pattern>
        <pattern-item n="quest"/>
      </pattern>
      <action>
      
        <out>
          <chunk name="q-sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Q_mark"/></tag>
             
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RULE: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: V-future"> <!--future perfect I will have played-->
      <pattern>
        <pattern-item n="v-fut"/>
      </pattern>
      <action>
          <choose>
               <when>
                   <test>
                     <or>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3"/></equal>
                     </or> 
                   </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
                 <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>
           </choose>


        <out>
          <chunk name="verb-futperf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><lit-tag v="pp"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <lit v="will"/>
             <lit-tag v="vaux"/>
             <lit-tag v="inf"/>
 </lu>
  <b/>
<lu>
              <lit v="have"/>
              <lit-tag v="vbhaver"/>
              <lit-tag v="inf"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="2"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>









<rule comment="RULE: NOM post"><!-- 7 ozen arkyly-->
      <pattern>
<pattern-item n="num"/>
        <pattern-item n="nom"/>
        <pattern-item n="post"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-nom-pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PP"/></tag>
               <tag><var n="number"/></tag>
              <tag><lit-tag v="PD"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
             <lit-tag v="pr"/>

            </lu>
            <b pos="1"/>

 <lu>
              <clip pos="1" side="tl" part="whole"/>
             </lu>
<b/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <lit-tag v="2"/>

            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: Num Adj-Nom-NOM post"><!-- 7 ademi ozen arkyly-->
      <pattern>
<pattern-item n="num"/>
<pattern-item n="adj"/>
        <pattern-item n="nom"/>
        <pattern-item n="post"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
 <call-macro n="remove-poss">
          <with-param pos="2"/>
        </call-macro>
 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="sg"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </otherwise>
              </choose>
        <out>
          <chunk name="num-adj_nom-pron" case="caseFirstWord">
            <tags>

    <tag><lit-tag v="SN"/></tag>
    <tag><var n="sntype"/></tag>
              
             
                   </tags>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
             <lit-tag v="pr"/>

            </lu>
            <b pos="1"/>
 <lu>
              <clip pos="1" side="tl" part="whole"/>
             </lu>
<b/>
 <lu>
              <clip pos="2" side="tl" part="whole"/>
             </lu>
<b/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <var n="number"/>

            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="">
      <pattern>
        <pattern-item n="qst"/>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
          <chunk name="qst">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


 <!--<rule comment="RULE: must + infinitive"> I must to read Magan oky kerek
  <pattern>

    <pattern-item n="infinitive"/>
    <pattern-item n="kerek"/>  
  </pattern>
  <action>
    
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="remove-poss">
          <with-param pos="1"/>
        </call-macro>
 <choose>
               <when>
                   <test>
                   
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2"/></equal>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>

                </when>
<when>
                   <test>
                   <and>
                       <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1"/></equal>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                     </and>
                      </test>
                 <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
           <let><clip pos="1" side="tl" part="a_pers"/><lit v=""/></let>
                </when>

           </choose>
        <out>
          <chunk name="must-inff" case="caseFirstWord">
            <tags>
              <tag> <lit-tag v="SV-kerek"/></tag>


 <tag> <lit-tag v="PD"/></tag>
 <tag> <lit-tag v="ND"/></tag>



</tags>
<lu>
              <lit v="must"/>
              <lit-tag v="vblex"/> 
		<lit-tag v="pres"/>
              <lit-tag v="2"/>
              <lit-tag v="3"/>
<lit-tag v="4"/>
            
</lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>-->



 <rule comment="RULE: V-FIN">   <!-- present simple past simple-->
      <pattern>
        <pattern-item n="v-fin"/>
	<pattern-item n="ma"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="past_verb+qst" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
<lit v="do"/>
<lit-tag v="vbdo"/>
<lit-tag v="past"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="2"/>
             <lit-tag v="3"/>
             <lit-tag v="4"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>

          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>






<rule comment="RULE: NOM+post">
      <pattern>
        <pattern-item n="n-syz"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>


        <out>
          <chunk name="noun-without" case="caseFirstWord">
            <tags>
	<tag><lit-tag v="SN"/></tag>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>
<lu>
 <lit v="without"/>
 <lit-tag v="pr"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <lit-tag v="2"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>
 

<rule comment="RULE: loc-prep"><!-- for single артынан-->
      <pattern>
        <pattern-item n="loc-prep"/>
      </pattern>
<action>
        
        <out>
          <chunk name="loc-prep" case="caseFirstWord">
            <tags>
              <tag>                <lit-tag v="SN-ADVP"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

<lu>
	<clip pos="1" side="tl" part="lemh"/>
              
                <lit-tag v="pr"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: NOM+sim">
      <pattern>
        <pattern-item n="nom-sim"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="аст"/></equal>
                  </test>
                 <let><var n="number"/><lit v=""/></let>
                  <let><var n="postposition_lu"/><lit v=""/></let>
                </when>
               
              </choose>


        <out>
          <chunk name="noun-sim" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdvP"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
                <lit v="like"/>
                <lit-tag v="pr"/>
            
            </lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <lit-tag v="2"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: myNOM">
      <pattern>
 <pattern-item n="nom"/>
 <pattern-item n="nom1"/>
              </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="2"/>
        </call-macro>
<call-macro n="choose_case_and_postposition2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>

<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_pos"/>



<lit-tag v="px1sg"/></equal>
                  </test>
                  <let>

<var n="pos"/>
<lit v="my"/>

</let>
                </when>

	</choose>

	<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_pos"/>
<lit-tag v="px2sg.frm"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="your"/></let>
                </when>

</choose>

<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_pos"/>
<lit-tag v="px3sg"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="his"/></let>
                </when>

</choose>

<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_pos"/>
<lit-tag v="px1pl"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="our"/></let>
                </when>

</choose>
    
<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_pos"/>
<lit-tag v="px3sp"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="their"/></let>
                </when>

</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="2" side="sl" part="a_sim"/>
<lit-tag v="sim"/></equal>
                  </test>
                  <let>

<var n="number1"/><concat><lit v="like"/><lit-tag v="pr"/></concat></let>
                </when>
<otherwise>
<let>

<var n="number1"/><lit v=""/></let>
</otherwise>
</choose>
         <out>
          <chunk name="nommy" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>


            </tags>
<lu>
<var n="number1"/>
</lu>
<b pos="1"/>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>

<lu>
          <var n="pos"/>  
 	<lit-tag v="det"/>
	<lit-tag v="pos"/>
	<lit-tag v="sg"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
	<lit-tag v="sg"/>
            </lu>
<b/>

            <lu>
<clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
               <var n="number"/> 
              
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: myNOM">
      <pattern>
 <pattern-item n="nom1"/>
              </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>



<lit-tag v="px1sg"/></equal>
                  </test>
                  <let>

<var n="pos"/>
<lit v="my"/>

</let>
                </when>

	</choose>

	<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px2sg.frm"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="your"/></let>
                </when>

</choose>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px3sg"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="his"/></let>
                </when>

</choose>

<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px1pl"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="our"/></let>
                </when>

</choose>
    
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_pos"/>
<lit-tag v="px3sp"/></equal>
                  </test>
                  <let>

<var n="pos"/><lit v="their"/></let>
                </when>

</choose>
<choose>
                <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_sim"/>
<lit-tag v="sim"/></equal>
                  </test>
                  <let>

<var n="number1"/><concat><lit v="like"/><lit-tag v="pr"/></concat></let>
                </when>
<otherwise>
<let>

<var n="number1"/><lit v=""/></let>
</otherwise>
</choose>
         <out>
          <chunk name="nommy" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>


            </tags>
<lu>
<var n="number1"/>
</lu>
<b/>
 <lu>
<var n="postposition_lu"/>
</lu>
<b/>

<lu>
          <var n="pos"/>  
 	<lit-tag v="det"/>
	<lit-tag v="pos"/>
	<lit-tag v="sg"/>
</lu>
<b/>

            <lu>
<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
               <var n="number"/> 
              
             
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: NOM">
      <pattern>
        <pattern-item n="nom"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
 
                <otherwise>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="аст"/></equal>
                  </test>
                 <let><var n="number"/><lit v=""/></let>
                  <let><var n="postposition_lu"/><lit v=""/></let>
                </when>
               
              </choose>


        <out>
          <chunk name="noun-sg/pl1" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: NOM birge">
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="birge"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                </when>
                <otherwise>
                  <let><var n="number"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>


        <out>
          <chunk name="noun-sg/pl" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <lit-tag v="3"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


 <rule comment="RULE: V-FIN">   <!-- present simple past simple-->
      <pattern>
        <pattern-item n="v-fin"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="pres-verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="2"/>
             <lit-tag v="3"/>
             <lit-tag v="4"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>





<rule comment="RULE: de+present_verb">   <!-- деп күледі -->
      <pattern>
	<pattern-item n="degen"/>
        <pattern-item n="v-fin"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="2"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="2"/>
        </call-macro>


        <out>
          <chunk name="pres-verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="2" side="tl" part="a_tns"/></tag>
              <tag><clip pos="2" side="tl" part="a_pers"/></tag>
              <tag><clip pos="2" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
             <lit-tag v="2"/>
             <lit-tag v="3"/>
             <lit-tag v="4"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="2"/>
        </call-macro>
      </action>
    </rule>


 <rule comment="RULE: V-opt will invite">  
      <pattern>
        <pattern-item n="v-opt"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="v-opt" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
              <lit v="will"/>
              <lit-tag v="vaux"/>
	<lit-tag v="inf"/>
</lu>
<b/>

            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="inf"/>
            <!-- <lit-tag v="3"/>
             <lit-tag v="4"/>-->
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: V ">  <!--for ^шақыр<v><tv><prc_impf>$ ^-ақ<postadv>$^.<sent>$-->
      <pattern>
        <pattern-item n="v-impf"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="v-impf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>


            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="pres"/>
            
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



 <rule comment="RULE: R-KT">   <!--"барғандарым -->
      <pattern>
        <pattern-item n="R-KT"/>
      </pattern>
      <action>
        
<call-macro n="convert-poss-affix-to-poss-determiner">
 <with-param pos="1"/>
        </call-macro>

        <out>
          <chunk name="R-KT" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
              <var n="possessive"/>
             
            </lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="ger"/>
             
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>




<rule comment="RULE: be verb">   <!--"шақырарларымдікін-ақ -->
      <pattern>
        <pattern-item n="be-verb"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="be_verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
             <lit-tag v="vbser"/>
             <lit-tag v="pres"/>
             <lit-tag v="p3"/>
             <lit-tag v="sg"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



 <rule comment="RULE: subst verb">   <!--"шақырарларымдікін-ақ -->
      <pattern>
        <pattern-item n="verb-subst"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="unk-translation_of_verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="pres"/>
             
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: subst verb">   <!--"шақырарларымдікін-ақ -->
      <pattern>
        <pattern-item n="verb-subst-neg"/>
      </pattern>
      <action>
        <call-macro n="conv-temps1">
          <with-param pos="1"/>
        </call-macro>
  <call-macro n="conv-vpron">
          <with-param pos="1"/>
        </call-macro>


        <out>
          <chunk name="unk-neg_translation_of_verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_tns"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
<lu>
<lit v="not"/>
<lit-tag v="adv"/>
</lu>
<b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
             <lit-tag v="pres"/>
             
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: GenP">
      <pattern>
        <pattern-item n="gen"/>
        
      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>
<let>    
<clip pos="1" side="tl" part="a_pos"/><lit v=""/>   
</let> 
           <choose>
                 <when>
                   <test>
<and>
                     <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                      <lit-tag v="p3"/>
                     </equal>
                     <equal>
                    <clip pos="1" side="sl" part="a_nbr"/>
                    <lit-tag v="sg"/>
</equal>
</and>
                  </test>
                  <let><clip pos="1" side="tl" part="lem"/><lit v="his"/></let>
                </when>
               
              </choose> 
<out>
          <chunk name="genp" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><lit-tag v="det"/></tag>
              <tag><lit-tag v="pos"/></tag>
              <tag><lit-tag v="sg"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
<lit-tag v="2"/>
<lit-tag v="3"/>
<lit-tag v="4"/>
            </lu>
            <b pos="1"/>
            
          </chunk>
        </out>
        
      </action>
    </rule>






<!--automatically generated--><!--
<rule>
  <pattern>
    <pattern-item n="CAT__vaux_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
           
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="aor"/>
            </begins-with>

            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="ал"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Ал"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__vaux_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="can"/>
            <lit-tag v="vaux"/>
            <clip pos="1" side="sl" part="learned_negative"/>
            <lit-tag v="pres"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_mode"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>

</when>

      <otherwise>



<out>
	<chunk name="any1" case="caseFirstWord">
<tags>             
	<tag>
		<lit-tag v="LRN"/>
	</tag>       
</tags> 
	<lu>
		<clip pos="1" side="tl" part="whole"/>
	</lu>
	</chunk>
</out> 


</otherwise>




    </choose>

  </action>
</rule>-->


<rule>
  <pattern>
    <pattern-item n="CAT__v_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="vblex"/>
            </begins-with>
              
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtype"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtime"/>
                 <lit-tag v="aor"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_person"/>
                 <lit-tag v="p3"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit-tag v="sg"/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_verbtype" />
              <lit-tag v="tv"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="learned_issepverb" />
              <lit v=""/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="learned_derivation" />
              <lit-tag v="pass"/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__v_" case="caseFirstWord">       
	<tags>             
		<tag>
			<lit-tag v="LRN"/>
		</tag>       
	</tags>          
	<lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex"/>
            <clip pos="1" side="sl" part="learned_negative"/>
            <lit-tag v="pp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
	<out>
		<lu>
			<lit v="*executedtule2"/>
		</lu>
	</out>
	</when>
      <when>
	
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="vblex"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtime"/>
                 <lit-tag v="aor"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_person"/>
                 <lit-tag v="p3"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit-tag v="sg"/>
               </equal>
           </and>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="бол"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Бол"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__v_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="be"/>
            <lit-tag v="vbser"/>
            <lit-tag v="inf"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule3"/></lu></out></when>
      <when>
        <test>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="vblex"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtime"/>
                 <lit-tag v="aor"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_person"/>
                 <lit-tag v="p3"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit-tag v="sg"/>
               </equal>
           </and>
        </test>
       
<out>
       <chunk name="__v_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex"/>
            <clip pos="1" side="sl" part="learned_negative"/>
            <lit-tag v="pres"/>
            <clip pos="1" side="sl" part="learned_person"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule4"/></lu></out></when>
      <when>
        <test>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="vblex"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtime"/>
                 <lit-tag v="ger"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_person"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
        </test>
       <out>
       <chunk name="__v_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex"/>
            <clip pos="1" side="sl" part="learned_negative"/>
            <lit-tag v="inf"/>
            <clip pos="1" side="sl" part="learned_person"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule5"/></lu></out></when>
      <when>
        <test>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="vblex"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtime"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_person"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
        </test>
       <out>
       <chunk name="__v_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex"/>
            <clip pos="1" side="sl" part="learned_negative"/>
            <lit-tag v="past"/>
            <clip pos="1" side="sl" part="learned_person"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule6"/></lu></out></when>
      <when>
        <test>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="vblex"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_verbtime"/>
                 <lit-tag v="ifi"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_person"/>
                 <lit-tag v="p3"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit-tag v="sg"/>
               </equal>
           </and>
        </test>
       <out>
       <chunk name="__v_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vbser"/>
            <lit-tag v="past"/>
            <clip pos="1" side="sl" part="learned_person"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule7"/></lu></out></when>
      <otherwise>

<out><chunk name="any2" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword2"/></lu></out></otherwise>
    </choose>
  </action>
</rule>


<rule>
  <pattern>
    <pattern-item n="CAT__post_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="pr"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="арқылы"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Арқылы"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__post_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="through"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule8"/></lu></out></when>
      <otherwise>

<out><chunk name="any3" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword3"/></lu></out></otherwise>
    </choose>
  </action>
</rule>

<!--
<rule>
  <pattern>
    <pattern-item n="CAT__num_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="num"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numtype"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit-tag v="sp"/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_attruse"/>
                 <lit v=""/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_numtype" />
              <lit v=""/>
            </equal>
        </and>
        </test>
      <!- <out>
       <chunk name="__num_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <lit-tag v="sp"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_case"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b/>
          <lu>
            <lit v="year"/>
            <lit-tag v="n"/>
            <lit-tag v="pl"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_case"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>-->
<!--<out><lu><lit v="*executedtule9"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="num"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numtype"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_attruse"/>
                 <lit v=""/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_numtype" />
              <lit v=""/>
            </equal>
        </and>
        </test>
     <! <out>
       <chunk name="__num_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <lit-tag v="year"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_case"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>-->
<!--<out><lu><lit v="*executedtule10"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="num"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_attruse"/>
                 <lit-tag v="subst"/>
               </equal>
           </and>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="үш"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Үш"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__num_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="for"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule11"/></lu></out></when>
      <otherwise>

<out><chunk name="any" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword4"/></lu></out></otherwise>
    </choose>
  </action>
</rule>

<rule>
  <pattern>
    <pattern-item n="CAT__num_"/>
    <pattern-item n="CAT__n_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="num"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numtype"/>
                 <lit v=""/>
               </equal>
               <equal>
                 <clip pos="1" side="tl" part="learned_attruse"/>
                 <lit v=""/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_numtype" />
              <lit v=""/>
            </equal>
            <begins-with>
              <clip pos="2" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
            <or>            <equal>
              <clip pos="2" side="sl" part="lem" />
              <lit v="жыл"/>
            </equal>
            <equal>
              <clip pos="2" side="sl" part="lem" />
              <lit v="Жыл"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__num___n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="in"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
          <b pos="1"/>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <lit-tag v="year"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_case"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule12"/></lu></out></when>
      <otherwise>

<out><chunk name="any" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword5"/></lu></out></otherwise>
    </choose>
  </action>
</rule>


<rule>
  <pattern>
    <pattern-item n="CAT__n_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="сырт"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Сырт"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="out"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule13"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="жыл"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Жыл"/>
            </equal>
            </or>
            <equal>
              <clip pos="1" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="in"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule14"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="рет"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Рет"/>
            </equal>
            </or>
            <equal>
              <clip pos="1" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="as"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule15"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit-tag v="pl"/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n"/>
            <lit-tag v="sg"/>
            <clip pos="1" side="sl" part="learned_form"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>


<out><lu><lit v="*executedtule17"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="әңгіме"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Әңгіме"/>
            </equal>
            </or>
            <equal>
              <clip pos="1" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="'s"/>
            <lit-tag v="gen"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule18"/></lu></out></when>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n"/>
            <lit-tag v="sg"/>
            <clip pos="1" side="sl" part="learned_form"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule19"/></lu></out></when>
      <when>
        <test>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
        </test>
       <out>
       <chunk name="__n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n"/>
            <clip pos="1" side="sl" part="learned_numberat"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_form"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule20"/></lu></out></when>
      <otherwise>

<out><chunk name="any" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword6"/></lu></out></otherwise>
    </choose>
  </action>
</rule>

<rule>
  <pattern>
    <pattern-item n="nom"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
           <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="1" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
            <equal>
              <clip pos="1" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
           <and>
            <begins-with>
              <clip pos="2" side="tl" part="tags" />
              <lit-tag v="n"/>
            </begins-with>
               <equal>
                 <clip pos="2" side="tl" part="learned_numberat"/>
                 <lit v=""/>
               </equal>
           </and>
            <equal>
              <clip pos="2" side="sl" part="learned_numberat" />
              <lit v=""/>
            </equal>
        </and>
        </test>
       <out>
       <chunk name="__n___n_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n"/>
            <lit-tag v="sg"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="1" side="sl" part="learned_form"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b pos="1"/>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n"/>
            <lit-tag v="pl"/>
            <clip pos="1" side="sl" part="learned_possessive"/>
            <clip pos="2" side="sl" part="learned_form"/>
            <clip pos="2" side="sl" part="learned_attruse"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule21"/></lu></out></when>
      <otherwise>

<out><chunk name="any" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword7"/></lu></out></otherwise>
    </choose>
  </action>
</rule>

<rule>
  <pattern>
    <pattern-item n="CAT__adv_"/>
  </pattern>
  <action>
    <choose>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="adv"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="үстінде"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Үстінде"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__adv_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="on"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule22"/></lu></out></when>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="adv"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="өте"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Өте"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__adv_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="very"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule23"/></lu></out></when>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="adv"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="анда"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Анда"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__adv_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="there"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="sl" part="learned_advtype"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <lit v=""/>
          </lu>
          <b/>
          <lu>
            <lit v="be"/>
            <lit-tag v="vbser"/>
            <lit-tag v="pres"/>
            <lit-tag v="p3"/>
            <lit-tag v="sg"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule24"/></lu></out></when>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="adv"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="арқылы"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Арқылы"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__adv_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="by"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule25"/></lu></out></when>
      <when>
        <test>
        <and>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="preadv"/>
            </begins-with>
            <or>            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="көбірек"/>
            </equal>
            <equal>
              <clip pos="1" side="sl" part="lem" />
              <lit v="Көбірек"/>
            </equal>
            </or>
        </and>
        </test>
       <out>
       <chunk name="__adv_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <lit v="more"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule26"/></lu></out></when>
      <when>
        <test>
            <begins-with>
              <clip pos="1" side="tl" part="tags" />
              <lit-tag v="adv"/>
            </begins-with>
        </test>
       <out>
       <chunk name="__adv_" case="caseFirstWord">       <tags>             <tag><lit-tag v="LRN"/></tag>       </tags>          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="sl" part="learned_advtype"/>
            <clip pos="1" side="sl" part="learned_attruse"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
      </chunk>
      </out>
<out><lu><lit v="*executedtule27"/></lu></out></when>
      <otherwise>

<out><chunk name="any" case="caseFirstWord"><tags>             <tag><lit-tag v="LRN"/></tag>       </tags> <lu><clip pos="1" side="tl" part="whole"/></lu></chunk></out> <out><lu><lit v="*isolatedword"/></lu></out>
<out><lu><lit v="*wordforword8"/></lu></out></otherwise>
    </choose>
  </action>
</rule>

-->

<rule comment="RULE: bul"> <!-- -->
      <pattern>
        <pattern-item n="determ"/>

      </pattern>
      <action>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

  <call-macro n="convert-poss-to-pers">
          <with-param pos="1"/>
        </call-macro>

          
<out>
          <chunk name="determiner" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>

              <tag><clip pos="1" side="tl" part="a_prn"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
 <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
             <tag><var n="mf"/></tag> 
    <tag><var n="number"/></tag>


      

    </tags>
 
    


            <lu>
              <clip pos="1" side="tl" part="lem"/>
<clip pos="1" side="tl" part="a_prn"/>
<lit-tag v="det"/> 
      <lit-tag v="dem"/> 
<lit-tag v="2"/>
     <!--<lit-tag v="mf"/> 
      <lit-tag v="sp"/> 
     -->

            </lu>

          
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

<rule comment="RULE: NP-TOP with cop">
      <pattern>
        <pattern-item n="top"/>
<pattern-item n="cop"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
 
                <otherwise>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="аст"/></equal>
                  </test>
                 <let><var n="number"/><lit v=""/></let>
                  <let><var n="postposition_lu"/><lit v=""/></let>
                </when>
               
              </choose>


        <out>
          <chunk name="top-cop" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


<rule comment="RULE: NP-TOP">
      <pattern>
        <pattern-item n="top"/>
      </pattern>
<action>
        
      <call-macro n="choose_case_and_postposition1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-case1">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conv-number1">
          <with-param pos="1"/>
        </call-macro>

    
    

 <choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
                  </test>
                  <let><var n="number"/><lit-tag v="pl"/></let>
                  <let><var n="case"/><lit-tag v="nom"/></let>
                </when>
 
                <otherwise>
                  <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
                </otherwise>
              </choose>
<choose>
                 <when>
                   <test>
                       <equal><clip pos="1" side="sl" part="lem"/><lit v="аст"/></equal>
                  </test>
                 <let><var n="number"/><lit v=""/></let>
                  <let><var n="postposition_lu"/><lit v=""/></let>
                </when>
               
              </choose>


        <out>
          <chunk name="top" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag>  <var n="number"/></tag>
            </tags>

            <lu>
<var n="postposition_lu"/>
</lu>
<b/>
<lu>
	<clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
            
              <clip pos="1" side="tl" part="lemq"/>
                <var n="number"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="reset-vars1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


 </section-rules>
</transfer>
