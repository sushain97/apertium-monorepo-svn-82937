# Tests for BelarusianTagsAnalyzer
from BelarusianTagsAnalyzer import Analyzer

def test(label, cases):
    analyzer = Analyzer()
    for test_case in cases:
        assert analyzer.describe(test_case[0]) == test_case[1]
    print("Passed {} tests ({}).".format(len(cases), label))

def test_nouns():
    test('nouns', [
            ( 'NCAXNFX', ['Назоўнік', 'агульны', 'адушаўлёны', '???????', 'нескарот', 'жаночы', '???????']),
            ( 'NCAINS5', ['Назоўнік', 'агульны', 'адушаўлёны', 'неасабовы', 'нескарот', 'субстантываваны', 'ад’ектыўнае']),
            ( 'NCXXNF0', ['Назоўнік', 'агульны', '???????', '???????', 'нескарот', 'жаночы', 'нескланяльны']),
            ( 'NCAINF2', ['Назоўнік', 'агульны', 'адушаўлёны', 'неасабовы', 'нескарот', 'жаночы', '2 скланенне']),
            ( 'NCIINP0', ['Назоўнік', 'агульны', 'неадушаўлёны', 'неасабовы', 'нескарот', 'множны лік', 'нескланяльныя']),
            ( 'NCIPNM1', ['Назоўнік', 'агульны', 'неадушаўлёны', 'асабовы', 'нескарот', 'мужчынскі', '1 скланенне']),
            ( 'NCIXNFX', ['Назоўнік', 'агульны', 'неадушаўлёны', '???????', 'нескарот', 'жаночы', '???????']),
            ( 'NCXXNF2', ['Назоўнік', 'агульны', '???????', '???????', 'нескарот', 'жаночы', '2 скланенне']),
            ( 'NCAXNNX', ['Назоўнік', 'агульны', 'адушаўлёны', '???????', 'нескарот', 'ніякі', '???????']),
            ( 'NCAINM1', ['Назоўнік', 'агульны', 'адушаўлёны', 'неасабовы', 'нескарот', 'мужчынскі', '1 скланенне']),
            ( 'NCIXNN1LS', ['Назоўнік', 'агульны', 'неадушаўлёны', '???????', 'нескарот', 'ніякі', '1 скланенне', 'месны', 'адзіночны']),
            ( 'NCIXNN1DP', ['Назоўнік', 'агульны', 'неадушаўлёны', '???????', 'нескарот', 'ніякі', '1 скланенне', 'давальны', 'множны'])
            ])

def test_adjectives():
    test('adjectives', [
            ( 'AXP', ['Прыметнік', '???????', 'станоўчая']),
            ( 'AXPPGP', ['Прыметнік', '???????', 'станоўчая', 'множны лік', 'родны', 'множны']),
            ( 'AXPFAS', ['Прыметнік', '???????', 'станоўчая', 'жаночы', 'вінавальны', 'адзіночны']),
            ( 'AXPMNS', ['Прыметнік', '???????', 'станоўчая', 'мужчынскі', 'назоўны', 'адзіночны']),
            ( 'AXPMIS', ['Прыметнік', '???????', 'станоўчая', 'мужчынскі', 'творны', 'адзіночны']),
            ( 'AXPNGS', ['Прыметнік', '???????', 'станоўчая', 'ніякі', 'родны', 'адзіночны'])
            ])

def test_numerals():
    test('numerals', [
            ( 'MNKS', ['Лічэбнік', 'як у назоўніка', 'зборны', 'просты']),
            ( 'MAOC', ['Лічэбнік', 'як у прыметніка', 'парадкавы', 'складаны']),
            ( 'MAOCMGS', ['Лічэбнік', 'як у прыметніка', 'парадкавы', 'складаны', 'мужчынскі', 'родны', 'адзіночны']),
            ( 'MNCCXDX', ['Лічэбнік', 'як у назоўніка', 'колькасны', 'складаны', '???????', 'давальны', '???????']),
            ( 'MNCCXLX', ['Лічэбнік', 'як у назоўніка', 'колькасны', 'складаны', '???????', 'месны', '???????']),
            ( 'MAOSNIS', ['Лічэбнік', 'як у прыметніка', 'парадкавы', 'просты', 'ніякі', 'творны', 'адзіночны'])
            ])

def test_pronouns():
    test('pronouns', [
            ( 'SADX', ['Займеннік', 'як у прыметніка', 'указальны', '???????']),
            ( 'SAFX', ['Займеннік', 'як у прыметніка', 'няпэўны', '???????']),
            ( 'SNP3NGS', ['Займеннік', 'як у назоўніка', 'асабовы', 'трэцяя', 'ніякі', 'родны', 'адзіночны']),
            ( 'SAEXXAP', ['Займеннік', 'як у прыметніка', 'азначальны', '???????', '???????', 'вінавальны', 'множны']),
            ( 'SASXFGS', ['Займеннік', 'як у прыметніка', 'прыналежны', '???????', 'жаночы', 'родны', 'адзіночны']),
            ( 'SAEXMAS', ['Займеннік', 'як у прыметніка', 'азначальны', '???????', 'мужчынскі', 'вінавальны', 'адзіночны']),
            ( 'SAFXNNS', ['Займеннік', 'як у прыметніка', 'няпэўны', '???????', 'ніякі', 'назоўны', 'адзіночны'])
            ])

def test_participles():
    test('participles', [
            ( 'PPPM', ['Дзеепрыметнік', 'залежны', 'мінулы', 'незакончанае']),
            ( 'PPPP', ['Дзеепрыметнік', 'залежны', 'мінулы', 'закончанае']),
            ( 'PPPMFIX', ['Дзеепрыметнік', 'залежны', 'мінулы', 'незакончанае', 'жаночы', 'творны', '???????']),
            ( 'PPPMFAS', ['Дзеепрыметнік', 'залежны', 'мінулы', 'незакончанае', 'жаночы', 'вінавальны', 'адзіночны']),
            ( 'PPPPNNS', ['Дзеепрыметнік', 'залежны', 'мінулы', 'закончанае', 'ніякі', 'назоўны', 'адзіночны']),
            ( 'PPPPMIS', ['Дзеепрыметнік', 'залежны', 'мінулы', 'закончанае', 'мужчынскі', 'творны', 'адзіночны'])
            ])

def test_adverbs():
    test('adverbs', [
            ( 'RX', ['Прыслоўе', '???????']),
            ( 'RA', ['Прыслоўе', 'прыметнікаў']),
            ( 'RXP', ['Прыслоўе', '???????', 'станоўчая']),
            ( 'RAC', ['Прыслоўе', 'прыметнікаў', 'вышэйшая'])
            ])

def test_verbs():
    test('verbs', [
            ( 'VIPR1', ['Дзеяслоў', 'непераходны', 'закончанае', 'зваротны', 'першае']),
            ( 'VTMN1', ['Дзеяслоў', 'пераходны', 'незакончанае', 'незваротны', 'першае']),
            ( 'VIPR2', ['Дзеяслоў', 'непераходны', 'закончанае', 'зваротны', 'другое']),
            ( 'VIPR20', ['Дзеяслоў', 'непераходны', 'закончанае', 'зваротны', 'другое', 'Інфінітыў']),
            ( 'VXPN1PXSM', ['Дзеяслоў', '???????', 'закончанае', 'незваротны', 'першае', 'мінулы', '???????', 'адзіночны', 'мужчынскі']),
            ( 'VIMN1RG', ['Дзеяслоў', 'непераходны', 'незакончанае', 'незваротны', 'першае', 'цяперашні', 'дзеепрыслоўе']),
            ( 'VXPN1F3S', ['Дзеяслоў', '???????', 'закончанае', 'незваротны', 'першае', 'будучы', 'трэцяя', 'адзіночны']),
            ( 'VIPR1I2S', ['Дзеяслоў', 'непераходны', 'закончанае', 'зваротны', 'першае', 'загадны лад', 'другая', 'адзіночны']),
            ( 'VXMN1R2P', ['Дзеяслоў', '???????', 'незакончанае', 'незваротны', 'першае', 'цяперашні', 'другая', 'множны']),
            ( 'VIPR2PXPX', ['Дзеяслоў', 'непераходны', 'закончанае', 'зваротны', 'другое', 'мінулы', '???????', 'множны', '???????']),
            ( 'VXPN2PXSF', ['Дзеяслоў', '???????', 'закончанае', 'незваротны', 'другое', 'мінулы', '???????', 'адзіночны', 'жаночы'])
            ])

test_nouns()
test_adjectives()
test_numerals()
test_pronouns()
test_participles()
test_adverbs()
test_verbs()
