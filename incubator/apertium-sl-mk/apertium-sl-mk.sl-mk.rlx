# Beginnings of a Constraint Grammar for Slovenian

SOFT-DELIMITERS = "<,>" ;
DELIMITERS = "<.>"ri "<:>"ri "<!>"ri "<?>"ri ;

LIST BOS = (>>>) (<s>) (sent) ; 
LIST EOS = (<<<) (</s>) (sent) ; 

LIST N = n;
LIST V = vblex vbser;
LIST Vbser = vbser;
LIST A = adj;
LIST Pr = pr;
LIST Pron = prn;
LIST Poss = pos;
LIST Det = det;
LIST Dem = dem;
LIST Adv = adv;
LIST CC = cnjcoo;
LIST CS = cnjsub;
LIST Interj = ij;
LIST Num = num;

LIST Subj = subj;
LIST Obj = obj;

LIST P1 = p1;
LIST P2 = p2;
LIST P3 = p3;

LIST Fem = (f);
LIST Msc = (m);
LIST Neu = (nt);

LIST Nom = (nom);
LIST Gen = (gen);
LIST Acc = (acc);
LIST Dat = (dat);
LIST Loc = (loc);
LIST Ins = (ins);

LIST L-part = (vblex past);

LIST NAGDLI = nom acc gen dat loc ins;
LIST OBLIQUE = acc gen dat loc ins;
LIST GENDER = m f nt;
LIST NUMBER = sg du pl;

#LIST GenPrep = ;
#LIST AccPrep = ;
#LIST DatPrep = ;
#LIST InsPrep = ;
#LIST LocPrep = ;

SET NounMscFem = (n m) OR (n f) ;
SET NounMscNeu = (n m) OR (n nt) ;
SET NounFemNeu = (n f) OR (n nt) ;

SET PRE-N =  A | Det | (n gen) | Num | (prn gen) | CC ; # Det???

LIST COMMA = (",") ;

SET WORD = N | V | A | Pr | Pron | Det | Adv | CC | CS | Interj | Num | ("\?") ;
SET MARK =  COMMA | ("\") | ("\;") ; #"
SET WORDMARK = WORD | MARK ;

SET NPNHA = WORDMARK - PRE-N - Adv ;

SECTION

# Remove adjective genders if a noun cannot be found in the appropriate gender
REMOVE:r1 A + Fem IF (0  $$NAGDLI) (*1 NounMscNeu + $$NAGDLI BARRIER NPNHA LINK NOT 0 Fem);
REMOVE:r2 A + Msc IF (0  $$NAGDLI) (*1 NounFemNeu + $$NAGDLI BARRIER NPNHA LINK NOT 0 Msc);
REMOVE:r3 A + Neu IF (0  $$NAGDLI) (*1 NounMscFem + $$NAGDLI BARRIER NPNHA LINK NOT 0 Neu);

# Remove possessive genders if a noun cannot be found in the appropriate gender
REMOVE:r4 Poss + Fem IF (0  $$NAGDLI) (*1 NounMscNeu + $$NAGDLI BARRIER NPNHA LINK NOT 0 Fem);
REMOVE:r5 Poss + Msc IF (0  $$NAGDLI) (*1 NounFemNeu + $$NAGDLI BARRIER NPNHA LINK NOT 0 Msc);
REMOVE:r6 Poss + Neu IF (0  $$NAGDLI) (*1 NounMscFem + $$NAGDLI BARRIER NPNHA LINK NOT 0 Neu);

# ti si 
REMOVE:r4 Dem + Nom IF (NOT 1 V + P3);

REMOVE:r5 Dem + Acc IF (1 V + P2) (NOT 2 L-part);

SELECT:r6 V + P2 IF (-1C P2);

# si dal
SELECT:r7 Vbser IF (1C L-part);

#  On je bil kupil
REMOVE:r8 Pron + Subj IF (-1C Pron + Subj);

# Adv or Pr
REMOVE:r9 Adv IF (NOT -1 V)(0 Pr)(1 OBLIQUE) ;
# comment: not -1 v is just to be careful
# comment: better would be to list the prepositions according to case subcat

