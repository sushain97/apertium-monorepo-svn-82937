<?xml version="1.0" encoding="UTF-8"?>

<transfer default="chunk">

  <section-def-cats>

    <def-cat n="nomall">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
      <cat-item tags="n.acr.*"/>
    </def-cat>

    <def-cat n="nom">
      <cat-item tags="n.*"/>
    </def-cat>

   <def-cat n="num">
      <cat-item tags="num.*"/>
    </def-cat>

    <def-cat n="np">
      <cat-item tags="np.*"/>
    </def-cat>

    <def-cat n="adj">
   	<cat-item tags="adj.*"/>
    </def-cat>

    <def-cat n="nom_gen">
      <cat-item tags="n.*.*.gen"/>
    </def-cat>

    <def-cat n="adj_gen">
      <cat-item tags="adj.*.*.*.gen"/>
    </def-cat>

    <def-cat n="adj_pos">
      <cat-item lemma="pos" tags="adj.*"/>
    </def-cat>

    <def-cat n="prn">
      <cat-item tags="prn"/>
      <cat-item tags="prn.*"/>
    </def-cat>

    <def-cat n="verb">
      <cat-item tags="vbser.*"/>
      <cat-item tags="vblex.*"/>
      <cat-item tags="vbhaver.*"/>
      <cat-item tags="vbdo.*"/>
      <cat-item tags="vbmod.*"/>
      <cat-item tags="vaux.*"/>
    </def-cat>

  <def-cat n="det">
      <cat-item tags="det.*"/>
      <cat-item tags="det.def.*"/>
      <cat-item tags="det.ind.*"/>
      <cat-item tags="det.dem.*"/>
      <cat-item tags="det.pos.*"/>
    </def-cat>

    <def-cat n="vbinf">
      <cat-item tags="vbser.perf.tv.inf.*"/>
      <cat-item tags="vbser.perf.iv.inf.*"/>
    </def-cat>


    <def-cat n="adv">
   	<cat-item tags="adv.*"/>
    </def-cat>


     <def-cat n="pr">
   	<cat-item tags="pr.*"/>
     </def-cat>


     <def-cat n="part">
       <cat-item tags="part"/>
     </def-cat>


     <def-cat n="conj">
   		<cat-item tags="cnjcoo"/>
   		<cat-item tags="cnjsub"/>
   		<cat-item tags="cnjadv"/>
     </def-cat>


	<def-cat n="prpers">
   		<cat-item lemma="prpers" tags="prn.*"/>
	</def-cat>

     <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>


</section-def-cats>


<section-def-attrs>

    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="n.acr"/>
      <attr-item tags="np"/>
      <attr-item tags="np.top"/>
    </def-attr>

    <def-attr n="a_np">
      <attr-item tags="np"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.al"/>
      <attr-item tags="np.org"/>
    </def-attr>

    <def-attr n="a_nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
    </def-attr>

    <def-attr n="prsnbr">
      <attr-item tags="p3.sg"/>
    </def-attr>

    <def-attr n="cnt">
      <attr-item tags="unc"/>
    </def-attr>

    <def-attr n="a_gender">
      <attr-item tags="mf"/>
      <attr-item tags="f"/>
      <attr-item tags="m"/>
      <attr-item tags="nt"/>
    </def-attr>

    <def-attr n="a_case">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="gen"/>
      <attr-item tags="loc"/>
      <attr-item tags="ins"/>
      <attr-item tags="voc"/>
    </def-attr>

    <def-attr n="a_num">
      <attr-item tags="num"/>
      <attr-item tags="num.ord"/>
      <attr-item tags="num.coll"/>
    </def-attr>

    <def-attr n="a_pr">
      <attr-item tags="pr"/>
      <attr-item tags="pr.*"/>
    </def-attr>

    <def-attr n="a_abbr">
      <attr-item tags="abbr"/>
    </def-attr>

    <def-attr n="a_prn">
      <attr-item tags="prn"/>
      <attr-item tags="prn.neg"/>
      <attr-item tags="prn.emph"/>
      <attr-item tags="prn.pos"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.ind.neg"/>
      <attr-item tags="prn.itg"/>
      <attr-item tags="prn.dem"/>
      <attr-item tags="prn.pers"/>
      <attr-item tags="prn.pers.clt"/>
      <attr-item tags="prn.tot"/>
      <attr-item tags="prn.qnt"/>
      <attr-item tags="prn.ref"/>
      <attr-item tags="prn.ref.pers"/>
      <attr-item tags="prn.ref.pos"/>
      <attr-item tags="prn.rel"/>
      <attr-item tags="prn.rel.an"/>
      <attr-item tags="prn.subj"/>
      <attr-item tags="prn.obj"/>
    </def-attr>

    <def-attr n="a_det">
      <attr-item tags="det"/>
      <attr-item tags="det.pos"/>
      <attr-item tags="det.ind"/>
      <attr-item tags="det.def"/>
      <attr-item tags="det.qnt"/>
    </def-attr>

    <def-attr n="a_vb">
      <attr-item tags="vblex"/>
      <attr-item tags="vblex.sep"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbhaver.neg"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="vaux"/>
    </def-attr>

    <def-attr n="a_inf">
      <attr-item tags="inf"/>
    </def-attr>

    <def-attr n="a_clt">
      <attr-item tags="clt"/>
    </def-attr>

    <def-attr n="a_part">
      <attr-item tags="part"/>
      <attr-item tags="part.neg"/>
    </def-attr>

    <def-attr n="a_ij">
      <attr-item tags="ij"/>
    </def-attr>

    <def-attr n="a_cnj">
      <attr-item tags="cnj"/>
      <attr-item tags="cnjcoo"/>
      <attr-item tags="cnjsub"/>
    </def-attr>

    <def-attr n="a_typ">
      <attr-item tags="pos"/>
    </def-attr>

    <def-attr n="a_tense">
      <attr-item tags="inf"/>
      <attr-item tags="pres"/>
      <attr-item tags="past"/>
      <attr-item tags="perf"/>
      <attr-item tags="imp"/>
      <attr-item tags="pii"/>
      <attr-item tags="pri"/>
      <attr-item tags="aor"/>
      <attr-item tags="futI"/>
      <attr-item tags="futII"/>
      <attr-item tags="lp"/>
      <attr-item tags="pp"/>
      <attr-item tags="ger"/>
      <attr-item tags="pprs"/>
      <attr-item tags="subs"/>
    </def-attr>
    
    <def-attr n="trns">
      <attr-item tags="tv"/>
      <attr-item tags="iv"/>
    </def-attr>

    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.ord"/>
      <attr-item tags="adj.sint"/>
    </def-attr>

    <def-attr n="a_adv">
      <attr-item tags="adv"/>
      <attr-item tags="adv.itg"/>
      <attr-item tags="preadv"/>
      <attr-item tags="cnjadv"/>
    </def-attr>

    <def-attr n="a_deg">
      <attr-item tags="pst"/>
      <attr-item tags="comp"/>
      <attr-item tags="sup"/>
      <attr-item tags="ssup"/>
    </def-attr>

    <def-attr n="a_pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>

    <def-attr n="def">
      <attr-item tags="def"/>
      <attr-item tags="ind"/>
    </def-attr>

  </section-def-attrs>


<section-def-vars>
	<def-var n="number"/>
	<def-var n="EOS"/>
	<def-var n="caseFirstWord"/>
	<def-var n="temps_chunk"/>
        <def-var n="lema_SV"/>
        <def-var n="verbfinal"/>

</section-def-vars>


<section-def-lists>

 <def-list n="capital_letter">
      <list-item v="Monday"/>
      <list-item v="Tuesday"/> 
      <list-item v="Wednesday"/>
      <list-item v="Thursday"/>
      <list-item v="Friday"/>
      <list-item v="Saturday"/>
      <list-item v="Sunday"/>
 </def-list>


 <def-list n="weekdays">
      <list-item v="Monday"/>
      <list-item v="Tuesday"/> 
      <list-item v="Wednesday"/>
      <list-item v="Thursday"/>
      <list-item v="Friday"/>
      <list-item v="Saturday"/>
      <list-item v="Sunday"/>
 </def-list>



</section-def-lists>

<section-def-macros>


  <def-macro n="f_bcond" npar="2"><!--Per mirar si el blanc conté o no format. Cal posar aquesta funció en les regles en què desaparegui alguna paraula-->
      <choose>
        <when>
          <test>
            <not>
              <equal>
                <b pos="1"/>
                <lit v=" "/>
              </equal>
            </not>
          </test>
          <out>
            <b pos="1"/>
          </out>
        </when>             
      </choose>
    </def-macro>

<def-macro n="firstWord" npar="1">
      
          <choose>
            <when>
              <test>
                <equal>
                  <var n="EOS"/>
                  <lit v="true"/>
                </equal> 
              </test>    
              <choose>   
                <when>   
                  <test> 
                    <and>
                       <equal>
                        <clip pos="1" side="sl" part="a_np_acr"/>
                        <lit v=""/>
                      </equal>
                      <not>   
                        <in>  
                          <clip pos="1" side="tl" part="lem"/>
                          <list n="capital_letter"/>
                        </in>
                      </not> 
                    </and>   
                  </test>    
                  <modify-case>
                    <clip pos="1" side="tl" part="lem"/>
                    <lit v="aa"/>
                  </modify-case> 
                </when>
              </choose>
              <let>
                <var n="caseFirstWord"/>
                <lit v="Aa"/>
              </let>
            </when> 
            <otherwise>
              <let>
                <var n="caseFirstWord"/>
                <lit v="aa"/>
              </let>
            </otherwise>
         </choose>
<!--    </when>
        <otherwise>
          <let>
            <var n="caseFirstWord"/>
            <lit v="aa"/>
          </let>
        </otherwise>
      </choose>-->  
      <let>
        <var n="EOS"/>
        <lit v="false"/>
      </let>
    </def-macro>
 
  <!-- Adapter for nouns, strips the noun of gender and case -->
    <def-macro n="nom_adapter" npar="1">
      <choose>
        <when> <!-- plural to uncountable -->
          <test>
            <equal><clip pos="1" side="tl" part="cnt"/><lit-tag v="unc"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <when> <!-- singular to plural -->
          <test>
            <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="pl"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="pl"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </otherwise>
      </choose>
    </def-macro>

    <!-- Adapter for np's -->
    <def-macro n="np_adapter" npar="1">
      <choose>
        <when> <!-- ant with gndr and nbr -->
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_np"/><lit-tag v="np.ant"/></equal> 
               <equal><clip pos="1" side="sl" part="a_gender"/><lit-tag v="m"/></equal>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_gender"/><lit-tag v="m"/></let>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
              <clip pos="1" side="tl" part="a_gender"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <when> <!-- top pl into top sg -->
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_np"/><lit-tag v="np.top"/></equal>
              <equal><clip pos="1" side="sl" part="a_nbr"/><lit-tag v="pl"/></equal>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <when> <!-- top sg into top sg -->
          <test>
            <and>
              <equal><clip pos="1" side="tl" part="a_np"/><lit-tag v="np.top"/></equal>
              <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_np"/><lit-tag v="np.top"/></let>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_np"/><lit-tag v="np.ant"/></equal>
              <equal><clip pos="1" side="sl" part="a_gender"/><lit-tag v="f"/></equal>
            </and>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
              <clip pos="1" side="tl" part="a_gender"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_np"/><lit-tag v="np.al"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_np"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </otherwise>
      </choose>
    </def-macro>



 <def-macro n="conj_verb1" npar="1"><!--verb inflection-->

        <choose>
          <when>
            <test>
              <and>
                <equal caseless="yes">
                  <clip pos="1" side="tl" part="lemh"/>
                  <lit v="be"/>
                </equal>
                <or>
                  <equal>
                    <clip pos="1" side="sl" part="a_tense"/>
                    <lit-tag v="aor"/>
                  </equal>
                  <equal> 
                    <clip pos="1" side="sl" part="a_tense"/>
                    <lit-tag v="pii"/>
                  </equal>
                </or>
                <or> 
                  <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                    <lit-tag v="p1"/>
                  </equal>
                  <equal> 
                    <clip pos="1" side="sl" part="a_pers"/>
                    <lit-tag v="p3"/>
                  </equal>
                </or>
                <equal>
                  <clip pos="1" side="sl" part="a_nbr"/>
                  <lit-tag v="sg"/>
                </equal>
              </and>
            </test> 
            <let>   
              <clip pos="1" side="tl" part="a_tense"/>
              <lit-tag v="past"/>
            </let>
            <let> 
              <var n="temps_chunk"/>
              <lit-tag v="past"/>   
            </let>
            <let> 
              <var n="lema_SV"/>
              <lit v="verbcj"/> 
            </let>
            <let> 
              <var n="verbfinal"/>
              <concat>
                <clip pos="1" side="tl" part="lemh"/>
                <clip pos="1" side="tl" part="a_vb"/>
                <clip pos="1" side="tl" part="a_tense"/> 
                <clip pos="1" side="tl" part="a_pers"/>  
                <clip pos="1" side="tl" part="a_nbr"/>   
              </concat>
            </let>
          </when> 
          <when>  
            <test>
              <and>
                <equal caseless="yes">
                  <clip pos="1" side="tl" part="lemh"/>
                  <lit v="be"/>
                </equal>
                <equal> 
                  <clip pos="1" side="sl" part="a_tense"/>
                  <lit-tag v="pri"/>
                </equal>
                <or>
                  <equal>
                    <clip pos="1" side="sl" part="a_pers"/>
                    <lit-tag v="p1"/>
                  </equal>
                  <equal> 
                    <clip pos="1" side="sl" part="a_pers"/>
                    <lit-tag v="p3"/>
                  </equal>
                </or>
                <equal>
                  <clip pos="1" side="sl" part="a_nbr"/>
                  <lit-tag v="sg"/>
                </equal>
              </and>
            </test> 
            <let>   
              <clip pos="1" side="tl" part="a_tense"/>
              <lit-tag v="pres"/>
            </let>
            <let>   
              <var n="temps_chunk"/>
              <clip pos="1" side="tl" part="a_tense"/>
            </let>
            <let> 
              <var n="lema_SV"/>
              <lit v="verbcj"/> 
            </let>
            <let> 
              <var n="verbfinal"/>
              <concat>
                <clip pos="1" side="tl" part="lemh"/>
                <clip pos="1" side="tl" part="a_vb"/>
                <clip pos="1" side="tl" part="a_tense"/> 
                <clip pos="1" side="tl" part="a_pers"/>  
                <clip pos="1" side="tl" part="a_nbr"/>   
              </concat>
            </let>
          </when> 


          <when>
            <test><!--La resta de verbs tenen també prs i nbr per a p3 sg, excepte auxiliars (can). -->
              <and>
                <equal>
                  <clip pos="1" side="sl" part="a_tense"/>
                  <lit-tag v="pri"/>
                </equal>
                <equal> 
                <clip pos="1" side="sl" part="a_pers"/>
                  <lit-tag v="p3"/>
                </equal>
                <equal> 
                  <clip pos="1" side="sl" part="a_nbr"/>
                  <lit-tag v="sg"/>
                </equal>
                <not>   
                  <equal caseless="yes">
                    <clip pos="1" side="tl" part="lem"/>
                    <lit v="can"/>
                  </equal>
                </not>
              </and>  
            </test>   
            <let>   
              <clip pos="1" side="tl" part="a_tense"/>
              <lit-tag v="pres"/>
            </let>
            <let>
              <var n="lema_SV"/>
              <lit v="verbcj"/> 
            </let>
            <let> 
              <var n="temps_chunk"/>
              <clip pos="1" side="tl" part="a_tense"/>
            </let>
            <let> 
              <var n="verbfinal"/>
              <concat>
                <clip pos="1" side="tl" part="lemh"/>
                <clip pos="1" side="tl" part="a_vb"/>
                <clip pos="1" side="tl" part="a_tense"/> 
                <clip pos="1" side="tl" part="a_pers"/>  
                <clip pos="1" side="tl" part="a_nbr"/>   
              </concat>
            </let>

          </when>
          <otherwise><!--la resta de formes verbals no tenen pers i nbr en anglès -->
            <choose>
              <when>
                <test>
                  <or>
                    <equal>
                      <clip pos="1" side="sl" part="a_tense"/>
                      <lit-tag v="pri"/>
                    </equal>
                    <equal> 
                      <clip pos="1" side="sl" part="a_tense"/>
                      <lit-tag v="prs"/>
                    </equal>
                    <equal> 
                      <clip pos="1" side="sl" part="a_tense"/>
                      <lit-tag v="imp"/>
                    </equal>
                  </or>
                </test>
                <let>  
                  <clip pos="1" side="tl" part="a_tense"/>
                  <lit-tag v="pres"/>
                </let>

                <let>
                  <var n="temps_chunk"/>
                  <clip pos="1" side="sl" part="a_tense"/>
                </let>
                <let> 
                  <var n="lema_SV"/>
                  <lit v="verbcj"/> 
                </let>

                <let>
                  <var n="verbfinal"/>
                  <concat>
                    <clip pos="1" side="tl" part="lemh"/>
                    <clip pos="1" side="tl" part="a_vb"/>
                    <clip pos="1" side="tl" part="a_tense"/> 
                  </concat>
                </let>
              </when> 
              <when>  
                <test>
                  <or>
                    <equal>
                      <clip pos="1" side="sl" part="a_tense"/>
                      <lit-tag v="ifi"/>
                    </equal>
                    <equal> 
                      <clip pos="1" side="sl" part="a_tense"/>
                      <lit-tag v="pii"/>
                    </equal>
                    <equal> 
                      <clip pos="1" side="sl" part="a_tense"/>
                      <lit-tag v="aor"/>
                    </equal>
                  </or>
                </test>
                <let>  
                  <clip pos="1" side="tl" part="a_tense"/>
                  <lit-tag v="past"/>
                </let>
                <let> 
                  <var n="temps_chunk"/>
                  <clip pos="1" side="sl" part="a_tense"/>
                </let>
                <let> 
                  <var n="lema_SV"/>
                  <lit v="verbcj"/> 
                </let>
                <let> 
                  <var n="verbfinal"/>
                  <concat>
                    <clip pos="1" side="tl" part="lemh"/>
                    <clip pos="1" side="tl" part="a_vb"/>
                    <clip pos="1" side="tl" part="a_tense"/> 
                  </concat>
                </let>
              </when> 
               <otherwise>
                <let>
                  <var n="temps_chunk"/>
                  <clip pos="1" side="sl" part="a_tense"/>
                </let>
                <let> 
                  <var n="verbfinal"/>
                  <concat>
                    <clip pos="1" side="tl" part="lemh"/>
                    <clip pos="1" side="tl" part="a_vb"/>
                    <clip pos="1" side="tl" part="a_tense"/> 
                  </concat>
                </let>
              </otherwise>
            </choose>
          </otherwise>
        </choose>
</def-macro>



    <!-- Adapter for adjectives -->
    <def-macro n="adj_adapter" npar="1">
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
    </def-macro>

      <!-- Adapter for determiners -->
    <def-macro n="det_adapter" npar="1">
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_det"/>
              <clip pos="1" side="tl" part="a_nbr"/>
            </concat>
          </let>
    </def-macro>


    <!-- Adapter for numbers -->
    <def-macro n="num_adapter" npar="1">
      <choose>
        <when> <!-- roman numerals -->
          <test>
            <or>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="I"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="II"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="III"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="IV"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="V"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="VI"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="VII"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="VIII"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="IX"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
              <and>
                <equal><clip pos="1" side="sl" part="lem"/><lit v="X"/></equal>
                <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num"/></equal>
              </and>
            </or>
          </test>
          <let><clip pos="1" side="tl" part="a_num"/><lit-tag v="num"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_num"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
        <when>
          <test>
            <and>
	      <equal><clip pos="1" side="tl" part="a_num"/><lit-tag v="num"/></equal>
	      <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
            </and>
	  </test>
	  <let><clip pos="1" side="tl" part="a_num"/><lit-tag v="num"/></let>
	  <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></let>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_num"/>
	      <clip pos="1" side="tl" part="a_nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
        </when>
        <when><!-- collective -->
          <test>
            <equal><clip pos="1" side="sl" part="a_num"/><lit-tag v="num.coll"/></equal>
          </test>
          <let><clip pos="1" side="tl" part="a_num"/><lit-tag v="num"/></let>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_num"/>
	      <clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sp"/>
	      <clip pos="1" side="tl" part="lemq"/>
            </concat>
          </let>
        </when>
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="whole"/>
            <concat>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
      	    </concat>
          </let>
        </otherwise>
      </choose>
    </def-macro>



    <!-- Strips the case from the preposition -->
    <def-macro n="pr_adapter" npar="1">
      <let>
	<clip pos="1" side="tl" part="whole"/>
	<concat>
	  <clip pos="1" side="tl" part="lemh"/>
	  <clip pos="1" side="tl" part="a_pr"/>
	  <clip pos="1" side="tl" part="lemq"/>
	</concat>
      </let>
    </def-macro>



</section-def-macros>


<section-rules>


    <rule comment="noun">
      <pattern>
	<pattern-item n="nom"/>
      </pattern>      
      <action>
	<call-macro n="nom_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="np">
      <pattern>
	<pattern-item n="np"/>
      </pattern>      
      <action>
	<call-macro n="np_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="np" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="adj">
      <pattern>
	<pattern-item n="adj"/>
      </pattern>      
      <action>
	<call-macro n="adj_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="adj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="AdjP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="adv">
      <pattern>
	<pattern-item n="adv"/>
      </pattern>      
      <action>
        <out>
          <chunk name="adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Adv"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="preposition">
      <pattern>
	<pattern-item n="pr"/>
      </pattern>      
      <action>
    	<call-macro n="pr_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="pr" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PR"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="determiner">
      <pattern>
	<pattern-item n="det"/>
      </pattern>      
      <action>
    	<call-macro n="det_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="det" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="DET"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



 <rule comment="num">
      <pattern>
	<pattern-item n="num"/>
      </pattern>      
      <action>
	<call-macro n="num_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="num" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUM"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="part">
      <pattern>
	<pattern-item n="part"/>
      </pattern>      
      <action>
        <out>
          <chunk name="part" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PART"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="cnj">
      <pattern>
	<pattern-item n="conj"/>
      </pattern>      
      <action>
        <out>
          <chunk name="cnj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="CNJ"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="VERB (inflected)">
      <pattern>
        <pattern-item n="verb"/>
      </pattern>        
      <action>          
        <call-macro n="firstWord">
          <with-param pos="1"/>
        </call-macro>   
        <call-macro n="conj_verb1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk namefrom="lema_SV" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="a_vb"/></tag>
              <tag><var n="temps_chunk"/></tag>
              <tag><clip pos="1" side="tl" part="a_pers"/></tag>
              <tag><clip pos="1" side="tl" part="a_nbr"/></tag>
            </tags>
            <lu>
              <var n="verbfinal"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

   <rule comment="det_nom">
      <pattern>
	<pattern-item n="det"/>
	<pattern-item n="nom"/>
      </pattern>      
      <action>
	<call-macro n="nom_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="det_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="det_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
      </action>
    </rule>


   <rule comment="adj_nom">
      <pattern>
	<pattern-item n="adj"/>
	<pattern-item n="nom"/>
      </pattern>      
      <action>
	<call-macro n="nom_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="adj_adapter"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="adj_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
      </action>
    </rule>



   <rule comment="nom_nom">
      <pattern>
	<pattern-item n="nom"/>
	<pattern-item n="nom"/>
      </pattern>      
      <action>
	<call-macro n="nom_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="nom_adapter"><with-param pos="2"/></call-macro>
        <choose>
          <when>
            <test>
              <equal><clip pos="2" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
            </test>
	  <out>
          <chunk name="nom_of_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="of"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
       </when>
       <otherwise>
        <out>
          <chunk name="nom_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
      </otherwise>
        </choose>
      </action>
    </rule>


 <rule comment="det_nom_nom">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="nom"/>
        <pattern-item n="nom"/>
      </pattern>      
      <action>
        <call-macro n="nom_adapter"><with-param pos="2"/></call-macro>
        <call-macro n="nom_adapter"><with-param pos="3"/></call-macro>
        <call-macro n="det_adapter"><with-param pos="1"/></call-macro>
       <choose>   
          <when>  
            <test>
              <equal><clip pos="3" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
            </test>
          <out>   
          <chunk name="det_nom_of_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>  
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <lit v="of"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
       </when>     
       <otherwise>
        <out>
          <chunk name="det_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu> 

            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu> 
          </chunk>
        </out> 
      </otherwise>
      </choose>
      </action>
    </rule>



 <rule comment="det_adj_nom">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>      
      <action>
        <call-macro n="nom_adapter"><with-param pos="3"/></call-macro>
        <call-macro n="adj_adapter"><with-param pos="2"/></call-macro>
        <call-macro n="det_adapter"><with-param pos="1"/></call-macro>
       <choose>   
         <when>  
            <test>
            <and>
              <equal><clip pos="3" side="sl" part="a_case"/><lit-tag v="gen"/></equal>

              <equal><clip pos="2" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
  
              <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
            </and>
           </test>
          <out>   
          <chunk name="of_det_adj_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <lit v="of"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>  
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
       </when>     

       <otherwise>  

        <choose> 
          <when>  
            <test>
             <in>
              <clip pos="3" side="tl" part="lem"/>
              <list n="weekdays"/>
             </in>     
           </test>
          <out>   
          <chunk name="adj_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>  
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
       </when>     
       <otherwise>
        <out>
          <chunk name="det_adj_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu> 

            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu> 
          </chunk>
        </out> 
      </otherwise>     
     </choose>
      </otherwise>
      </choose>
      </action>
    </rule>





 <rule comment="adj_nom_nom">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
        <pattern-item n="nom"/>
      </pattern>      
      <action>
        <call-macro n="nom_adapter"><with-param pos="2"/></call-macro>
        <call-macro n="nom_adapter"><with-param pos="3"/></call-macro>
        <call-macro n="adj_adapter"><with-param pos="1"/></call-macro>
       <choose>   
          <when>  
            <test>
              <equal><clip pos="3" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
           </test>
          <out>   
          <chunk name="a_adj_nom_of_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <lit v="a"/>
              <lit-tag v="det.ind.sg"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>  
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <lit v="of"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out> 
       </when>     
       <otherwise>
        <out>
          <chunk name="adj_nom_nom" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu> 

            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu> 
          </chunk>
        </out> 
      </otherwise>
      </choose>
      </action>
    </rule>



    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

</section-rules>



</transfer>

